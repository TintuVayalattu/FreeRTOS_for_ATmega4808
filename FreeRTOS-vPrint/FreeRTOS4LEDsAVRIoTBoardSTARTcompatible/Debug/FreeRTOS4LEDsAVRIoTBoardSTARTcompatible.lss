
FreeRTOS4LEDsAVRIoTBoardSTARTcompatible.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000064  00802800  00001bd5  00001c89  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00001bb8  00000000  00000000  000000b4  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       0000001d  00005bb8  00001bb8  00001c6c  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .bss          0000088f  00802864  00802864  00001ced  2**0
                  ALLOC
  4 .comment      0000008c  00000000  00000000  00001ced  2**0
                  CONTENTS, READONLY
  5 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00001d7c  2**2
                  CONTENTS, READONLY
  6 .debug_aranges 000004a0  00000000  00000000  00001dc0  2**3
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_info   0000789b  00000000  00000000  00002260  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 000032e4  00000000  00000000  00009afb  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_line   00002ea0  00000000  00000000  0000cddf  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_frame  00000c68  00000000  00000000  0000fc80  2**2
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_str    00002cac  00000000  00000000  000108e8  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_loc    0000404f  00000000  00000000  00013594  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_ranges 00000458  00000000  00000000  000175e3  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 48 00 	jmp	0x90	; 0x90 <__ctors_end>
       4:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
       8:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
       c:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      10:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      14:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      18:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      1c:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      20:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      24:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      28:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      2c:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      30:	0c 94 f0 01 	jmp	0x3e0	; 0x3e0 <__vector_12>
      34:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      38:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      3c:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      40:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      44:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      48:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      4c:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      50:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      54:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      58:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      5c:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      60:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      64:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      68:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      6c:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      70:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      74:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      78:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      7c:	0c 94 65 0a 	jmp	0x14ca	; 0x14ca <__vector_31>
      80:	0c 94 8e 0a 	jmp	0x151c	; 0x151c <__vector_32>
      84:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      88:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      8c:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>

00000090 <__ctors_end>:
      90:	11 24       	eor	r1, r1
      92:	1f be       	out	0x3f, r1	; 63
      94:	cf ef       	ldi	r28, 0xFF	; 255
      96:	cd bf       	out	0x3d, r28	; 61
      98:	df e3       	ldi	r29, 0x3F	; 63
      9a:	de bf       	out	0x3e, r29	; 62

0000009c <__do_copy_data>:
      9c:	18 e2       	ldi	r17, 0x28	; 40
      9e:	a0 e0       	ldi	r26, 0x00	; 0
      a0:	b8 e2       	ldi	r27, 0x28	; 40
      a2:	e5 ed       	ldi	r30, 0xD5	; 213
      a4:	fb e1       	ldi	r31, 0x1B	; 27
      a6:	02 c0       	rjmp	.+4      	; 0xac <__do_copy_data+0x10>
      a8:	05 90       	lpm	r0, Z+
      aa:	0d 92       	st	X+, r0
      ac:	a4 36       	cpi	r26, 0x64	; 100
      ae:	b1 07       	cpc	r27, r17
      b0:	d9 f7       	brne	.-10     	; 0xa8 <__do_copy_data+0xc>

000000b2 <__do_clear_bss>:
      b2:	20 e3       	ldi	r18, 0x30	; 48
      b4:	a4 e6       	ldi	r26, 0x64	; 100
      b6:	b8 e2       	ldi	r27, 0x28	; 40
      b8:	01 c0       	rjmp	.+2      	; 0xbc <.do_clear_bss_start>

000000ba <.do_clear_bss_loop>:
      ba:	1d 92       	st	X+, r1

000000bc <.do_clear_bss_start>:
      bc:	a3 3f       	cpi	r26, 0xF3	; 243
      be:	b2 07       	cpc	r27, r18
      c0:	e1 f7       	brne	.-8      	; 0xba <.do_clear_bss_loop>
      c2:	0e 94 56 09 	call	0x12ac	; 0x12ac <main>
      c6:	0c 94 da 0d 	jmp	0x1bb4	; 0x1bb4 <_exit>

000000ca <__bad_interrupt>:
      ca:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000ce <atmel_start_init>:
/**
 * Initializes MCU, drivers and middleware in the project
 **/
void atmel_start_init(void)
{
	system_init();
      ce:	0e 94 09 0a 	call	0x1412	; 0x1412 <system_init>
      d2:	08 95       	ret

000000d4 <vListInitialise>:
      d4:	fc 01       	movw	r30, r24
      d6:	03 96       	adiw	r24, 0x03	; 3
      d8:	81 83       	std	Z+1, r24	; 0x01
      da:	92 83       	std	Z+2, r25	; 0x02
      dc:	2f ef       	ldi	r18, 0xFF	; 255
      de:	3f ef       	ldi	r19, 0xFF	; 255
      e0:	23 83       	std	Z+3, r18	; 0x03
      e2:	34 83       	std	Z+4, r19	; 0x04
      e4:	85 83       	std	Z+5, r24	; 0x05
      e6:	96 83       	std	Z+6, r25	; 0x06
      e8:	87 83       	std	Z+7, r24	; 0x07
      ea:	90 87       	std	Z+8, r25	; 0x08
      ec:	10 82       	st	Z, r1
      ee:	08 95       	ret

000000f0 <vListInitialiseItem>:
      f0:	fc 01       	movw	r30, r24
      f2:	10 86       	std	Z+8, r1	; 0x08
      f4:	11 86       	std	Z+9, r1	; 0x09
      f6:	08 95       	ret

000000f8 <vListInsertEnd>:
      f8:	cf 93       	push	r28
      fa:	df 93       	push	r29
      fc:	9c 01       	movw	r18, r24
      fe:	fb 01       	movw	r30, r22
     100:	dc 01       	movw	r26, r24
     102:	11 96       	adiw	r26, 0x01	; 1
     104:	cd 91       	ld	r28, X+
     106:	dc 91       	ld	r29, X
     108:	12 97       	sbiw	r26, 0x02	; 2
     10a:	c2 83       	std	Z+2, r28	; 0x02
     10c:	d3 83       	std	Z+3, r29	; 0x03
     10e:	8c 81       	ldd	r24, Y+4	; 0x04
     110:	9d 81       	ldd	r25, Y+5	; 0x05
     112:	84 83       	std	Z+4, r24	; 0x04
     114:	95 83       	std	Z+5, r25	; 0x05
     116:	8c 81       	ldd	r24, Y+4	; 0x04
     118:	9d 81       	ldd	r25, Y+5	; 0x05
     11a:	dc 01       	movw	r26, r24
     11c:	12 96       	adiw	r26, 0x02	; 2
     11e:	6d 93       	st	X+, r22
     120:	7c 93       	st	X, r23
     122:	13 97       	sbiw	r26, 0x03	; 3
     124:	6c 83       	std	Y+4, r22	; 0x04
     126:	7d 83       	std	Y+5, r23	; 0x05
     128:	20 87       	std	Z+8, r18	; 0x08
     12a:	31 87       	std	Z+9, r19	; 0x09
     12c:	f9 01       	movw	r30, r18
     12e:	80 81       	ld	r24, Z
     130:	8f 5f       	subi	r24, 0xFF	; 255
     132:	80 83       	st	Z, r24
     134:	df 91       	pop	r29
     136:	cf 91       	pop	r28
     138:	08 95       	ret

0000013a <vListInsert>:
     13a:	cf 93       	push	r28
     13c:	df 93       	push	r29
     13e:	eb 01       	movw	r28, r22
     140:	48 81       	ld	r20, Y
     142:	59 81       	ldd	r21, Y+1	; 0x01
     144:	4f 3f       	cpi	r20, 0xFF	; 255
     146:	2f ef       	ldi	r18, 0xFF	; 255
     148:	52 07       	cpc	r21, r18
     14a:	21 f4       	brne	.+8      	; 0x154 <vListInsert+0x1a>
     14c:	fc 01       	movw	r30, r24
     14e:	a7 81       	ldd	r26, Z+7	; 0x07
     150:	b0 85       	ldd	r27, Z+8	; 0x08
     152:	0d c0       	rjmp	.+26     	; 0x16e <vListInsert+0x34>
     154:	dc 01       	movw	r26, r24
     156:	13 96       	adiw	r26, 0x03	; 3
     158:	01 c0       	rjmp	.+2      	; 0x15c <vListInsert+0x22>
     15a:	df 01       	movw	r26, r30
     15c:	12 96       	adiw	r26, 0x02	; 2
     15e:	ed 91       	ld	r30, X+
     160:	fc 91       	ld	r31, X
     162:	13 97       	sbiw	r26, 0x03	; 3
     164:	20 81       	ld	r18, Z
     166:	31 81       	ldd	r19, Z+1	; 0x01
     168:	42 17       	cp	r20, r18
     16a:	53 07       	cpc	r21, r19
     16c:	b0 f7       	brcc	.-20     	; 0x15a <vListInsert+0x20>
     16e:	12 96       	adiw	r26, 0x02	; 2
     170:	ed 91       	ld	r30, X+
     172:	fc 91       	ld	r31, X
     174:	13 97       	sbiw	r26, 0x03	; 3
     176:	ea 83       	std	Y+2, r30	; 0x02
     178:	fb 83       	std	Y+3, r31	; 0x03
     17a:	c4 83       	std	Z+4, r28	; 0x04
     17c:	d5 83       	std	Z+5, r29	; 0x05
     17e:	ac 83       	std	Y+4, r26	; 0x04
     180:	bd 83       	std	Y+5, r27	; 0x05
     182:	12 96       	adiw	r26, 0x02	; 2
     184:	cd 93       	st	X+, r28
     186:	dc 93       	st	X, r29
     188:	13 97       	sbiw	r26, 0x03	; 3
     18a:	88 87       	std	Y+8, r24	; 0x08
     18c:	99 87       	std	Y+9, r25	; 0x09
     18e:	fc 01       	movw	r30, r24
     190:	20 81       	ld	r18, Z
     192:	2f 5f       	subi	r18, 0xFF	; 255
     194:	20 83       	st	Z, r18
     196:	df 91       	pop	r29
     198:	cf 91       	pop	r28
     19a:	08 95       	ret

0000019c <uxListRemove>:
     19c:	cf 93       	push	r28
     19e:	df 93       	push	r29
     1a0:	fc 01       	movw	r30, r24
     1a2:	a0 85       	ldd	r26, Z+8	; 0x08
     1a4:	b1 85       	ldd	r27, Z+9	; 0x09
     1a6:	c2 81       	ldd	r28, Z+2	; 0x02
     1a8:	d3 81       	ldd	r29, Z+3	; 0x03
     1aa:	84 81       	ldd	r24, Z+4	; 0x04
     1ac:	95 81       	ldd	r25, Z+5	; 0x05
     1ae:	8c 83       	std	Y+4, r24	; 0x04
     1b0:	9d 83       	std	Y+5, r25	; 0x05
     1b2:	c4 81       	ldd	r28, Z+4	; 0x04
     1b4:	d5 81       	ldd	r29, Z+5	; 0x05
     1b6:	82 81       	ldd	r24, Z+2	; 0x02
     1b8:	93 81       	ldd	r25, Z+3	; 0x03
     1ba:	8a 83       	std	Y+2, r24	; 0x02
     1bc:	9b 83       	std	Y+3, r25	; 0x03
     1be:	11 96       	adiw	r26, 0x01	; 1
     1c0:	8d 91       	ld	r24, X+
     1c2:	9c 91       	ld	r25, X
     1c4:	12 97       	sbiw	r26, 0x02	; 2
     1c6:	e8 17       	cp	r30, r24
     1c8:	f9 07       	cpc	r31, r25
     1ca:	31 f4       	brne	.+12     	; 0x1d8 <uxListRemove+0x3c>
     1cc:	84 81       	ldd	r24, Z+4	; 0x04
     1ce:	95 81       	ldd	r25, Z+5	; 0x05
     1d0:	11 96       	adiw	r26, 0x01	; 1
     1d2:	8d 93       	st	X+, r24
     1d4:	9c 93       	st	X, r25
     1d6:	12 97       	sbiw	r26, 0x02	; 2
     1d8:	10 86       	std	Z+8, r1	; 0x08
     1da:	11 86       	std	Z+9, r1	; 0x09
     1dc:	8c 91       	ld	r24, X
     1de:	81 50       	subi	r24, 0x01	; 1
     1e0:	8c 93       	st	X, r24
     1e2:	8c 91       	ld	r24, X
     1e4:	df 91       	pop	r29
     1e6:	cf 91       	pop	r28
     1e8:	08 95       	ret

000001ea <pxPortInitialiseStack>:
     1ea:	fc 01       	movw	r30, r24
     1ec:	60 83       	st	Z, r22
     1ee:	31 97       	sbiw	r30, 0x01	; 1
     1f0:	70 83       	st	Z, r23
     1f2:	31 97       	sbiw	r30, 0x01	; 1
     1f4:	10 82       	st	Z, r1
     1f6:	31 97       	sbiw	r30, 0x01	; 1
     1f8:	20 e8       	ldi	r18, 0x80	; 128
     1fa:	20 83       	st	Z, r18
     1fc:	31 97       	sbiw	r30, 0x01	; 1
     1fe:	10 82       	st	Z, r1
     200:	77 97       	sbiw	r30, 0x17	; 23
     202:	40 83       	st	Z, r20
     204:	31 97       	sbiw	r30, 0x01	; 1
     206:	50 83       	st	Z, r21
     208:	83 97       	sbiw	r24, 0x23	; 35
     20a:	08 95       	ret

0000020c <xPortStartScheduler>:
     20c:	e0 e8       	ldi	r30, 0x80	; 128
     20e:	fa e0       	ldi	r31, 0x0A	; 10
     210:	80 e1       	ldi	r24, 0x10	; 16
     212:	97 e2       	ldi	r25, 0x27	; 39
     214:	84 87       	std	Z+12, r24	; 0x0c
     216:	95 87       	std	Z+13, r25	; 0x0d
     218:	81 e0       	ldi	r24, 0x01	; 1
     21a:	85 83       	std	Z+5, r24	; 0x05
     21c:	80 83       	st	Z, r24
     21e:	a0 91 c2 30 	lds	r26, 0x30C2	; 0x8030c2 <pxCurrentTCB>
     222:	b0 91 c3 30 	lds	r27, 0x30C3	; 0x8030c3 <pxCurrentTCB+0x1>
     226:	cd 91       	ld	r28, X+
     228:	cd bf       	out	0x3d, r28	; 61
     22a:	dd 91       	ld	r29, X+
     22c:	de bf       	out	0x3e, r29	; 62
     22e:	ff 91       	pop	r31
     230:	ef 91       	pop	r30
     232:	df 91       	pop	r29
     234:	cf 91       	pop	r28
     236:	bf 91       	pop	r27
     238:	af 91       	pop	r26
     23a:	9f 91       	pop	r25
     23c:	8f 91       	pop	r24
     23e:	7f 91       	pop	r23
     240:	6f 91       	pop	r22
     242:	5f 91       	pop	r21
     244:	4f 91       	pop	r20
     246:	3f 91       	pop	r19
     248:	2f 91       	pop	r18
     24a:	1f 91       	pop	r17
     24c:	0f 91       	pop	r16
     24e:	ff 90       	pop	r15
     250:	ef 90       	pop	r14
     252:	df 90       	pop	r13
     254:	cf 90       	pop	r12
     256:	bf 90       	pop	r11
     258:	af 90       	pop	r10
     25a:	9f 90       	pop	r9
     25c:	8f 90       	pop	r8
     25e:	7f 90       	pop	r7
     260:	6f 90       	pop	r6
     262:	5f 90       	pop	r5
     264:	4f 90       	pop	r4
     266:	3f 90       	pop	r3
     268:	2f 90       	pop	r2
     26a:	1f 90       	pop	r1
     26c:	0f 90       	pop	r0
     26e:	0f be       	out	0x3f, r0	; 63
     270:	0f 90       	pop	r0
     272:	08 95       	ret
     274:	08 95       	ret

00000276 <vPortYield>:
     276:	0f 92       	push	r0
     278:	0f b6       	in	r0, 0x3f	; 63
     27a:	f8 94       	cli
     27c:	0f 92       	push	r0
     27e:	1f 92       	push	r1
     280:	11 24       	eor	r1, r1
     282:	2f 92       	push	r2
     284:	3f 92       	push	r3
     286:	4f 92       	push	r4
     288:	5f 92       	push	r5
     28a:	6f 92       	push	r6
     28c:	7f 92       	push	r7
     28e:	8f 92       	push	r8
     290:	9f 92       	push	r9
     292:	af 92       	push	r10
     294:	bf 92       	push	r11
     296:	cf 92       	push	r12
     298:	df 92       	push	r13
     29a:	ef 92       	push	r14
     29c:	ff 92       	push	r15
     29e:	0f 93       	push	r16
     2a0:	1f 93       	push	r17
     2a2:	2f 93       	push	r18
     2a4:	3f 93       	push	r19
     2a6:	4f 93       	push	r20
     2a8:	5f 93       	push	r21
     2aa:	6f 93       	push	r22
     2ac:	7f 93       	push	r23
     2ae:	8f 93       	push	r24
     2b0:	9f 93       	push	r25
     2b2:	af 93       	push	r26
     2b4:	bf 93       	push	r27
     2b6:	cf 93       	push	r28
     2b8:	df 93       	push	r29
     2ba:	ef 93       	push	r30
     2bc:	ff 93       	push	r31
     2be:	a0 91 c2 30 	lds	r26, 0x30C2	; 0x8030c2 <pxCurrentTCB>
     2c2:	b0 91 c3 30 	lds	r27, 0x30C3	; 0x8030c3 <pxCurrentTCB+0x1>
     2c6:	0d b6       	in	r0, 0x3d	; 61
     2c8:	0d 92       	st	X+, r0
     2ca:	0e b6       	in	r0, 0x3e	; 62
     2cc:	0d 92       	st	X+, r0
     2ce:	0e 94 d7 07 	call	0xfae	; 0xfae <vTaskSwitchContext>
     2d2:	a0 91 c2 30 	lds	r26, 0x30C2	; 0x8030c2 <pxCurrentTCB>
     2d6:	b0 91 c3 30 	lds	r27, 0x30C3	; 0x8030c3 <pxCurrentTCB+0x1>
     2da:	cd 91       	ld	r28, X+
     2dc:	cd bf       	out	0x3d, r28	; 61
     2de:	dd 91       	ld	r29, X+
     2e0:	de bf       	out	0x3e, r29	; 62
     2e2:	ff 91       	pop	r31
     2e4:	ef 91       	pop	r30
     2e6:	df 91       	pop	r29
     2e8:	cf 91       	pop	r28
     2ea:	bf 91       	pop	r27
     2ec:	af 91       	pop	r26
     2ee:	9f 91       	pop	r25
     2f0:	8f 91       	pop	r24
     2f2:	7f 91       	pop	r23
     2f4:	6f 91       	pop	r22
     2f6:	5f 91       	pop	r21
     2f8:	4f 91       	pop	r20
     2fa:	3f 91       	pop	r19
     2fc:	2f 91       	pop	r18
     2fe:	1f 91       	pop	r17
     300:	0f 91       	pop	r16
     302:	ff 90       	pop	r15
     304:	ef 90       	pop	r14
     306:	df 90       	pop	r13
     308:	cf 90       	pop	r12
     30a:	bf 90       	pop	r11
     30c:	af 90       	pop	r10
     30e:	9f 90       	pop	r9
     310:	8f 90       	pop	r8
     312:	7f 90       	pop	r7
     314:	6f 90       	pop	r6
     316:	5f 90       	pop	r5
     318:	4f 90       	pop	r4
     31a:	3f 90       	pop	r3
     31c:	2f 90       	pop	r2
     31e:	1f 90       	pop	r1
     320:	0f 90       	pop	r0
     322:	0f be       	out	0x3f, r0	; 63
     324:	0f 90       	pop	r0
     326:	08 95       	ret

00000328 <vPortYieldFromTick>:
     328:	0f 92       	push	r0
     32a:	0f b6       	in	r0, 0x3f	; 63
     32c:	f8 94       	cli
     32e:	0f 92       	push	r0
     330:	1f 92       	push	r1
     332:	11 24       	eor	r1, r1
     334:	2f 92       	push	r2
     336:	3f 92       	push	r3
     338:	4f 92       	push	r4
     33a:	5f 92       	push	r5
     33c:	6f 92       	push	r6
     33e:	7f 92       	push	r7
     340:	8f 92       	push	r8
     342:	9f 92       	push	r9
     344:	af 92       	push	r10
     346:	bf 92       	push	r11
     348:	cf 92       	push	r12
     34a:	df 92       	push	r13
     34c:	ef 92       	push	r14
     34e:	ff 92       	push	r15
     350:	0f 93       	push	r16
     352:	1f 93       	push	r17
     354:	2f 93       	push	r18
     356:	3f 93       	push	r19
     358:	4f 93       	push	r20
     35a:	5f 93       	push	r21
     35c:	6f 93       	push	r22
     35e:	7f 93       	push	r23
     360:	8f 93       	push	r24
     362:	9f 93       	push	r25
     364:	af 93       	push	r26
     366:	bf 93       	push	r27
     368:	cf 93       	push	r28
     36a:	df 93       	push	r29
     36c:	ef 93       	push	r30
     36e:	ff 93       	push	r31
     370:	a0 91 c2 30 	lds	r26, 0x30C2	; 0x8030c2 <pxCurrentTCB>
     374:	b0 91 c3 30 	lds	r27, 0x30C3	; 0x8030c3 <pxCurrentTCB+0x1>
     378:	0d b6       	in	r0, 0x3d	; 61
     37a:	0d 92       	st	X+, r0
     37c:	0e b6       	in	r0, 0x3e	; 62
     37e:	0d 92       	st	X+, r0
     380:	0e 94 8c 06 	call	0xd18	; 0xd18 <xTaskIncrementTick>
     384:	81 11       	cpse	r24, r1
     386:	0e 94 d7 07 	call	0xfae	; 0xfae <vTaskSwitchContext>
     38a:	a0 91 c2 30 	lds	r26, 0x30C2	; 0x8030c2 <pxCurrentTCB>
     38e:	b0 91 c3 30 	lds	r27, 0x30C3	; 0x8030c3 <pxCurrentTCB+0x1>
     392:	cd 91       	ld	r28, X+
     394:	cd bf       	out	0x3d, r28	; 61
     396:	dd 91       	ld	r29, X+
     398:	de bf       	out	0x3e, r29	; 62
     39a:	ff 91       	pop	r31
     39c:	ef 91       	pop	r30
     39e:	df 91       	pop	r29
     3a0:	cf 91       	pop	r28
     3a2:	bf 91       	pop	r27
     3a4:	af 91       	pop	r26
     3a6:	9f 91       	pop	r25
     3a8:	8f 91       	pop	r24
     3aa:	7f 91       	pop	r23
     3ac:	6f 91       	pop	r22
     3ae:	5f 91       	pop	r21
     3b0:	4f 91       	pop	r20
     3b2:	3f 91       	pop	r19
     3b4:	2f 91       	pop	r18
     3b6:	1f 91       	pop	r17
     3b8:	0f 91       	pop	r16
     3ba:	ff 90       	pop	r15
     3bc:	ef 90       	pop	r14
     3be:	df 90       	pop	r13
     3c0:	cf 90       	pop	r12
     3c2:	bf 90       	pop	r11
     3c4:	af 90       	pop	r10
     3c6:	9f 90       	pop	r9
     3c8:	8f 90       	pop	r8
     3ca:	7f 90       	pop	r7
     3cc:	6f 90       	pop	r6
     3ce:	5f 90       	pop	r5
     3d0:	4f 90       	pop	r4
     3d2:	3f 90       	pop	r3
     3d4:	2f 90       	pop	r2
     3d6:	1f 90       	pop	r1
     3d8:	0f 90       	pop	r0
     3da:	0f be       	out	0x3f, r0	; 63
     3dc:	0f 90       	pop	r0
     3de:	18 95       	reti

000003e0 <__vector_12>:
     3e0:	0f 93       	push	r16
     3e2:	01 e0       	ldi	r16, 0x01	; 1
     3e4:	00 93 86 0a 	sts	0x0A86, r16	; 0x800a86 <__TEXT_REGION_LENGTH__+0x700a86>
     3e8:	0f 91       	pop	r16
     3ea:	0e 94 94 01 	call	0x328	; 0x328 <vPortYieldFromTick>
     3ee:	18 95       	reti

000003f0 <pvPortMalloc>:
     3f0:	cf 93       	push	r28
     3f2:	df 93       	push	r29
     3f4:	ec 01       	movw	r28, r24
     3f6:	0e 94 86 06 	call	0xd0c	; 0xd0c <vTaskSuspendAll>
     3fa:	80 91 64 28 	lds	r24, 0x2864	; 0x802864 <__data_end>
     3fe:	90 91 65 28 	lds	r25, 0x2865	; 0x802865 <__data_end+0x1>
     402:	89 2b       	or	r24, r25
     404:	31 f4       	brne	.+12     	; 0x412 <__LOCK_REGION_LENGTH__+0x12>
     406:	89 e6       	ldi	r24, 0x69	; 105
     408:	98 e2       	ldi	r25, 0x28	; 40
     40a:	80 93 64 28 	sts	0x2864, r24	; 0x802864 <__data_end>
     40e:	90 93 65 28 	sts	0x2865, r25	; 0x802865 <__data_end+0x1>
     412:	20 91 66 28 	lds	r18, 0x2866	; 0x802866 <xNextFreeByte>
     416:	30 91 67 28 	lds	r19, 0x2867	; 0x802867 <xNextFreeByte+0x1>
     41a:	c9 01       	movw	r24, r18
     41c:	8c 0f       	add	r24, r28
     41e:	9d 1f       	adc	r25, r29
     420:	8f 3f       	cpi	r24, 0xFF	; 255
     422:	47 e0       	ldi	r20, 0x07	; 7
     424:	94 07       	cpc	r25, r20
     426:	70 f4       	brcc	.+28     	; 0x444 <__LOCK_REGION_LENGTH__+0x44>
     428:	28 17       	cp	r18, r24
     42a:	39 07       	cpc	r19, r25
     42c:	70 f4       	brcc	.+28     	; 0x44a <__LOCK_REGION_LENGTH__+0x4a>
     42e:	c0 91 64 28 	lds	r28, 0x2864	; 0x802864 <__data_end>
     432:	d0 91 65 28 	lds	r29, 0x2865	; 0x802865 <__data_end+0x1>
     436:	c2 0f       	add	r28, r18
     438:	d3 1f       	adc	r29, r19
     43a:	80 93 66 28 	sts	0x2866, r24	; 0x802866 <xNextFreeByte>
     43e:	90 93 67 28 	sts	0x2867, r25	; 0x802867 <xNextFreeByte+0x1>
     442:	05 c0       	rjmp	.+10     	; 0x44e <__LOCK_REGION_LENGTH__+0x4e>
     444:	c0 e0       	ldi	r28, 0x00	; 0
     446:	d0 e0       	ldi	r29, 0x00	; 0
     448:	02 c0       	rjmp	.+4      	; 0x44e <__LOCK_REGION_LENGTH__+0x4e>
     44a:	c0 e0       	ldi	r28, 0x00	; 0
     44c:	d0 e0       	ldi	r29, 0x00	; 0
     44e:	0e 94 44 07 	call	0xe88	; 0xe88 <xTaskResumeAll>
     452:	ce 01       	movw	r24, r28
     454:	df 91       	pop	r29
     456:	cf 91       	pop	r28
     458:	08 95       	ret

0000045a <vPortFree>:
     45a:	08 95       	ret

0000045c <prvIsQueueEmpty>:
     45c:	0f b6       	in	r0, 0x3f	; 63
     45e:	f8 94       	cli
     460:	0f 92       	push	r0
     462:	fc 01       	movw	r30, r24
     464:	92 8d       	ldd	r25, Z+26	; 0x1a
     466:	0f 90       	pop	r0
     468:	0f be       	out	0x3f, r0	; 63
     46a:	81 e0       	ldi	r24, 0x01	; 1
     46c:	91 11       	cpse	r25, r1
     46e:	80 e0       	ldi	r24, 0x00	; 0
     470:	08 95       	ret

00000472 <prvCopyDataToQueue>:
     472:	0f 93       	push	r16
     474:	1f 93       	push	r17
     476:	cf 93       	push	r28
     478:	df 93       	push	r29
     47a:	ec 01       	movw	r28, r24
     47c:	04 2f       	mov	r16, r20
     47e:	1a 8d       	ldd	r17, Y+26	; 0x1a
     480:	4c 8d       	ldd	r20, Y+28	; 0x1c
     482:	41 11       	cpse	r20, r1
     484:	0c c0       	rjmp	.+24     	; 0x49e <prvCopyDataToQueue+0x2c>
     486:	88 81       	ld	r24, Y
     488:	99 81       	ldd	r25, Y+1	; 0x01
     48a:	89 2b       	or	r24, r25
     48c:	09 f0       	breq	.+2      	; 0x490 <prvCopyDataToQueue+0x1e>
     48e:	42 c0       	rjmp	.+132    	; 0x514 <prvCopyDataToQueue+0xa2>
     490:	8a 81       	ldd	r24, Y+2	; 0x02
     492:	9b 81       	ldd	r25, Y+3	; 0x03
     494:	0e 94 dc 08 	call	0x11b8	; 0x11b8 <xTaskPriorityDisinherit>
     498:	1a 82       	std	Y+2, r1	; 0x02
     49a:	1b 82       	std	Y+3, r1	; 0x03
     49c:	42 c0       	rjmp	.+132    	; 0x522 <prvCopyDataToQueue+0xb0>
     49e:	01 11       	cpse	r16, r1
     4a0:	17 c0       	rjmp	.+46     	; 0x4d0 <prvCopyDataToQueue+0x5e>
     4a2:	50 e0       	ldi	r21, 0x00	; 0
     4a4:	8c 81       	ldd	r24, Y+4	; 0x04
     4a6:	9d 81       	ldd	r25, Y+5	; 0x05
     4a8:	0e 94 f9 0a 	call	0x15f2	; 0x15f2 <memcpy>
     4ac:	2c 8d       	ldd	r18, Y+28	; 0x1c
     4ae:	8c 81       	ldd	r24, Y+4	; 0x04
     4b0:	9d 81       	ldd	r25, Y+5	; 0x05
     4b2:	82 0f       	add	r24, r18
     4b4:	91 1d       	adc	r25, r1
     4b6:	8c 83       	std	Y+4, r24	; 0x04
     4b8:	9d 83       	std	Y+5, r25	; 0x05
     4ba:	2a 81       	ldd	r18, Y+2	; 0x02
     4bc:	3b 81       	ldd	r19, Y+3	; 0x03
     4be:	82 17       	cp	r24, r18
     4c0:	93 07       	cpc	r25, r19
     4c2:	50 f1       	brcs	.+84     	; 0x518 <prvCopyDataToQueue+0xa6>
     4c4:	88 81       	ld	r24, Y
     4c6:	99 81       	ldd	r25, Y+1	; 0x01
     4c8:	8c 83       	std	Y+4, r24	; 0x04
     4ca:	9d 83       	std	Y+5, r25	; 0x05
     4cc:	80 e0       	ldi	r24, 0x00	; 0
     4ce:	29 c0       	rjmp	.+82     	; 0x522 <prvCopyDataToQueue+0xb0>
     4d0:	50 e0       	ldi	r21, 0x00	; 0
     4d2:	8e 81       	ldd	r24, Y+6	; 0x06
     4d4:	9f 81       	ldd	r25, Y+7	; 0x07
     4d6:	0e 94 f9 0a 	call	0x15f2	; 0x15f2 <memcpy>
     4da:	8c 8d       	ldd	r24, Y+28	; 0x1c
     4dc:	90 e0       	ldi	r25, 0x00	; 0
     4de:	91 95       	neg	r25
     4e0:	81 95       	neg	r24
     4e2:	91 09       	sbc	r25, r1
     4e4:	2e 81       	ldd	r18, Y+6	; 0x06
     4e6:	3f 81       	ldd	r19, Y+7	; 0x07
     4e8:	28 0f       	add	r18, r24
     4ea:	39 1f       	adc	r19, r25
     4ec:	2e 83       	std	Y+6, r18	; 0x06
     4ee:	3f 83       	std	Y+7, r19	; 0x07
     4f0:	48 81       	ld	r20, Y
     4f2:	59 81       	ldd	r21, Y+1	; 0x01
     4f4:	24 17       	cp	r18, r20
     4f6:	35 07       	cpc	r19, r21
     4f8:	30 f4       	brcc	.+12     	; 0x506 <prvCopyDataToQueue+0x94>
     4fa:	2a 81       	ldd	r18, Y+2	; 0x02
     4fc:	3b 81       	ldd	r19, Y+3	; 0x03
     4fe:	82 0f       	add	r24, r18
     500:	93 1f       	adc	r25, r19
     502:	8e 83       	std	Y+6, r24	; 0x06
     504:	9f 83       	std	Y+7, r25	; 0x07
     506:	02 30       	cpi	r16, 0x02	; 2
     508:	49 f4       	brne	.+18     	; 0x51c <prvCopyDataToQueue+0xaa>
     50a:	11 23       	and	r17, r17
     50c:	49 f0       	breq	.+18     	; 0x520 <prvCopyDataToQueue+0xae>
     50e:	11 50       	subi	r17, 0x01	; 1
     510:	80 e0       	ldi	r24, 0x00	; 0
     512:	07 c0       	rjmp	.+14     	; 0x522 <prvCopyDataToQueue+0xb0>
     514:	80 e0       	ldi	r24, 0x00	; 0
     516:	05 c0       	rjmp	.+10     	; 0x522 <prvCopyDataToQueue+0xb0>
     518:	80 e0       	ldi	r24, 0x00	; 0
     51a:	03 c0       	rjmp	.+6      	; 0x522 <prvCopyDataToQueue+0xb0>
     51c:	80 e0       	ldi	r24, 0x00	; 0
     51e:	01 c0       	rjmp	.+2      	; 0x522 <prvCopyDataToQueue+0xb0>
     520:	80 e0       	ldi	r24, 0x00	; 0
     522:	1f 5f       	subi	r17, 0xFF	; 255
     524:	1a 8f       	std	Y+26, r17	; 0x1a
     526:	df 91       	pop	r29
     528:	cf 91       	pop	r28
     52a:	1f 91       	pop	r17
     52c:	0f 91       	pop	r16
     52e:	08 95       	ret

00000530 <prvCopyDataFromQueue>:
     530:	fc 01       	movw	r30, r24
     532:	44 8d       	ldd	r20, Z+28	; 0x1c
     534:	44 23       	and	r20, r20
     536:	a9 f0       	breq	.+42     	; 0x562 <prvCopyDataFromQueue+0x32>
     538:	50 e0       	ldi	r21, 0x00	; 0
     53a:	26 81       	ldd	r18, Z+6	; 0x06
     53c:	37 81       	ldd	r19, Z+7	; 0x07
     53e:	24 0f       	add	r18, r20
     540:	35 1f       	adc	r19, r21
     542:	26 83       	std	Z+6, r18	; 0x06
     544:	37 83       	std	Z+7, r19	; 0x07
     546:	82 81       	ldd	r24, Z+2	; 0x02
     548:	93 81       	ldd	r25, Z+3	; 0x03
     54a:	28 17       	cp	r18, r24
     54c:	39 07       	cpc	r19, r25
     54e:	20 f0       	brcs	.+8      	; 0x558 <prvCopyDataFromQueue+0x28>
     550:	80 81       	ld	r24, Z
     552:	91 81       	ldd	r25, Z+1	; 0x01
     554:	86 83       	std	Z+6, r24	; 0x06
     556:	97 83       	std	Z+7, r25	; 0x07
     558:	cb 01       	movw	r24, r22
     55a:	66 81       	ldd	r22, Z+6	; 0x06
     55c:	77 81       	ldd	r23, Z+7	; 0x07
     55e:	0e 94 f9 0a 	call	0x15f2	; 0x15f2 <memcpy>
     562:	08 95       	ret

00000564 <prvUnlockQueue>:
     564:	ef 92       	push	r14
     566:	ff 92       	push	r15
     568:	0f 93       	push	r16
     56a:	1f 93       	push	r17
     56c:	cf 93       	push	r28
     56e:	8c 01       	movw	r16, r24
     570:	0f b6       	in	r0, 0x3f	; 63
     572:	f8 94       	cli
     574:	0f 92       	push	r0
     576:	fc 01       	movw	r30, r24
     578:	c6 8d       	ldd	r28, Z+30	; 0x1e
     57a:	1c 16       	cp	r1, r28
     57c:	ac f4       	brge	.+42     	; 0x5a8 <prvUnlockQueue+0x44>
     57e:	81 89       	ldd	r24, Z+17	; 0x11
     580:	81 11       	cpse	r24, r1
     582:	06 c0       	rjmp	.+12     	; 0x590 <prvUnlockQueue+0x2c>
     584:	11 c0       	rjmp	.+34     	; 0x5a8 <prvUnlockQueue+0x44>
     586:	f8 01       	movw	r30, r16
     588:	81 89       	ldd	r24, Z+17	; 0x11
     58a:	81 11       	cpse	r24, r1
     58c:	05 c0       	rjmp	.+10     	; 0x598 <prvUnlockQueue+0x34>
     58e:	0c c0       	rjmp	.+24     	; 0x5a8 <prvUnlockQueue+0x44>
     590:	78 01       	movw	r14, r16
     592:	f1 e1       	ldi	r31, 0x11	; 17
     594:	ef 0e       	add	r14, r31
     596:	f1 1c       	adc	r15, r1
     598:	c7 01       	movw	r24, r14
     59a:	0e 94 4f 08 	call	0x109e	; 0x109e <xTaskRemoveFromEventList>
     59e:	81 11       	cpse	r24, r1
     5a0:	0e 94 d8 08 	call	0x11b0	; 0x11b0 <vTaskMissedYield>
     5a4:	c1 50       	subi	r28, 0x01	; 1
     5a6:	79 f7       	brne	.-34     	; 0x586 <prvUnlockQueue+0x22>
     5a8:	8f ef       	ldi	r24, 0xFF	; 255
     5aa:	f8 01       	movw	r30, r16
     5ac:	86 8f       	std	Z+30, r24	; 0x1e
     5ae:	0f 90       	pop	r0
     5b0:	0f be       	out	0x3f, r0	; 63
     5b2:	0f b6       	in	r0, 0x3f	; 63
     5b4:	f8 94       	cli
     5b6:	0f 92       	push	r0
     5b8:	c5 8d       	ldd	r28, Z+29	; 0x1d
     5ba:	1c 16       	cp	r1, r28
     5bc:	ac f4       	brge	.+42     	; 0x5e8 <prvUnlockQueue+0x84>
     5be:	80 85       	ldd	r24, Z+8	; 0x08
     5c0:	81 11       	cpse	r24, r1
     5c2:	06 c0       	rjmp	.+12     	; 0x5d0 <prvUnlockQueue+0x6c>
     5c4:	11 c0       	rjmp	.+34     	; 0x5e8 <prvUnlockQueue+0x84>
     5c6:	f8 01       	movw	r30, r16
     5c8:	80 85       	ldd	r24, Z+8	; 0x08
     5ca:	81 11       	cpse	r24, r1
     5cc:	05 c0       	rjmp	.+10     	; 0x5d8 <prvUnlockQueue+0x74>
     5ce:	0c c0       	rjmp	.+24     	; 0x5e8 <prvUnlockQueue+0x84>
     5d0:	78 01       	movw	r14, r16
     5d2:	f8 e0       	ldi	r31, 0x08	; 8
     5d4:	ef 0e       	add	r14, r31
     5d6:	f1 1c       	adc	r15, r1
     5d8:	c7 01       	movw	r24, r14
     5da:	0e 94 4f 08 	call	0x109e	; 0x109e <xTaskRemoveFromEventList>
     5de:	81 11       	cpse	r24, r1
     5e0:	0e 94 d8 08 	call	0x11b0	; 0x11b0 <vTaskMissedYield>
     5e4:	c1 50       	subi	r28, 0x01	; 1
     5e6:	79 f7       	brne	.-34     	; 0x5c6 <prvUnlockQueue+0x62>
     5e8:	8f ef       	ldi	r24, 0xFF	; 255
     5ea:	f8 01       	movw	r30, r16
     5ec:	85 8f       	std	Z+29, r24	; 0x1d
     5ee:	0f 90       	pop	r0
     5f0:	0f be       	out	0x3f, r0	; 63
     5f2:	cf 91       	pop	r28
     5f4:	1f 91       	pop	r17
     5f6:	0f 91       	pop	r16
     5f8:	ff 90       	pop	r15
     5fa:	ef 90       	pop	r14
     5fc:	08 95       	ret

000005fe <xQueueGenericReset>:
     5fe:	cf 93       	push	r28
     600:	df 93       	push	r29
     602:	ec 01       	movw	r28, r24
     604:	0f b6       	in	r0, 0x3f	; 63
     606:	f8 94       	cli
     608:	0f 92       	push	r0
     60a:	48 81       	ld	r20, Y
     60c:	59 81       	ldd	r21, Y+1	; 0x01
     60e:	2c 8d       	ldd	r18, Y+28	; 0x1c
     610:	30 e0       	ldi	r19, 0x00	; 0
     612:	7b 8d       	ldd	r23, Y+27	; 0x1b
     614:	72 9f       	mul	r23, r18
     616:	c0 01       	movw	r24, r0
     618:	73 9f       	mul	r23, r19
     61a:	90 0d       	add	r25, r0
     61c:	11 24       	eor	r1, r1
     61e:	fa 01       	movw	r30, r20
     620:	e8 0f       	add	r30, r24
     622:	f9 1f       	adc	r31, r25
     624:	ea 83       	std	Y+2, r30	; 0x02
     626:	fb 83       	std	Y+3, r31	; 0x03
     628:	1a 8e       	std	Y+26, r1	; 0x1a
     62a:	4c 83       	std	Y+4, r20	; 0x04
     62c:	5d 83       	std	Y+5, r21	; 0x05
     62e:	82 1b       	sub	r24, r18
     630:	93 0b       	sbc	r25, r19
     632:	84 0f       	add	r24, r20
     634:	95 1f       	adc	r25, r21
     636:	8e 83       	std	Y+6, r24	; 0x06
     638:	9f 83       	std	Y+7, r25	; 0x07
     63a:	8f ef       	ldi	r24, 0xFF	; 255
     63c:	8d 8f       	std	Y+29, r24	; 0x1d
     63e:	8e 8f       	std	Y+30, r24	; 0x1e
     640:	61 11       	cpse	r22, r1
     642:	0c c0       	rjmp	.+24     	; 0x65c <xQueueGenericReset+0x5e>
     644:	88 85       	ldd	r24, Y+8	; 0x08
     646:	88 23       	and	r24, r24
     648:	89 f0       	breq	.+34     	; 0x66c <xQueueGenericReset+0x6e>
     64a:	ce 01       	movw	r24, r28
     64c:	08 96       	adiw	r24, 0x08	; 8
     64e:	0e 94 4f 08 	call	0x109e	; 0x109e <xTaskRemoveFromEventList>
     652:	88 23       	and	r24, r24
     654:	59 f0       	breq	.+22     	; 0x66c <xQueueGenericReset+0x6e>
     656:	0e 94 3b 01 	call	0x276	; 0x276 <vPortYield>
     65a:	08 c0       	rjmp	.+16     	; 0x66c <xQueueGenericReset+0x6e>
     65c:	ce 01       	movw	r24, r28
     65e:	08 96       	adiw	r24, 0x08	; 8
     660:	0e 94 6a 00 	call	0xd4	; 0xd4 <vListInitialise>
     664:	ce 01       	movw	r24, r28
     666:	41 96       	adiw	r24, 0x11	; 17
     668:	0e 94 6a 00 	call	0xd4	; 0xd4 <vListInitialise>
     66c:	0f 90       	pop	r0
     66e:	0f be       	out	0x3f, r0	; 63
     670:	81 e0       	ldi	r24, 0x01	; 1
     672:	df 91       	pop	r29
     674:	cf 91       	pop	r28
     676:	08 95       	ret

00000678 <xQueueGenericCreate>:
     678:	0f 93       	push	r16
     67a:	1f 93       	push	r17
     67c:	cf 93       	push	r28
     67e:	df 93       	push	r29
     680:	08 2f       	mov	r16, r24
     682:	16 2f       	mov	r17, r22
     684:	66 23       	and	r22, r22
     686:	c1 f0       	breq	.+48     	; 0x6b8 <xQueueGenericCreate+0x40>
     688:	86 9f       	mul	r24, r22
     68a:	c0 01       	movw	r24, r0
     68c:	11 24       	eor	r1, r1
     68e:	4f 96       	adiw	r24, 0x1f	; 31
     690:	0e 94 f8 01 	call	0x3f0	; 0x3f0 <pvPortMalloc>
     694:	ec 01       	movw	r28, r24
     696:	00 97       	sbiw	r24, 0x00	; 0
     698:	41 f4       	brne	.+16     	; 0x6aa <xQueueGenericCreate+0x32>
     69a:	15 c0       	rjmp	.+42     	; 0x6c6 <xQueueGenericCreate+0x4e>
     69c:	0b 8f       	std	Y+27, r16	; 0x1b
     69e:	1c 8f       	std	Y+28, r17	; 0x1c
     6a0:	61 e0       	ldi	r22, 0x01	; 1
     6a2:	ce 01       	movw	r24, r28
     6a4:	0e 94 ff 02 	call	0x5fe	; 0x5fe <xQueueGenericReset>
     6a8:	0e c0       	rjmp	.+28     	; 0x6c6 <xQueueGenericCreate+0x4e>
     6aa:	4f 96       	adiw	r24, 0x1f	; 31
     6ac:	88 83       	st	Y, r24
     6ae:	99 83       	std	Y+1, r25	; 0x01
     6b0:	f5 cf       	rjmp	.-22     	; 0x69c <xQueueGenericCreate+0x24>
     6b2:	c8 83       	st	Y, r28
     6b4:	d9 83       	std	Y+1, r29	; 0x01
     6b6:	f2 cf       	rjmp	.-28     	; 0x69c <xQueueGenericCreate+0x24>
     6b8:	8f e1       	ldi	r24, 0x1F	; 31
     6ba:	90 e0       	ldi	r25, 0x00	; 0
     6bc:	0e 94 f8 01 	call	0x3f0	; 0x3f0 <pvPortMalloc>
     6c0:	ec 01       	movw	r28, r24
     6c2:	89 2b       	or	r24, r25
     6c4:	b1 f7       	brne	.-20     	; 0x6b2 <xQueueGenericCreate+0x3a>
     6c6:	ce 01       	movw	r24, r28
     6c8:	df 91       	pop	r29
     6ca:	cf 91       	pop	r28
     6cc:	1f 91       	pop	r17
     6ce:	0f 91       	pop	r16
     6d0:	08 95       	ret

000006d2 <xQueueGenericSend>:
     6d2:	af 92       	push	r10
     6d4:	bf 92       	push	r11
     6d6:	cf 92       	push	r12
     6d8:	df 92       	push	r13
     6da:	ef 92       	push	r14
     6dc:	ff 92       	push	r15
     6de:	0f 93       	push	r16
     6e0:	1f 93       	push	r17
     6e2:	cf 93       	push	r28
     6e4:	df 93       	push	r29
     6e6:	cd b7       	in	r28, 0x3d	; 61
     6e8:	de b7       	in	r29, 0x3e	; 62
     6ea:	25 97       	sbiw	r28, 0x05	; 5
     6ec:	cd bf       	out	0x3d, r28	; 61
     6ee:	de bf       	out	0x3e, r29	; 62
     6f0:	8c 01       	movw	r16, r24
     6f2:	6b 01       	movw	r12, r22
     6f4:	4c 83       	std	Y+4, r20	; 0x04
     6f6:	5d 83       	std	Y+5, r21	; 0x05
     6f8:	a2 2e       	mov	r10, r18
     6fa:	b1 2c       	mov	r11, r1
     6fc:	7c 01       	movw	r14, r24
     6fe:	88 e0       	ldi	r24, 0x08	; 8
     700:	e8 0e       	add	r14, r24
     702:	f1 1c       	adc	r15, r1
     704:	0f b6       	in	r0, 0x3f	; 63
     706:	f8 94       	cli
     708:	0f 92       	push	r0
     70a:	f8 01       	movw	r30, r16
     70c:	92 8d       	ldd	r25, Z+26	; 0x1a
     70e:	83 8d       	ldd	r24, Z+27	; 0x1b
     710:	98 17       	cp	r25, r24
     712:	18 f0       	brcs	.+6      	; 0x71a <xQueueGenericSend+0x48>
     714:	f2 e0       	ldi	r31, 0x02	; 2
     716:	af 12       	cpse	r10, r31
     718:	19 c0       	rjmp	.+50     	; 0x74c <xQueueGenericSend+0x7a>
     71a:	4a 2d       	mov	r20, r10
     71c:	b6 01       	movw	r22, r12
     71e:	c8 01       	movw	r24, r16
     720:	0e 94 39 02 	call	0x472	; 0x472 <prvCopyDataToQueue>
     724:	f8 01       	movw	r30, r16
     726:	91 89       	ldd	r25, Z+17	; 0x11
     728:	99 23       	and	r25, r25
     72a:	49 f0       	breq	.+18     	; 0x73e <xQueueGenericSend+0x6c>
     72c:	c8 01       	movw	r24, r16
     72e:	41 96       	adiw	r24, 0x11	; 17
     730:	0e 94 4f 08 	call	0x109e	; 0x109e <xTaskRemoveFromEventList>
     734:	88 23       	and	r24, r24
     736:	31 f0       	breq	.+12     	; 0x744 <xQueueGenericSend+0x72>
     738:	0e 94 3b 01 	call	0x276	; 0x276 <vPortYield>
     73c:	03 c0       	rjmp	.+6      	; 0x744 <xQueueGenericSend+0x72>
     73e:	81 11       	cpse	r24, r1
     740:	0e 94 3b 01 	call	0x276	; 0x276 <vPortYield>
     744:	0f 90       	pop	r0
     746:	0f be       	out	0x3f, r0	; 63
     748:	81 e0       	ldi	r24, 0x01	; 1
     74a:	51 c0       	rjmp	.+162    	; 0x7ee <xQueueGenericSend+0x11c>
     74c:	8c 81       	ldd	r24, Y+4	; 0x04
     74e:	9d 81       	ldd	r25, Y+5	; 0x05
     750:	89 2b       	or	r24, r25
     752:	21 f4       	brne	.+8      	; 0x75c <xQueueGenericSend+0x8a>
     754:	0f 90       	pop	r0
     756:	0f be       	out	0x3f, r0	; 63
     758:	80 e0       	ldi	r24, 0x00	; 0
     75a:	49 c0       	rjmp	.+146    	; 0x7ee <xQueueGenericSend+0x11c>
     75c:	b1 10       	cpse	r11, r1
     75e:	06 c0       	rjmp	.+12     	; 0x76c <xQueueGenericSend+0x9a>
     760:	ce 01       	movw	r24, r28
     762:	01 96       	adiw	r24, 0x01	; 1
     764:	0e 94 97 08 	call	0x112e	; 0x112e <vTaskInternalSetTimeOutState>
     768:	bb 24       	eor	r11, r11
     76a:	b3 94       	inc	r11
     76c:	0f 90       	pop	r0
     76e:	0f be       	out	0x3f, r0	; 63
     770:	0e 94 86 06 	call	0xd0c	; 0xd0c <vTaskSuspendAll>
     774:	0f b6       	in	r0, 0x3f	; 63
     776:	f8 94       	cli
     778:	0f 92       	push	r0
     77a:	f8 01       	movw	r30, r16
     77c:	85 8d       	ldd	r24, Z+29	; 0x1d
     77e:	8f 3f       	cpi	r24, 0xFF	; 255
     780:	09 f4       	brne	.+2      	; 0x784 <xQueueGenericSend+0xb2>
     782:	15 8e       	std	Z+29, r1	; 0x1d
     784:	f8 01       	movw	r30, r16
     786:	86 8d       	ldd	r24, Z+30	; 0x1e
     788:	8f 3f       	cpi	r24, 0xFF	; 255
     78a:	09 f4       	brne	.+2      	; 0x78e <xQueueGenericSend+0xbc>
     78c:	16 8e       	std	Z+30, r1	; 0x1e
     78e:	0f 90       	pop	r0
     790:	0f be       	out	0x3f, r0	; 63
     792:	be 01       	movw	r22, r28
     794:	6c 5f       	subi	r22, 0xFC	; 252
     796:	7f 4f       	sbci	r23, 0xFF	; 255
     798:	ce 01       	movw	r24, r28
     79a:	01 96       	adiw	r24, 0x01	; 1
     79c:	0e 94 a2 08 	call	0x1144	; 0x1144 <xTaskCheckForTimeOut>
     7a0:	81 11       	cpse	r24, r1
     7a2:	1f c0       	rjmp	.+62     	; 0x7e2 <xQueueGenericSend+0x110>
     7a4:	0f b6       	in	r0, 0x3f	; 63
     7a6:	f8 94       	cli
     7a8:	0f 92       	push	r0
     7aa:	f8 01       	movw	r30, r16
     7ac:	92 8d       	ldd	r25, Z+26	; 0x1a
     7ae:	0f 90       	pop	r0
     7b0:	0f be       	out	0x3f, r0	; 63
     7b2:	83 8d       	ldd	r24, Z+27	; 0x1b
     7b4:	98 13       	cpse	r25, r24
     7b6:	0f c0       	rjmp	.+30     	; 0x7d6 <xQueueGenericSend+0x104>
     7b8:	6c 81       	ldd	r22, Y+4	; 0x04
     7ba:	7d 81       	ldd	r23, Y+5	; 0x05
     7bc:	c7 01       	movw	r24, r14
     7be:	0e 94 3d 08 	call	0x107a	; 0x107a <vTaskPlaceOnEventList>
     7c2:	c8 01       	movw	r24, r16
     7c4:	0e 94 b2 02 	call	0x564	; 0x564 <prvUnlockQueue>
     7c8:	0e 94 44 07 	call	0xe88	; 0xe88 <xTaskResumeAll>
     7cc:	81 11       	cpse	r24, r1
     7ce:	9a cf       	rjmp	.-204    	; 0x704 <xQueueGenericSend+0x32>
     7d0:	0e 94 3b 01 	call	0x276	; 0x276 <vPortYield>
     7d4:	97 cf       	rjmp	.-210    	; 0x704 <xQueueGenericSend+0x32>
     7d6:	c8 01       	movw	r24, r16
     7d8:	0e 94 b2 02 	call	0x564	; 0x564 <prvUnlockQueue>
     7dc:	0e 94 44 07 	call	0xe88	; 0xe88 <xTaskResumeAll>
     7e0:	91 cf       	rjmp	.-222    	; 0x704 <xQueueGenericSend+0x32>
     7e2:	c8 01       	movw	r24, r16
     7e4:	0e 94 b2 02 	call	0x564	; 0x564 <prvUnlockQueue>
     7e8:	0e 94 44 07 	call	0xe88	; 0xe88 <xTaskResumeAll>
     7ec:	80 e0       	ldi	r24, 0x00	; 0
     7ee:	25 96       	adiw	r28, 0x05	; 5
     7f0:	cd bf       	out	0x3d, r28	; 61
     7f2:	de bf       	out	0x3e, r29	; 62
     7f4:	df 91       	pop	r29
     7f6:	cf 91       	pop	r28
     7f8:	1f 91       	pop	r17
     7fa:	0f 91       	pop	r16
     7fc:	ff 90       	pop	r15
     7fe:	ef 90       	pop	r14
     800:	df 90       	pop	r13
     802:	cf 90       	pop	r12
     804:	bf 90       	pop	r11
     806:	af 90       	pop	r10
     808:	08 95       	ret

0000080a <xQueueGenericSendFromISR>:
     80a:	ef 92       	push	r14
     80c:	ff 92       	push	r15
     80e:	0f 93       	push	r16
     810:	1f 93       	push	r17
     812:	cf 93       	push	r28
     814:	df 93       	push	r29
     816:	8a 01       	movw	r16, r20
     818:	fc 01       	movw	r30, r24
     81a:	52 8d       	ldd	r21, Z+26	; 0x1a
     81c:	33 8d       	ldd	r19, Z+27	; 0x1b
     81e:	53 17       	cp	r21, r19
     820:	10 f0       	brcs	.+4      	; 0x826 <xQueueGenericSendFromISR+0x1c>
     822:	22 30       	cpi	r18, 0x02	; 2
     824:	f1 f4       	brne	.+60     	; 0x862 <xQueueGenericSendFromISR+0x58>
     826:	42 2f       	mov	r20, r18
     828:	78 01       	movw	r14, r16
     82a:	ec 01       	movw	r28, r24
     82c:	1e 8d       	ldd	r17, Y+30	; 0x1e
     82e:	0e 94 39 02 	call	0x472	; 0x472 <prvCopyDataToQueue>
     832:	1f 3f       	cpi	r17, 0xFF	; 255
     834:	81 f4       	brne	.+32     	; 0x856 <xQueueGenericSendFromISR+0x4c>
     836:	89 89       	ldd	r24, Y+17	; 0x11
     838:	88 23       	and	r24, r24
     83a:	a9 f0       	breq	.+42     	; 0x866 <xQueueGenericSendFromISR+0x5c>
     83c:	ce 01       	movw	r24, r28
     83e:	41 96       	adiw	r24, 0x11	; 17
     840:	0e 94 4f 08 	call	0x109e	; 0x109e <xTaskRemoveFromEventList>
     844:	88 23       	and	r24, r24
     846:	89 f0       	breq	.+34     	; 0x86a <xQueueGenericSendFromISR+0x60>
     848:	e1 14       	cp	r14, r1
     84a:	f1 04       	cpc	r15, r1
     84c:	81 f0       	breq	.+32     	; 0x86e <xQueueGenericSendFromISR+0x64>
     84e:	81 e0       	ldi	r24, 0x01	; 1
     850:	f7 01       	movw	r30, r14
     852:	80 83       	st	Z, r24
     854:	0d c0       	rjmp	.+26     	; 0x870 <xQueueGenericSendFromISR+0x66>
     856:	ff 24       	eor	r15, r15
     858:	f3 94       	inc	r15
     85a:	f1 0e       	add	r15, r17
     85c:	fe 8e       	std	Y+30, r15	; 0x1e
     85e:	81 e0       	ldi	r24, 0x01	; 1
     860:	07 c0       	rjmp	.+14     	; 0x870 <xQueueGenericSendFromISR+0x66>
     862:	80 e0       	ldi	r24, 0x00	; 0
     864:	05 c0       	rjmp	.+10     	; 0x870 <xQueueGenericSendFromISR+0x66>
     866:	81 e0       	ldi	r24, 0x01	; 1
     868:	03 c0       	rjmp	.+6      	; 0x870 <xQueueGenericSendFromISR+0x66>
     86a:	81 e0       	ldi	r24, 0x01	; 1
     86c:	01 c0       	rjmp	.+2      	; 0x870 <xQueueGenericSendFromISR+0x66>
     86e:	81 e0       	ldi	r24, 0x01	; 1
     870:	df 91       	pop	r29
     872:	cf 91       	pop	r28
     874:	1f 91       	pop	r17
     876:	0f 91       	pop	r16
     878:	ff 90       	pop	r15
     87a:	ef 90       	pop	r14
     87c:	08 95       	ret

0000087e <xQueueReceive>:
     87e:	af 92       	push	r10
     880:	bf 92       	push	r11
     882:	cf 92       	push	r12
     884:	df 92       	push	r13
     886:	ef 92       	push	r14
     888:	ff 92       	push	r15
     88a:	0f 93       	push	r16
     88c:	1f 93       	push	r17
     88e:	cf 93       	push	r28
     890:	df 93       	push	r29
     892:	cd b7       	in	r28, 0x3d	; 61
     894:	de b7       	in	r29, 0x3e	; 62
     896:	25 97       	sbiw	r28, 0x05	; 5
     898:	cd bf       	out	0x3d, r28	; 61
     89a:	de bf       	out	0x3e, r29	; 62
     89c:	8c 01       	movw	r16, r24
     89e:	5b 01       	movw	r10, r22
     8a0:	4c 83       	std	Y+4, r20	; 0x04
     8a2:	5d 83       	std	Y+5, r21	; 0x05
     8a4:	e1 2c       	mov	r14, r1
     8a6:	6c 01       	movw	r12, r24
     8a8:	81 e1       	ldi	r24, 0x11	; 17
     8aa:	c8 0e       	add	r12, r24
     8ac:	d1 1c       	adc	r13, r1
     8ae:	0f b6       	in	r0, 0x3f	; 63
     8b0:	f8 94       	cli
     8b2:	0f 92       	push	r0
     8b4:	f8 01       	movw	r30, r16
     8b6:	f2 8c       	ldd	r15, Z+26	; 0x1a
     8b8:	ff 20       	and	r15, r15
     8ba:	a9 f0       	breq	.+42     	; 0x8e6 <xQueueReceive+0x68>
     8bc:	b5 01       	movw	r22, r10
     8be:	c8 01       	movw	r24, r16
     8c0:	0e 94 98 02 	call	0x530	; 0x530 <prvCopyDataFromQueue>
     8c4:	fa 94       	dec	r15
     8c6:	f8 01       	movw	r30, r16
     8c8:	f2 8e       	std	Z+26, r15	; 0x1a
     8ca:	80 85       	ldd	r24, Z+8	; 0x08
     8cc:	88 23       	and	r24, r24
     8ce:	39 f0       	breq	.+14     	; 0x8de <xQueueReceive+0x60>
     8d0:	c8 01       	movw	r24, r16
     8d2:	08 96       	adiw	r24, 0x08	; 8
     8d4:	0e 94 4f 08 	call	0x109e	; 0x109e <xTaskRemoveFromEventList>
     8d8:	81 11       	cpse	r24, r1
     8da:	0e 94 3b 01 	call	0x276	; 0x276 <vPortYield>
     8de:	0f 90       	pop	r0
     8e0:	0f be       	out	0x3f, r0	; 63
     8e2:	81 e0       	ldi	r24, 0x01	; 1
     8e4:	52 c0       	rjmp	.+164    	; 0x98a <xQueueReceive+0x10c>
     8e6:	8c 81       	ldd	r24, Y+4	; 0x04
     8e8:	9d 81       	ldd	r25, Y+5	; 0x05
     8ea:	89 2b       	or	r24, r25
     8ec:	21 f4       	brne	.+8      	; 0x8f6 <xQueueReceive+0x78>
     8ee:	0f 90       	pop	r0
     8f0:	0f be       	out	0x3f, r0	; 63
     8f2:	80 e0       	ldi	r24, 0x00	; 0
     8f4:	4a c0       	rjmp	.+148    	; 0x98a <xQueueReceive+0x10c>
     8f6:	e1 10       	cpse	r14, r1
     8f8:	06 c0       	rjmp	.+12     	; 0x906 <xQueueReceive+0x88>
     8fa:	ce 01       	movw	r24, r28
     8fc:	01 96       	adiw	r24, 0x01	; 1
     8fe:	0e 94 97 08 	call	0x112e	; 0x112e <vTaskInternalSetTimeOutState>
     902:	ee 24       	eor	r14, r14
     904:	e3 94       	inc	r14
     906:	0f 90       	pop	r0
     908:	0f be       	out	0x3f, r0	; 63
     90a:	0e 94 86 06 	call	0xd0c	; 0xd0c <vTaskSuspendAll>
     90e:	0f b6       	in	r0, 0x3f	; 63
     910:	f8 94       	cli
     912:	0f 92       	push	r0
     914:	f8 01       	movw	r30, r16
     916:	85 8d       	ldd	r24, Z+29	; 0x1d
     918:	8f 3f       	cpi	r24, 0xFF	; 255
     91a:	09 f4       	brne	.+2      	; 0x91e <xQueueReceive+0xa0>
     91c:	15 8e       	std	Z+29, r1	; 0x1d
     91e:	f8 01       	movw	r30, r16
     920:	86 8d       	ldd	r24, Z+30	; 0x1e
     922:	8f 3f       	cpi	r24, 0xFF	; 255
     924:	09 f4       	brne	.+2      	; 0x928 <xQueueReceive+0xaa>
     926:	16 8e       	std	Z+30, r1	; 0x1e
     928:	0f 90       	pop	r0
     92a:	0f be       	out	0x3f, r0	; 63
     92c:	be 01       	movw	r22, r28
     92e:	6c 5f       	subi	r22, 0xFC	; 252
     930:	7f 4f       	sbci	r23, 0xFF	; 255
     932:	ce 01       	movw	r24, r28
     934:	01 96       	adiw	r24, 0x01	; 1
     936:	0e 94 a2 08 	call	0x1144	; 0x1144 <xTaskCheckForTimeOut>
     93a:	81 11       	cpse	r24, r1
     93c:	1a c0       	rjmp	.+52     	; 0x972 <xQueueReceive+0xf4>
     93e:	c8 01       	movw	r24, r16
     940:	0e 94 2e 02 	call	0x45c	; 0x45c <prvIsQueueEmpty>
     944:	88 23       	and	r24, r24
     946:	79 f0       	breq	.+30     	; 0x966 <xQueueReceive+0xe8>
     948:	6c 81       	ldd	r22, Y+4	; 0x04
     94a:	7d 81       	ldd	r23, Y+5	; 0x05
     94c:	c6 01       	movw	r24, r12
     94e:	0e 94 3d 08 	call	0x107a	; 0x107a <vTaskPlaceOnEventList>
     952:	c8 01       	movw	r24, r16
     954:	0e 94 b2 02 	call	0x564	; 0x564 <prvUnlockQueue>
     958:	0e 94 44 07 	call	0xe88	; 0xe88 <xTaskResumeAll>
     95c:	81 11       	cpse	r24, r1
     95e:	a7 cf       	rjmp	.-178    	; 0x8ae <xQueueReceive+0x30>
     960:	0e 94 3b 01 	call	0x276	; 0x276 <vPortYield>
     964:	a4 cf       	rjmp	.-184    	; 0x8ae <xQueueReceive+0x30>
     966:	c8 01       	movw	r24, r16
     968:	0e 94 b2 02 	call	0x564	; 0x564 <prvUnlockQueue>
     96c:	0e 94 44 07 	call	0xe88	; 0xe88 <xTaskResumeAll>
     970:	9e cf       	rjmp	.-196    	; 0x8ae <xQueueReceive+0x30>
     972:	c8 01       	movw	r24, r16
     974:	0e 94 b2 02 	call	0x564	; 0x564 <prvUnlockQueue>
     978:	0e 94 44 07 	call	0xe88	; 0xe88 <xTaskResumeAll>
     97c:	c8 01       	movw	r24, r16
     97e:	0e 94 2e 02 	call	0x45c	; 0x45c <prvIsQueueEmpty>
     982:	88 23       	and	r24, r24
     984:	09 f4       	brne	.+2      	; 0x988 <xQueueReceive+0x10a>
     986:	93 cf       	rjmp	.-218    	; 0x8ae <xQueueReceive+0x30>
     988:	80 e0       	ldi	r24, 0x00	; 0
     98a:	25 96       	adiw	r28, 0x05	; 5
     98c:	cd bf       	out	0x3d, r28	; 61
     98e:	de bf       	out	0x3e, r29	; 62
     990:	df 91       	pop	r29
     992:	cf 91       	pop	r28
     994:	1f 91       	pop	r17
     996:	0f 91       	pop	r16
     998:	ff 90       	pop	r15
     99a:	ef 90       	pop	r14
     99c:	df 90       	pop	r13
     99e:	cf 90       	pop	r12
     9a0:	bf 90       	pop	r11
     9a2:	af 90       	pop	r10
     9a4:	08 95       	ret

000009a6 <prvResetNextTaskUnblockTime>:
     9a6:	e0 91 8a 30 	lds	r30, 0x308A	; 0x80308a <pxDelayedTaskList>
     9aa:	f0 91 8b 30 	lds	r31, 0x308B	; 0x80308b <pxDelayedTaskList+0x1>
     9ae:	80 81       	ld	r24, Z
     9b0:	81 11       	cpse	r24, r1
     9b2:	07 c0       	rjmp	.+14     	; 0x9c2 <prvResetNextTaskUnblockTime+0x1c>
     9b4:	8f ef       	ldi	r24, 0xFF	; 255
     9b6:	9f ef       	ldi	r25, 0xFF	; 255
     9b8:	80 93 6b 30 	sts	0x306B, r24	; 0x80306b <xNextTaskUnblockTime>
     9bc:	90 93 6c 30 	sts	0x306C, r25	; 0x80306c <xNextTaskUnblockTime+0x1>
     9c0:	08 95       	ret
     9c2:	e0 91 8a 30 	lds	r30, 0x308A	; 0x80308a <pxDelayedTaskList>
     9c6:	f0 91 8b 30 	lds	r31, 0x308B	; 0x80308b <pxDelayedTaskList+0x1>
     9ca:	05 80       	ldd	r0, Z+5	; 0x05
     9cc:	f6 81       	ldd	r31, Z+6	; 0x06
     9ce:	e0 2d       	mov	r30, r0
     9d0:	06 80       	ldd	r0, Z+6	; 0x06
     9d2:	f7 81       	ldd	r31, Z+7	; 0x07
     9d4:	e0 2d       	mov	r30, r0
     9d6:	82 81       	ldd	r24, Z+2	; 0x02
     9d8:	93 81       	ldd	r25, Z+3	; 0x03
     9da:	80 93 6b 30 	sts	0x306B, r24	; 0x80306b <xNextTaskUnblockTime>
     9de:	90 93 6c 30 	sts	0x306C, r25	; 0x80306c <xNextTaskUnblockTime+0x1>
     9e2:	08 95       	ret

000009e4 <prvIdleTask>:
     9e4:	ce e9       	ldi	r28, 0x9E	; 158
     9e6:	d0 e3       	ldi	r29, 0x30	; 48
     9e8:	88 81       	ld	r24, Y
     9ea:	82 30       	cpi	r24, 0x02	; 2
     9ec:	e8 f3       	brcs	.-6      	; 0x9e8 <prvIdleTask+0x4>
     9ee:	0e 94 3b 01 	call	0x276	; 0x276 <vPortYield>
     9f2:	fa cf       	rjmp	.-12     	; 0x9e8 <prvIdleTask+0x4>

000009f4 <prvAddCurrentTaskToDelayedList>:
     9f4:	ff 92       	push	r15
     9f6:	0f 93       	push	r16
     9f8:	1f 93       	push	r17
     9fa:	cf 93       	push	r28
     9fc:	df 93       	push	r29
     9fe:	ec 01       	movw	r28, r24
     a00:	f6 2e       	mov	r15, r22
     a02:	00 91 73 30 	lds	r16, 0x3073	; 0x803073 <xTickCount>
     a06:	10 91 74 30 	lds	r17, 0x3074	; 0x803074 <xTickCount+0x1>
     a0a:	80 91 c2 30 	lds	r24, 0x30C2	; 0x8030c2 <pxCurrentTCB>
     a0e:	90 91 c3 30 	lds	r25, 0x30C3	; 0x8030c3 <pxCurrentTCB+0x1>
     a12:	02 96       	adiw	r24, 0x02	; 2
     a14:	0e 94 ce 00 	call	0x19c	; 0x19c <uxListRemove>
     a18:	cf 3f       	cpi	r28, 0xFF	; 255
     a1a:	8f ef       	ldi	r24, 0xFF	; 255
     a1c:	d8 07       	cpc	r29, r24
     a1e:	69 f4       	brne	.+26     	; 0xa3a <prvAddCurrentTaskToDelayedList+0x46>
     a20:	ff 20       	and	r15, r15
     a22:	59 f0       	breq	.+22     	; 0xa3a <prvAddCurrentTaskToDelayedList+0x46>
     a24:	60 91 c2 30 	lds	r22, 0x30C2	; 0x8030c2 <pxCurrentTCB>
     a28:	70 91 c3 30 	lds	r23, 0x30C3	; 0x8030c3 <pxCurrentTCB+0x1>
     a2c:	6e 5f       	subi	r22, 0xFE	; 254
     a2e:	7f 4f       	sbci	r23, 0xFF	; 255
     a30:	86 e7       	ldi	r24, 0x76	; 118
     a32:	90 e3       	ldi	r25, 0x30	; 48
     a34:	0e 94 7c 00 	call	0xf8	; 0xf8 <vListInsertEnd>
     a38:	2f c0       	rjmp	.+94     	; 0xa98 <prvAddCurrentTaskToDelayedList+0xa4>
     a3a:	c0 0f       	add	r28, r16
     a3c:	d1 1f       	adc	r29, r17
     a3e:	e0 91 c2 30 	lds	r30, 0x30C2	; 0x8030c2 <pxCurrentTCB>
     a42:	f0 91 c3 30 	lds	r31, 0x30C3	; 0x8030c3 <pxCurrentTCB+0x1>
     a46:	c2 83       	std	Z+2, r28	; 0x02
     a48:	d3 83       	std	Z+3, r29	; 0x03
     a4a:	c0 17       	cp	r28, r16
     a4c:	d1 07       	cpc	r29, r17
     a4e:	68 f4       	brcc	.+26     	; 0xa6a <prvAddCurrentTaskToDelayedList+0x76>
     a50:	60 91 c2 30 	lds	r22, 0x30C2	; 0x8030c2 <pxCurrentTCB>
     a54:	70 91 c3 30 	lds	r23, 0x30C3	; 0x8030c3 <pxCurrentTCB+0x1>
     a58:	80 91 88 30 	lds	r24, 0x3088	; 0x803088 <pxOverflowDelayedTaskList>
     a5c:	90 91 89 30 	lds	r25, 0x3089	; 0x803089 <pxOverflowDelayedTaskList+0x1>
     a60:	6e 5f       	subi	r22, 0xFE	; 254
     a62:	7f 4f       	sbci	r23, 0xFF	; 255
     a64:	0e 94 9d 00 	call	0x13a	; 0x13a <vListInsert>
     a68:	17 c0       	rjmp	.+46     	; 0xa98 <prvAddCurrentTaskToDelayedList+0xa4>
     a6a:	60 91 c2 30 	lds	r22, 0x30C2	; 0x8030c2 <pxCurrentTCB>
     a6e:	70 91 c3 30 	lds	r23, 0x30C3	; 0x8030c3 <pxCurrentTCB+0x1>
     a72:	80 91 8a 30 	lds	r24, 0x308A	; 0x80308a <pxDelayedTaskList>
     a76:	90 91 8b 30 	lds	r25, 0x308B	; 0x80308b <pxDelayedTaskList+0x1>
     a7a:	6e 5f       	subi	r22, 0xFE	; 254
     a7c:	7f 4f       	sbci	r23, 0xFF	; 255
     a7e:	0e 94 9d 00 	call	0x13a	; 0x13a <vListInsert>
     a82:	80 91 6b 30 	lds	r24, 0x306B	; 0x80306b <xNextTaskUnblockTime>
     a86:	90 91 6c 30 	lds	r25, 0x306C	; 0x80306c <xNextTaskUnblockTime+0x1>
     a8a:	c8 17       	cp	r28, r24
     a8c:	d9 07       	cpc	r29, r25
     a8e:	20 f4       	brcc	.+8      	; 0xa98 <prvAddCurrentTaskToDelayedList+0xa4>
     a90:	c0 93 6b 30 	sts	0x306B, r28	; 0x80306b <xNextTaskUnblockTime>
     a94:	d0 93 6c 30 	sts	0x306C, r29	; 0x80306c <xNextTaskUnblockTime+0x1>
     a98:	df 91       	pop	r29
     a9a:	cf 91       	pop	r28
     a9c:	1f 91       	pop	r17
     a9e:	0f 91       	pop	r16
     aa0:	ff 90       	pop	r15
     aa2:	08 95       	ret

00000aa4 <xTaskCreate>:
     aa4:	4f 92       	push	r4
     aa6:	5f 92       	push	r5
     aa8:	6f 92       	push	r6
     aaa:	7f 92       	push	r7
     aac:	8f 92       	push	r8
     aae:	9f 92       	push	r9
     ab0:	af 92       	push	r10
     ab2:	bf 92       	push	r11
     ab4:	cf 92       	push	r12
     ab6:	df 92       	push	r13
     ab8:	ef 92       	push	r14
     aba:	ff 92       	push	r15
     abc:	0f 93       	push	r16
     abe:	cf 93       	push	r28
     ac0:	df 93       	push	r29
     ac2:	4c 01       	movw	r8, r24
     ac4:	6b 01       	movw	r12, r22
     ac6:	5a 01       	movw	r10, r20
     ac8:	29 01       	movw	r4, r18
     aca:	ca 01       	movw	r24, r20
     acc:	0e 94 f8 01 	call	0x3f0	; 0x3f0 <pvPortMalloc>
     ad0:	3c 01       	movw	r6, r24
     ad2:	89 2b       	or	r24, r25
     ad4:	09 f4       	brne	.+2      	; 0xad8 <xTaskCreate+0x34>
     ad6:	df c0       	rjmp	.+446    	; 0xc96 <xTaskCreate+0x1f2>
     ad8:	88 e2       	ldi	r24, 0x28	; 40
     ada:	90 e0       	ldi	r25, 0x00	; 0
     adc:	0e 94 f8 01 	call	0x3f0	; 0x3f0 <pvPortMalloc>
     ae0:	ec 01       	movw	r28, r24
     ae2:	89 2b       	or	r24, r25
     ae4:	71 f0       	breq	.+28     	; 0xb02 <xTaskCreate+0x5e>
     ae6:	6f 8a       	std	Y+23, r6	; 0x17
     ae8:	78 8e       	std	Y+24, r7	; 0x18
     aea:	81 e0       	ldi	r24, 0x01	; 1
     aec:	a8 1a       	sub	r10, r24
     aee:	b1 08       	sbc	r11, r1
     af0:	6a 0c       	add	r6, r10
     af2:	7b 1c       	adc	r7, r11
     af4:	d6 01       	movw	r26, r12
     af6:	8c 91       	ld	r24, X
     af8:	89 8f       	std	Y+25, r24	; 0x19
     afa:	8c 91       	ld	r24, X
     afc:	81 11       	cpse	r24, r1
     afe:	05 c0       	rjmp	.+10     	; 0xb0a <xTaskCreate+0x66>
     b00:	18 c0       	rjmp	.+48     	; 0xb32 <xTaskCreate+0x8e>
     b02:	c3 01       	movw	r24, r6
     b04:	0e 94 2d 02 	call	0x45a	; 0x45a <vPortFree>
     b08:	c6 c0       	rjmp	.+396    	; 0xc96 <xTaskCreate+0x1f2>
     b0a:	ae 01       	movw	r20, r28
     b0c:	46 5e       	subi	r20, 0xE6	; 230
     b0e:	5f 4f       	sbci	r21, 0xFF	; 255
     b10:	f6 01       	movw	r30, r12
     b12:	31 96       	adiw	r30, 0x01	; 1
     b14:	b8 e0       	ldi	r27, 0x08	; 8
     b16:	cb 0e       	add	r12, r27
     b18:	d1 1c       	adc	r13, r1
     b1a:	cf 01       	movw	r24, r30
     b1c:	21 91       	ld	r18, Z+
     b1e:	da 01       	movw	r26, r20
     b20:	2d 93       	st	X+, r18
     b22:	ad 01       	movw	r20, r26
     b24:	dc 01       	movw	r26, r24
     b26:	8c 91       	ld	r24, X
     b28:	88 23       	and	r24, r24
     b2a:	19 f0       	breq	.+6      	; 0xb32 <xTaskCreate+0x8e>
     b2c:	ec 15       	cp	r30, r12
     b2e:	fd 05       	cpc	r31, r13
     b30:	a1 f7       	brne	.-24     	; 0xb1a <xTaskCreate+0x76>
     b32:	18 a2       	std	Y+32, r1	; 0x20
     b34:	04 30       	cpi	r16, 0x04	; 4
     b36:	08 f0       	brcs	.+2      	; 0xb3a <xTaskCreate+0x96>
     b38:	03 e0       	ldi	r16, 0x03	; 3
     b3a:	0e 8b       	std	Y+22, r16	; 0x16
     b3c:	09 a3       	std	Y+33, r16	; 0x21
     b3e:	1a a2       	std	Y+34, r1	; 0x22
     b40:	6e 01       	movw	r12, r28
     b42:	b2 e0       	ldi	r27, 0x02	; 2
     b44:	cb 0e       	add	r12, r27
     b46:	d1 1c       	adc	r13, r1
     b48:	c6 01       	movw	r24, r12
     b4a:	0e 94 78 00 	call	0xf0	; 0xf0 <vListInitialiseItem>
     b4e:	ce 01       	movw	r24, r28
     b50:	0c 96       	adiw	r24, 0x0c	; 12
     b52:	0e 94 78 00 	call	0xf0	; 0xf0 <vListInitialiseItem>
     b56:	c8 87       	std	Y+8, r28	; 0x08
     b58:	d9 87       	std	Y+9, r29	; 0x09
     b5a:	84 e0       	ldi	r24, 0x04	; 4
     b5c:	90 e0       	ldi	r25, 0x00	; 0
     b5e:	80 1b       	sub	r24, r16
     b60:	91 09       	sbc	r25, r1
     b62:	8c 87       	std	Y+12, r24	; 0x0c
     b64:	9d 87       	std	Y+13, r25	; 0x0d
     b66:	ca 8b       	std	Y+18, r28	; 0x12
     b68:	db 8b       	std	Y+19, r29	; 0x13
     b6a:	1b a2       	std	Y+35, r1	; 0x23
     b6c:	1c a2       	std	Y+36, r1	; 0x24
     b6e:	1d a2       	std	Y+37, r1	; 0x25
     b70:	1e a2       	std	Y+38, r1	; 0x26
     b72:	1f a2       	std	Y+39, r1	; 0x27
     b74:	a2 01       	movw	r20, r4
     b76:	b4 01       	movw	r22, r8
     b78:	c3 01       	movw	r24, r6
     b7a:	0e 94 f5 00 	call	0x1ea	; 0x1ea <pxPortInitialiseStack>
     b7e:	88 83       	st	Y, r24
     b80:	99 83       	std	Y+1, r25	; 0x01
     b82:	e1 14       	cp	r14, r1
     b84:	f1 04       	cpc	r15, r1
     b86:	19 f0       	breq	.+6      	; 0xb8e <xTaskCreate+0xea>
     b88:	f7 01       	movw	r30, r14
     b8a:	c0 83       	st	Z, r28
     b8c:	d1 83       	std	Z+1, r29	; 0x01
     b8e:	0f b6       	in	r0, 0x3f	; 63
     b90:	f8 94       	cli
     b92:	0f 92       	push	r0
     b94:	80 91 75 30 	lds	r24, 0x3075	; 0x803075 <uxCurrentNumberOfTasks>
     b98:	8f 5f       	subi	r24, 0xFF	; 255
     b9a:	80 93 75 30 	sts	0x3075, r24	; 0x803075 <uxCurrentNumberOfTasks>
     b9e:	80 91 c2 30 	lds	r24, 0x30C2	; 0x8030c2 <pxCurrentTCB>
     ba2:	90 91 c3 30 	lds	r25, 0x30C3	; 0x8030c3 <pxCurrentTCB+0x1>
     ba6:	89 2b       	or	r24, r25
     ba8:	a9 f5       	brne	.+106    	; 0xc14 <xTaskCreate+0x170>
     baa:	c0 93 c2 30 	sts	0x30C2, r28	; 0x8030c2 <pxCurrentTCB>
     bae:	d0 93 c3 30 	sts	0x30C3, r29	; 0x8030c3 <pxCurrentTCB+0x1>
     bb2:	80 91 75 30 	lds	r24, 0x3075	; 0x803075 <uxCurrentNumberOfTasks>
     bb6:	81 30       	cpi	r24, 0x01	; 1
     bb8:	e9 f5       	brne	.+122    	; 0xc34 <xTaskCreate+0x190>
     bba:	8e e9       	ldi	r24, 0x9E	; 158
     bbc:	90 e3       	ldi	r25, 0x30	; 48
     bbe:	0e 94 6a 00 	call	0xd4	; 0xd4 <vListInitialise>
     bc2:	87 ea       	ldi	r24, 0xA7	; 167
     bc4:	90 e3       	ldi	r25, 0x30	; 48
     bc6:	0e 94 6a 00 	call	0xd4	; 0xd4 <vListInitialise>
     bca:	80 eb       	ldi	r24, 0xB0	; 176
     bcc:	90 e3       	ldi	r25, 0x30	; 48
     bce:	0e 94 6a 00 	call	0xd4	; 0xd4 <vListInitialise>
     bd2:	89 eb       	ldi	r24, 0xB9	; 185
     bd4:	90 e3       	ldi	r25, 0x30	; 48
     bd6:	0e 94 6a 00 	call	0xd4	; 0xd4 <vListInitialise>
     bda:	85 e9       	ldi	r24, 0x95	; 149
     bdc:	90 e3       	ldi	r25, 0x30	; 48
     bde:	0e 94 6a 00 	call	0xd4	; 0xd4 <vListInitialise>
     be2:	8c e8       	ldi	r24, 0x8C	; 140
     be4:	90 e3       	ldi	r25, 0x30	; 48
     be6:	0e 94 6a 00 	call	0xd4	; 0xd4 <vListInitialise>
     bea:	8f e7       	ldi	r24, 0x7F	; 127
     bec:	90 e3       	ldi	r25, 0x30	; 48
     bee:	0e 94 6a 00 	call	0xd4	; 0xd4 <vListInitialise>
     bf2:	86 e7       	ldi	r24, 0x76	; 118
     bf4:	90 e3       	ldi	r25, 0x30	; 48
     bf6:	0e 94 6a 00 	call	0xd4	; 0xd4 <vListInitialise>
     bfa:	85 e9       	ldi	r24, 0x95	; 149
     bfc:	90 e3       	ldi	r25, 0x30	; 48
     bfe:	80 93 8a 30 	sts	0x308A, r24	; 0x80308a <pxDelayedTaskList>
     c02:	90 93 8b 30 	sts	0x308B, r25	; 0x80308b <pxDelayedTaskList+0x1>
     c06:	8c e8       	ldi	r24, 0x8C	; 140
     c08:	90 e3       	ldi	r25, 0x30	; 48
     c0a:	80 93 88 30 	sts	0x3088, r24	; 0x803088 <pxOverflowDelayedTaskList>
     c0e:	90 93 89 30 	sts	0x3089, r25	; 0x803089 <pxOverflowDelayedTaskList+0x1>
     c12:	10 c0       	rjmp	.+32     	; 0xc34 <xTaskCreate+0x190>
     c14:	80 91 71 30 	lds	r24, 0x3071	; 0x803071 <xSchedulerRunning>
     c18:	81 11       	cpse	r24, r1
     c1a:	0c c0       	rjmp	.+24     	; 0xc34 <xTaskCreate+0x190>
     c1c:	e0 91 c2 30 	lds	r30, 0x30C2	; 0x8030c2 <pxCurrentTCB>
     c20:	f0 91 c3 30 	lds	r31, 0x30C3	; 0x8030c3 <pxCurrentTCB+0x1>
     c24:	96 89       	ldd	r25, Z+22	; 0x16
     c26:	8e 89       	ldd	r24, Y+22	; 0x16
     c28:	89 17       	cp	r24, r25
     c2a:	20 f0       	brcs	.+8      	; 0xc34 <xTaskCreate+0x190>
     c2c:	c0 93 c2 30 	sts	0x30C2, r28	; 0x8030c2 <pxCurrentTCB>
     c30:	d0 93 c3 30 	sts	0x30C3, r29	; 0x8030c3 <pxCurrentTCB+0x1>
     c34:	80 91 6d 30 	lds	r24, 0x306D	; 0x80306d <uxTaskNumber>
     c38:	8f 5f       	subi	r24, 0xFF	; 255
     c3a:	80 93 6d 30 	sts	0x306D, r24	; 0x80306d <uxTaskNumber>
     c3e:	8e 89       	ldd	r24, Y+22	; 0x16
     c40:	90 91 72 30 	lds	r25, 0x3072	; 0x803072 <uxTopReadyPriority>
     c44:	98 17       	cp	r25, r24
     c46:	10 f4       	brcc	.+4      	; 0xc4c <xTaskCreate+0x1a8>
     c48:	80 93 72 30 	sts	0x3072, r24	; 0x803072 <uxTopReadyPriority>
     c4c:	90 e0       	ldi	r25, 0x00	; 0
     c4e:	9c 01       	movw	r18, r24
     c50:	22 0f       	add	r18, r18
     c52:	33 1f       	adc	r19, r19
     c54:	22 0f       	add	r18, r18
     c56:	33 1f       	adc	r19, r19
     c58:	22 0f       	add	r18, r18
     c5a:	33 1f       	adc	r19, r19
     c5c:	82 0f       	add	r24, r18
     c5e:	93 1f       	adc	r25, r19
     c60:	b6 01       	movw	r22, r12
     c62:	82 56       	subi	r24, 0x62	; 98
     c64:	9f 4c       	sbci	r25, 0xCF	; 207
     c66:	0e 94 7c 00 	call	0xf8	; 0xf8 <vListInsertEnd>
     c6a:	0f 90       	pop	r0
     c6c:	0f be       	out	0x3f, r0	; 63
     c6e:	80 91 71 30 	lds	r24, 0x3071	; 0x803071 <xSchedulerRunning>
     c72:	88 23       	and	r24, r24
     c74:	61 f0       	breq	.+24     	; 0xc8e <xTaskCreate+0x1ea>
     c76:	e0 91 c2 30 	lds	r30, 0x30C2	; 0x8030c2 <pxCurrentTCB>
     c7a:	f0 91 c3 30 	lds	r31, 0x30C3	; 0x8030c3 <pxCurrentTCB+0x1>
     c7e:	96 89       	ldd	r25, Z+22	; 0x16
     c80:	8e 89       	ldd	r24, Y+22	; 0x16
     c82:	98 17       	cp	r25, r24
     c84:	30 f4       	brcc	.+12     	; 0xc92 <xTaskCreate+0x1ee>
     c86:	0e 94 3b 01 	call	0x276	; 0x276 <vPortYield>
     c8a:	81 e0       	ldi	r24, 0x01	; 1
     c8c:	05 c0       	rjmp	.+10     	; 0xc98 <xTaskCreate+0x1f4>
     c8e:	81 e0       	ldi	r24, 0x01	; 1
     c90:	03 c0       	rjmp	.+6      	; 0xc98 <xTaskCreate+0x1f4>
     c92:	81 e0       	ldi	r24, 0x01	; 1
     c94:	01 c0       	rjmp	.+2      	; 0xc98 <xTaskCreate+0x1f4>
     c96:	8f ef       	ldi	r24, 0xFF	; 255
     c98:	df 91       	pop	r29
     c9a:	cf 91       	pop	r28
     c9c:	0f 91       	pop	r16
     c9e:	ff 90       	pop	r15
     ca0:	ef 90       	pop	r14
     ca2:	df 90       	pop	r13
     ca4:	cf 90       	pop	r12
     ca6:	bf 90       	pop	r11
     ca8:	af 90       	pop	r10
     caa:	9f 90       	pop	r9
     cac:	8f 90       	pop	r8
     cae:	7f 90       	pop	r7
     cb0:	6f 90       	pop	r6
     cb2:	5f 90       	pop	r5
     cb4:	4f 90       	pop	r4
     cb6:	08 95       	ret

00000cb8 <vTaskStartScheduler>:
     cb8:	ef 92       	push	r14
     cba:	ff 92       	push	r15
     cbc:	0f 93       	push	r16
     cbe:	0f 2e       	mov	r0, r31
     cc0:	f9 e6       	ldi	r31, 0x69	; 105
     cc2:	ef 2e       	mov	r14, r31
     cc4:	f0 e3       	ldi	r31, 0x30	; 48
     cc6:	ff 2e       	mov	r15, r31
     cc8:	f0 2d       	mov	r31, r0
     cca:	00 e0       	ldi	r16, 0x00	; 0
     ccc:	20 e0       	ldi	r18, 0x00	; 0
     cce:	30 e0       	ldi	r19, 0x00	; 0
     cd0:	43 e7       	ldi	r20, 0x73	; 115
     cd2:	50 e0       	ldi	r21, 0x00	; 0
     cd4:	68 eb       	ldi	r22, 0xB8	; 184
     cd6:	7b e5       	ldi	r23, 0x5B	; 91
     cd8:	82 ef       	ldi	r24, 0xF2	; 242
     cda:	94 e0       	ldi	r25, 0x04	; 4
     cdc:	0e 94 52 05 	call	0xaa4	; 0xaa4 <xTaskCreate>
     ce0:	81 30       	cpi	r24, 0x01	; 1
     ce2:	81 f4       	brne	.+32     	; 0xd04 <vTaskStartScheduler+0x4c>
     ce4:	f8 94       	cli
     ce6:	8f ef       	ldi	r24, 0xFF	; 255
     ce8:	9f ef       	ldi	r25, 0xFF	; 255
     cea:	80 93 6b 30 	sts	0x306B, r24	; 0x80306b <xNextTaskUnblockTime>
     cee:	90 93 6c 30 	sts	0x306C, r25	; 0x80306c <xNextTaskUnblockTime+0x1>
     cf2:	81 e0       	ldi	r24, 0x01	; 1
     cf4:	80 93 71 30 	sts	0x3071, r24	; 0x803071 <xSchedulerRunning>
     cf8:	10 92 73 30 	sts	0x3073, r1	; 0x803073 <xTickCount>
     cfc:	10 92 74 30 	sts	0x3074, r1	; 0x803074 <xTickCount+0x1>
     d00:	0e 94 06 01 	call	0x20c	; 0x20c <xPortStartScheduler>
     d04:	0f 91       	pop	r16
     d06:	ff 90       	pop	r15
     d08:	ef 90       	pop	r14
     d0a:	08 95       	ret

00000d0c <vTaskSuspendAll>:
     d0c:	80 91 68 30 	lds	r24, 0x3068	; 0x803068 <uxSchedulerSuspended>
     d10:	8f 5f       	subi	r24, 0xFF	; 255
     d12:	80 93 68 30 	sts	0x3068, r24	; 0x803068 <uxSchedulerSuspended>
     d16:	08 95       	ret

00000d18 <xTaskIncrementTick>:
     d18:	df 92       	push	r13
     d1a:	ef 92       	push	r14
     d1c:	ff 92       	push	r15
     d1e:	0f 93       	push	r16
     d20:	1f 93       	push	r17
     d22:	cf 93       	push	r28
     d24:	df 93       	push	r29
     d26:	80 91 68 30 	lds	r24, 0x3068	; 0x803068 <uxSchedulerSuspended>
     d2a:	81 11       	cpse	r24, r1
     d2c:	98 c0       	rjmp	.+304    	; 0xe5e <xTaskIncrementTick+0x146>
     d2e:	e0 90 73 30 	lds	r14, 0x3073	; 0x803073 <xTickCount>
     d32:	f0 90 74 30 	lds	r15, 0x3074	; 0x803074 <xTickCount+0x1>
     d36:	8f ef       	ldi	r24, 0xFF	; 255
     d38:	e8 1a       	sub	r14, r24
     d3a:	f8 0a       	sbc	r15, r24
     d3c:	e0 92 73 30 	sts	0x3073, r14	; 0x803073 <xTickCount>
     d40:	f0 92 74 30 	sts	0x3074, r15	; 0x803074 <xTickCount+0x1>
     d44:	e1 14       	cp	r14, r1
     d46:	f1 04       	cpc	r15, r1
     d48:	b9 f4       	brne	.+46     	; 0xd78 <xTaskIncrementTick+0x60>
     d4a:	80 91 8a 30 	lds	r24, 0x308A	; 0x80308a <pxDelayedTaskList>
     d4e:	90 91 8b 30 	lds	r25, 0x308B	; 0x80308b <pxDelayedTaskList+0x1>
     d52:	20 91 88 30 	lds	r18, 0x3088	; 0x803088 <pxOverflowDelayedTaskList>
     d56:	30 91 89 30 	lds	r19, 0x3089	; 0x803089 <pxOverflowDelayedTaskList+0x1>
     d5a:	20 93 8a 30 	sts	0x308A, r18	; 0x80308a <pxDelayedTaskList>
     d5e:	30 93 8b 30 	sts	0x308B, r19	; 0x80308b <pxDelayedTaskList+0x1>
     d62:	80 93 88 30 	sts	0x3088, r24	; 0x803088 <pxOverflowDelayedTaskList>
     d66:	90 93 89 30 	sts	0x3089, r25	; 0x803089 <pxOverflowDelayedTaskList+0x1>
     d6a:	80 91 6e 30 	lds	r24, 0x306E	; 0x80306e <xNumOfOverflows>
     d6e:	8f 5f       	subi	r24, 0xFF	; 255
     d70:	80 93 6e 30 	sts	0x306E, r24	; 0x80306e <xNumOfOverflows>
     d74:	0e 94 d3 04 	call	0x9a6	; 0x9a6 <prvResetNextTaskUnblockTime>
     d78:	80 91 6b 30 	lds	r24, 0x306B	; 0x80306b <xNextTaskUnblockTime>
     d7c:	90 91 6c 30 	lds	r25, 0x306C	; 0x80306c <xNextTaskUnblockTime+0x1>
     d80:	e8 16       	cp	r14, r24
     d82:	f9 06       	cpc	r15, r25
     d84:	10 f4       	brcc	.+4      	; 0xd8a <xTaskIncrementTick+0x72>
     d86:	d1 2c       	mov	r13, r1
     d88:	52 c0       	rjmp	.+164    	; 0xe2e <xTaskIncrementTick+0x116>
     d8a:	d1 2c       	mov	r13, r1
     d8c:	e0 91 8a 30 	lds	r30, 0x308A	; 0x80308a <pxDelayedTaskList>
     d90:	f0 91 8b 30 	lds	r31, 0x308B	; 0x80308b <pxDelayedTaskList+0x1>
     d94:	80 81       	ld	r24, Z
     d96:	81 11       	cpse	r24, r1
     d98:	07 c0       	rjmp	.+14     	; 0xda8 <xTaskIncrementTick+0x90>
     d9a:	8f ef       	ldi	r24, 0xFF	; 255
     d9c:	9f ef       	ldi	r25, 0xFF	; 255
     d9e:	80 93 6b 30 	sts	0x306B, r24	; 0x80306b <xNextTaskUnblockTime>
     da2:	90 93 6c 30 	sts	0x306C, r25	; 0x80306c <xNextTaskUnblockTime+0x1>
     da6:	43 c0       	rjmp	.+134    	; 0xe2e <xTaskIncrementTick+0x116>
     da8:	e0 91 8a 30 	lds	r30, 0x308A	; 0x80308a <pxDelayedTaskList>
     dac:	f0 91 8b 30 	lds	r31, 0x308B	; 0x80308b <pxDelayedTaskList+0x1>
     db0:	05 80       	ldd	r0, Z+5	; 0x05
     db2:	f6 81       	ldd	r31, Z+6	; 0x06
     db4:	e0 2d       	mov	r30, r0
     db6:	c6 81       	ldd	r28, Z+6	; 0x06
     db8:	d7 81       	ldd	r29, Z+7	; 0x07
     dba:	8a 81       	ldd	r24, Y+2	; 0x02
     dbc:	9b 81       	ldd	r25, Y+3	; 0x03
     dbe:	e8 16       	cp	r14, r24
     dc0:	f9 06       	cpc	r15, r25
     dc2:	28 f4       	brcc	.+10     	; 0xdce <xTaskIncrementTick+0xb6>
     dc4:	80 93 6b 30 	sts	0x306B, r24	; 0x80306b <xNextTaskUnblockTime>
     dc8:	90 93 6c 30 	sts	0x306C, r25	; 0x80306c <xNextTaskUnblockTime+0x1>
     dcc:	30 c0       	rjmp	.+96     	; 0xe2e <xTaskIncrementTick+0x116>
     dce:	8e 01       	movw	r16, r28
     dd0:	0e 5f       	subi	r16, 0xFE	; 254
     dd2:	1f 4f       	sbci	r17, 0xFF	; 255
     dd4:	c8 01       	movw	r24, r16
     dd6:	0e 94 ce 00 	call	0x19c	; 0x19c <uxListRemove>
     dda:	8c 89       	ldd	r24, Y+20	; 0x14
     ddc:	9d 89       	ldd	r25, Y+21	; 0x15
     dde:	89 2b       	or	r24, r25
     de0:	21 f0       	breq	.+8      	; 0xdea <xTaskIncrementTick+0xd2>
     de2:	ce 01       	movw	r24, r28
     de4:	0c 96       	adiw	r24, 0x0c	; 12
     de6:	0e 94 ce 00 	call	0x19c	; 0x19c <uxListRemove>
     dea:	8e 89       	ldd	r24, Y+22	; 0x16
     dec:	90 91 72 30 	lds	r25, 0x3072	; 0x803072 <uxTopReadyPriority>
     df0:	98 17       	cp	r25, r24
     df2:	10 f4       	brcc	.+4      	; 0xdf8 <xTaskIncrementTick+0xe0>
     df4:	80 93 72 30 	sts	0x3072, r24	; 0x803072 <uxTopReadyPriority>
     df8:	90 e0       	ldi	r25, 0x00	; 0
     dfa:	9c 01       	movw	r18, r24
     dfc:	22 0f       	add	r18, r18
     dfe:	33 1f       	adc	r19, r19
     e00:	22 0f       	add	r18, r18
     e02:	33 1f       	adc	r19, r19
     e04:	22 0f       	add	r18, r18
     e06:	33 1f       	adc	r19, r19
     e08:	82 0f       	add	r24, r18
     e0a:	93 1f       	adc	r25, r19
     e0c:	b8 01       	movw	r22, r16
     e0e:	82 56       	subi	r24, 0x62	; 98
     e10:	9f 4c       	sbci	r25, 0xCF	; 207
     e12:	0e 94 7c 00 	call	0xf8	; 0xf8 <vListInsertEnd>
     e16:	e0 91 c2 30 	lds	r30, 0x30C2	; 0x8030c2 <pxCurrentTCB>
     e1a:	f0 91 c3 30 	lds	r31, 0x30C3	; 0x8030c3 <pxCurrentTCB+0x1>
     e1e:	9e 89       	ldd	r25, Y+22	; 0x16
     e20:	86 89       	ldd	r24, Z+22	; 0x16
     e22:	98 17       	cp	r25, r24
     e24:	08 f4       	brcc	.+2      	; 0xe28 <xTaskIncrementTick+0x110>
     e26:	b2 cf       	rjmp	.-156    	; 0xd8c <xTaskIncrementTick+0x74>
     e28:	dd 24       	eor	r13, r13
     e2a:	d3 94       	inc	r13
     e2c:	af cf       	rjmp	.-162    	; 0xd8c <xTaskIncrementTick+0x74>
     e2e:	e0 91 c2 30 	lds	r30, 0x30C2	; 0x8030c2 <pxCurrentTCB>
     e32:	f0 91 c3 30 	lds	r31, 0x30C3	; 0x8030c3 <pxCurrentTCB+0x1>
     e36:	86 89       	ldd	r24, Z+22	; 0x16
     e38:	90 e0       	ldi	r25, 0x00	; 0
     e3a:	fc 01       	movw	r30, r24
     e3c:	ee 0f       	add	r30, r30
     e3e:	ff 1f       	adc	r31, r31
     e40:	ee 0f       	add	r30, r30
     e42:	ff 1f       	adc	r31, r31
     e44:	ee 0f       	add	r30, r30
     e46:	ff 1f       	adc	r31, r31
     e48:	8e 0f       	add	r24, r30
     e4a:	9f 1f       	adc	r25, r31
     e4c:	fc 01       	movw	r30, r24
     e4e:	e2 56       	subi	r30, 0x62	; 98
     e50:	ff 4c       	sbci	r31, 0xCF	; 207
     e52:	80 81       	ld	r24, Z
     e54:	82 30       	cpi	r24, 0x02	; 2
     e56:	48 f0       	brcs	.+18     	; 0xe6a <xTaskIncrementTick+0x152>
     e58:	dd 24       	eor	r13, r13
     e5a:	d3 94       	inc	r13
     e5c:	06 c0       	rjmp	.+12     	; 0xe6a <xTaskIncrementTick+0x152>
     e5e:	80 91 70 30 	lds	r24, 0x3070	; 0x803070 <uxPendedTicks>
     e62:	8f 5f       	subi	r24, 0xFF	; 255
     e64:	80 93 70 30 	sts	0x3070, r24	; 0x803070 <uxPendedTicks>
     e68:	d1 2c       	mov	r13, r1
     e6a:	80 91 6f 30 	lds	r24, 0x306F	; 0x80306f <xYieldPending>
     e6e:	88 23       	and	r24, r24
     e70:	11 f0       	breq	.+4      	; 0xe76 <xTaskIncrementTick+0x15e>
     e72:	dd 24       	eor	r13, r13
     e74:	d3 94       	inc	r13
     e76:	8d 2d       	mov	r24, r13
     e78:	df 91       	pop	r29
     e7a:	cf 91       	pop	r28
     e7c:	1f 91       	pop	r17
     e7e:	0f 91       	pop	r16
     e80:	ff 90       	pop	r15
     e82:	ef 90       	pop	r14
     e84:	df 90       	pop	r13
     e86:	08 95       	ret

00000e88 <xTaskResumeAll>:
     e88:	df 92       	push	r13
     e8a:	ef 92       	push	r14
     e8c:	ff 92       	push	r15
     e8e:	0f 93       	push	r16
     e90:	1f 93       	push	r17
     e92:	cf 93       	push	r28
     e94:	df 93       	push	r29
     e96:	0f b6       	in	r0, 0x3f	; 63
     e98:	f8 94       	cli
     e9a:	0f 92       	push	r0
     e9c:	80 91 68 30 	lds	r24, 0x3068	; 0x803068 <uxSchedulerSuspended>
     ea0:	81 50       	subi	r24, 0x01	; 1
     ea2:	80 93 68 30 	sts	0x3068, r24	; 0x803068 <uxSchedulerSuspended>
     ea6:	80 91 68 30 	lds	r24, 0x3068	; 0x803068 <uxSchedulerSuspended>
     eaa:	81 11       	cpse	r24, r1
     eac:	5f c0       	rjmp	.+190    	; 0xf6c <xTaskResumeAll+0xe4>
     eae:	80 91 75 30 	lds	r24, 0x3075	; 0x803075 <uxCurrentNumberOfTasks>
     eb2:	81 11       	cpse	r24, r1
     eb4:	33 c0       	rjmp	.+102    	; 0xf1c <xTaskResumeAll+0x94>
     eb6:	5d c0       	rjmp	.+186    	; 0xf72 <xTaskResumeAll+0xea>
     eb8:	d7 01       	movw	r26, r14
     eba:	15 96       	adiw	r26, 0x05	; 5
     ebc:	ed 91       	ld	r30, X+
     ebe:	fc 91       	ld	r31, X
     ec0:	16 97       	sbiw	r26, 0x06	; 6
     ec2:	c6 81       	ldd	r28, Z+6	; 0x06
     ec4:	d7 81       	ldd	r29, Z+7	; 0x07
     ec6:	ce 01       	movw	r24, r28
     ec8:	0c 96       	adiw	r24, 0x0c	; 12
     eca:	0e 94 ce 00 	call	0x19c	; 0x19c <uxListRemove>
     ece:	8e 01       	movw	r16, r28
     ed0:	0e 5f       	subi	r16, 0xFE	; 254
     ed2:	1f 4f       	sbci	r17, 0xFF	; 255
     ed4:	c8 01       	movw	r24, r16
     ed6:	0e 94 ce 00 	call	0x19c	; 0x19c <uxListRemove>
     eda:	8e 89       	ldd	r24, Y+22	; 0x16
     edc:	90 91 72 30 	lds	r25, 0x3072	; 0x803072 <uxTopReadyPriority>
     ee0:	98 17       	cp	r25, r24
     ee2:	10 f4       	brcc	.+4      	; 0xee8 <xTaskResumeAll+0x60>
     ee4:	80 93 72 30 	sts	0x3072, r24	; 0x803072 <uxTopReadyPriority>
     ee8:	90 e0       	ldi	r25, 0x00	; 0
     eea:	9c 01       	movw	r18, r24
     eec:	22 0f       	add	r18, r18
     eee:	33 1f       	adc	r19, r19
     ef0:	22 0f       	add	r18, r18
     ef2:	33 1f       	adc	r19, r19
     ef4:	22 0f       	add	r18, r18
     ef6:	33 1f       	adc	r19, r19
     ef8:	82 0f       	add	r24, r18
     efa:	93 1f       	adc	r25, r19
     efc:	b8 01       	movw	r22, r16
     efe:	82 56       	subi	r24, 0x62	; 98
     f00:	9f 4c       	sbci	r25, 0xCF	; 207
     f02:	0e 94 7c 00 	call	0xf8	; 0xf8 <vListInsertEnd>
     f06:	e0 91 c2 30 	lds	r30, 0x30C2	; 0x8030c2 <pxCurrentTCB>
     f0a:	f0 91 c3 30 	lds	r31, 0x30C3	; 0x8030c3 <pxCurrentTCB+0x1>
     f0e:	9e 89       	ldd	r25, Y+22	; 0x16
     f10:	86 89       	ldd	r24, Z+22	; 0x16
     f12:	98 17       	cp	r25, r24
     f14:	68 f0       	brcs	.+26     	; 0xf30 <xTaskResumeAll+0xa8>
     f16:	d0 92 6f 30 	sts	0x306F, r13	; 0x80306f <xYieldPending>
     f1a:	0a c0       	rjmp	.+20     	; 0xf30 <xTaskResumeAll+0xa8>
     f1c:	c0 e0       	ldi	r28, 0x00	; 0
     f1e:	d0 e0       	ldi	r29, 0x00	; 0
     f20:	0f 2e       	mov	r0, r31
     f22:	ff e7       	ldi	r31, 0x7F	; 127
     f24:	ef 2e       	mov	r14, r31
     f26:	f0 e3       	ldi	r31, 0x30	; 48
     f28:	ff 2e       	mov	r15, r31
     f2a:	f0 2d       	mov	r31, r0
     f2c:	dd 24       	eor	r13, r13
     f2e:	d3 94       	inc	r13
     f30:	f7 01       	movw	r30, r14
     f32:	80 81       	ld	r24, Z
     f34:	81 11       	cpse	r24, r1
     f36:	c0 cf       	rjmp	.-128    	; 0xeb8 <xTaskResumeAll+0x30>
     f38:	cd 2b       	or	r28, r29
     f3a:	11 f0       	breq	.+4      	; 0xf40 <xTaskResumeAll+0xb8>
     f3c:	0e 94 d3 04 	call	0x9a6	; 0x9a6 <prvResetNextTaskUnblockTime>
     f40:	c0 91 70 30 	lds	r28, 0x3070	; 0x803070 <uxPendedTicks>
     f44:	cc 23       	and	r28, r28
     f46:	51 f0       	breq	.+20     	; 0xf5c <xTaskResumeAll+0xd4>
     f48:	d1 e0       	ldi	r29, 0x01	; 1
     f4a:	0e 94 8c 06 	call	0xd18	; 0xd18 <xTaskIncrementTick>
     f4e:	81 11       	cpse	r24, r1
     f50:	d0 93 6f 30 	sts	0x306F, r29	; 0x80306f <xYieldPending>
     f54:	c1 50       	subi	r28, 0x01	; 1
     f56:	c9 f7       	brne	.-14     	; 0xf4a <xTaskResumeAll+0xc2>
     f58:	10 92 70 30 	sts	0x3070, r1	; 0x803070 <uxPendedTicks>
     f5c:	80 91 6f 30 	lds	r24, 0x306F	; 0x80306f <xYieldPending>
     f60:	88 23       	and	r24, r24
     f62:	31 f0       	breq	.+12     	; 0xf70 <xTaskResumeAll+0xe8>
     f64:	0e 94 3b 01 	call	0x276	; 0x276 <vPortYield>
     f68:	81 e0       	ldi	r24, 0x01	; 1
     f6a:	03 c0       	rjmp	.+6      	; 0xf72 <xTaskResumeAll+0xea>
     f6c:	80 e0       	ldi	r24, 0x00	; 0
     f6e:	01 c0       	rjmp	.+2      	; 0xf72 <xTaskResumeAll+0xea>
     f70:	80 e0       	ldi	r24, 0x00	; 0
     f72:	0f 90       	pop	r0
     f74:	0f be       	out	0x3f, r0	; 63
     f76:	df 91       	pop	r29
     f78:	cf 91       	pop	r28
     f7a:	1f 91       	pop	r17
     f7c:	0f 91       	pop	r16
     f7e:	ff 90       	pop	r15
     f80:	ef 90       	pop	r14
     f82:	df 90       	pop	r13
     f84:	08 95       	ret

00000f86 <vTaskDelay>:
     f86:	cf 93       	push	r28
     f88:	df 93       	push	r29
     f8a:	ec 01       	movw	r28, r24
     f8c:	89 2b       	or	r24, r25
     f8e:	51 f0       	breq	.+20     	; 0xfa4 <vTaskDelay+0x1e>
     f90:	0e 94 86 06 	call	0xd0c	; 0xd0c <vTaskSuspendAll>
     f94:	60 e0       	ldi	r22, 0x00	; 0
     f96:	ce 01       	movw	r24, r28
     f98:	0e 94 fa 04 	call	0x9f4	; 0x9f4 <prvAddCurrentTaskToDelayedList>
     f9c:	0e 94 44 07 	call	0xe88	; 0xe88 <xTaskResumeAll>
     fa0:	81 11       	cpse	r24, r1
     fa2:	02 c0       	rjmp	.+4      	; 0xfa8 <vTaskDelay+0x22>
     fa4:	0e 94 3b 01 	call	0x276	; 0x276 <vPortYield>
     fa8:	df 91       	pop	r29
     faa:	cf 91       	pop	r28
     fac:	08 95       	ret

00000fae <vTaskSwitchContext>:
     fae:	80 91 68 30 	lds	r24, 0x3068	; 0x803068 <uxSchedulerSuspended>
     fb2:	88 23       	and	r24, r24
     fb4:	21 f0       	breq	.+8      	; 0xfbe <vTaskSwitchContext+0x10>
     fb6:	81 e0       	ldi	r24, 0x01	; 1
     fb8:	80 93 6f 30 	sts	0x306F, r24	; 0x80306f <xYieldPending>
     fbc:	08 95       	ret
     fbe:	10 92 6f 30 	sts	0x306F, r1	; 0x80306f <xYieldPending>
     fc2:	20 91 72 30 	lds	r18, 0x3072	; 0x803072 <uxTopReadyPriority>
     fc6:	82 2f       	mov	r24, r18
     fc8:	90 e0       	ldi	r25, 0x00	; 0
     fca:	fc 01       	movw	r30, r24
     fcc:	ee 0f       	add	r30, r30
     fce:	ff 1f       	adc	r31, r31
     fd0:	ee 0f       	add	r30, r30
     fd2:	ff 1f       	adc	r31, r31
     fd4:	ee 0f       	add	r30, r30
     fd6:	ff 1f       	adc	r31, r31
     fd8:	e8 0f       	add	r30, r24
     fda:	f9 1f       	adc	r31, r25
     fdc:	e2 56       	subi	r30, 0x62	; 98
     fde:	ff 4c       	sbci	r31, 0xCF	; 207
     fe0:	30 81       	ld	r19, Z
     fe2:	31 11       	cpse	r19, r1
     fe4:	11 c0       	rjmp	.+34     	; 0x1008 <vTaskSwitchContext+0x5a>
     fe6:	21 50       	subi	r18, 0x01	; 1
     fe8:	82 2f       	mov	r24, r18
     fea:	90 e0       	ldi	r25, 0x00	; 0
     fec:	fc 01       	movw	r30, r24
     fee:	ee 0f       	add	r30, r30
     ff0:	ff 1f       	adc	r31, r31
     ff2:	ee 0f       	add	r30, r30
     ff4:	ff 1f       	adc	r31, r31
     ff6:	ee 0f       	add	r30, r30
     ff8:	ff 1f       	adc	r31, r31
     ffa:	e8 0f       	add	r30, r24
     ffc:	f9 1f       	adc	r31, r25
     ffe:	e2 56       	subi	r30, 0x62	; 98
    1000:	ff 4c       	sbci	r31, 0xCF	; 207
    1002:	30 81       	ld	r19, Z
    1004:	33 23       	and	r19, r19
    1006:	79 f3       	breq	.-34     	; 0xfe6 <vTaskSwitchContext+0x38>
    1008:	ac 01       	movw	r20, r24
    100a:	44 0f       	add	r20, r20
    100c:	55 1f       	adc	r21, r21
    100e:	44 0f       	add	r20, r20
    1010:	55 1f       	adc	r21, r21
    1012:	44 0f       	add	r20, r20
    1014:	55 1f       	adc	r21, r21
    1016:	48 0f       	add	r20, r24
    1018:	59 1f       	adc	r21, r25
    101a:	da 01       	movw	r26, r20
    101c:	a2 56       	subi	r26, 0x62	; 98
    101e:	bf 4c       	sbci	r27, 0xCF	; 207
    1020:	11 96       	adiw	r26, 0x01	; 1
    1022:	ed 91       	ld	r30, X+
    1024:	fc 91       	ld	r31, X
    1026:	12 97       	sbiw	r26, 0x02	; 2
    1028:	02 80       	ldd	r0, Z+2	; 0x02
    102a:	f3 81       	ldd	r31, Z+3	; 0x03
    102c:	e0 2d       	mov	r30, r0
    102e:	11 96       	adiw	r26, 0x01	; 1
    1030:	ed 93       	st	X+, r30
    1032:	fc 93       	st	X, r31
    1034:	12 97       	sbiw	r26, 0x02	; 2
    1036:	4f 55       	subi	r20, 0x5F	; 95
    1038:	5f 4c       	sbci	r21, 0xCF	; 207
    103a:	e4 17       	cp	r30, r20
    103c:	f5 07       	cpc	r31, r21
    103e:	29 f4       	brne	.+10     	; 0x104a <vTaskSwitchContext+0x9c>
    1040:	42 81       	ldd	r20, Z+2	; 0x02
    1042:	53 81       	ldd	r21, Z+3	; 0x03
    1044:	fd 01       	movw	r30, r26
    1046:	41 83       	std	Z+1, r20	; 0x01
    1048:	52 83       	std	Z+2, r21	; 0x02
    104a:	fc 01       	movw	r30, r24
    104c:	ee 0f       	add	r30, r30
    104e:	ff 1f       	adc	r31, r31
    1050:	ee 0f       	add	r30, r30
    1052:	ff 1f       	adc	r31, r31
    1054:	ee 0f       	add	r30, r30
    1056:	ff 1f       	adc	r31, r31
    1058:	8e 0f       	add	r24, r30
    105a:	9f 1f       	adc	r25, r31
    105c:	fc 01       	movw	r30, r24
    105e:	e2 56       	subi	r30, 0x62	; 98
    1060:	ff 4c       	sbci	r31, 0xCF	; 207
    1062:	01 80       	ldd	r0, Z+1	; 0x01
    1064:	f2 81       	ldd	r31, Z+2	; 0x02
    1066:	e0 2d       	mov	r30, r0
    1068:	86 81       	ldd	r24, Z+6	; 0x06
    106a:	97 81       	ldd	r25, Z+7	; 0x07
    106c:	80 93 c2 30 	sts	0x30C2, r24	; 0x8030c2 <pxCurrentTCB>
    1070:	90 93 c3 30 	sts	0x30C3, r25	; 0x8030c3 <pxCurrentTCB+0x1>
    1074:	20 93 72 30 	sts	0x3072, r18	; 0x803072 <uxTopReadyPriority>
    1078:	08 95       	ret

0000107a <vTaskPlaceOnEventList>:
    107a:	cf 93       	push	r28
    107c:	df 93       	push	r29
    107e:	eb 01       	movw	r28, r22
    1080:	60 91 c2 30 	lds	r22, 0x30C2	; 0x8030c2 <pxCurrentTCB>
    1084:	70 91 c3 30 	lds	r23, 0x30C3	; 0x8030c3 <pxCurrentTCB+0x1>
    1088:	64 5f       	subi	r22, 0xF4	; 244
    108a:	7f 4f       	sbci	r23, 0xFF	; 255
    108c:	0e 94 9d 00 	call	0x13a	; 0x13a <vListInsert>
    1090:	61 e0       	ldi	r22, 0x01	; 1
    1092:	ce 01       	movw	r24, r28
    1094:	0e 94 fa 04 	call	0x9f4	; 0x9f4 <prvAddCurrentTaskToDelayedList>
    1098:	df 91       	pop	r29
    109a:	cf 91       	pop	r28
    109c:	08 95       	ret

0000109e <xTaskRemoveFromEventList>:
    109e:	0f 93       	push	r16
    10a0:	1f 93       	push	r17
    10a2:	cf 93       	push	r28
    10a4:	df 93       	push	r29
    10a6:	dc 01       	movw	r26, r24
    10a8:	15 96       	adiw	r26, 0x05	; 5
    10aa:	ed 91       	ld	r30, X+
    10ac:	fc 91       	ld	r31, X
    10ae:	16 97       	sbiw	r26, 0x06	; 6
    10b0:	c6 81       	ldd	r28, Z+6	; 0x06
    10b2:	d7 81       	ldd	r29, Z+7	; 0x07
    10b4:	8e 01       	movw	r16, r28
    10b6:	04 5f       	subi	r16, 0xF4	; 244
    10b8:	1f 4f       	sbci	r17, 0xFF	; 255
    10ba:	c8 01       	movw	r24, r16
    10bc:	0e 94 ce 00 	call	0x19c	; 0x19c <uxListRemove>
    10c0:	80 91 68 30 	lds	r24, 0x3068	; 0x803068 <uxSchedulerSuspended>
    10c4:	81 11       	cpse	r24, r1
    10c6:	1c c0       	rjmp	.+56     	; 0x1100 <xTaskRemoveFromEventList+0x62>
    10c8:	0a 50       	subi	r16, 0x0A	; 10
    10ca:	11 09       	sbc	r17, r1
    10cc:	c8 01       	movw	r24, r16
    10ce:	0e 94 ce 00 	call	0x19c	; 0x19c <uxListRemove>
    10d2:	8e 89       	ldd	r24, Y+22	; 0x16
    10d4:	90 91 72 30 	lds	r25, 0x3072	; 0x803072 <uxTopReadyPriority>
    10d8:	98 17       	cp	r25, r24
    10da:	10 f4       	brcc	.+4      	; 0x10e0 <xTaskRemoveFromEventList+0x42>
    10dc:	80 93 72 30 	sts	0x3072, r24	; 0x803072 <uxTopReadyPriority>
    10e0:	90 e0       	ldi	r25, 0x00	; 0
    10e2:	9c 01       	movw	r18, r24
    10e4:	22 0f       	add	r18, r18
    10e6:	33 1f       	adc	r19, r19
    10e8:	22 0f       	add	r18, r18
    10ea:	33 1f       	adc	r19, r19
    10ec:	22 0f       	add	r18, r18
    10ee:	33 1f       	adc	r19, r19
    10f0:	82 0f       	add	r24, r18
    10f2:	93 1f       	adc	r25, r19
    10f4:	b8 01       	movw	r22, r16
    10f6:	82 56       	subi	r24, 0x62	; 98
    10f8:	9f 4c       	sbci	r25, 0xCF	; 207
    10fa:	0e 94 7c 00 	call	0xf8	; 0xf8 <vListInsertEnd>
    10fe:	05 c0       	rjmp	.+10     	; 0x110a <xTaskRemoveFromEventList+0x6c>
    1100:	b8 01       	movw	r22, r16
    1102:	8f e7       	ldi	r24, 0x7F	; 127
    1104:	90 e3       	ldi	r25, 0x30	; 48
    1106:	0e 94 7c 00 	call	0xf8	; 0xf8 <vListInsertEnd>
    110a:	e0 91 c2 30 	lds	r30, 0x30C2	; 0x8030c2 <pxCurrentTCB>
    110e:	f0 91 c3 30 	lds	r31, 0x30C3	; 0x8030c3 <pxCurrentTCB+0x1>
    1112:	9e 89       	ldd	r25, Y+22	; 0x16
    1114:	86 89       	ldd	r24, Z+22	; 0x16
    1116:	89 17       	cp	r24, r25
    1118:	20 f4       	brcc	.+8      	; 0x1122 <xTaskRemoveFromEventList+0x84>
    111a:	81 e0       	ldi	r24, 0x01	; 1
    111c:	80 93 6f 30 	sts	0x306F, r24	; 0x80306f <xYieldPending>
    1120:	01 c0       	rjmp	.+2      	; 0x1124 <xTaskRemoveFromEventList+0x86>
    1122:	80 e0       	ldi	r24, 0x00	; 0
    1124:	df 91       	pop	r29
    1126:	cf 91       	pop	r28
    1128:	1f 91       	pop	r17
    112a:	0f 91       	pop	r16
    112c:	08 95       	ret

0000112e <vTaskInternalSetTimeOutState>:
    112e:	20 91 6e 30 	lds	r18, 0x306E	; 0x80306e <xNumOfOverflows>
    1132:	fc 01       	movw	r30, r24
    1134:	20 83       	st	Z, r18
    1136:	20 91 73 30 	lds	r18, 0x3073	; 0x803073 <xTickCount>
    113a:	30 91 74 30 	lds	r19, 0x3074	; 0x803074 <xTickCount+0x1>
    113e:	21 83       	std	Z+1, r18	; 0x01
    1140:	32 83       	std	Z+2, r19	; 0x02
    1142:	08 95       	ret

00001144 <xTaskCheckForTimeOut>:
    1144:	cf 93       	push	r28
    1146:	df 93       	push	r29
    1148:	0f b6       	in	r0, 0x3f	; 63
    114a:	f8 94       	cli
    114c:	0f 92       	push	r0
    114e:	20 91 73 30 	lds	r18, 0x3073	; 0x803073 <xTickCount>
    1152:	30 91 74 30 	lds	r19, 0x3074	; 0x803074 <xTickCount+0x1>
    1156:	db 01       	movw	r26, r22
    1158:	4d 91       	ld	r20, X+
    115a:	5c 91       	ld	r21, X
    115c:	4f 3f       	cpi	r20, 0xFF	; 255
    115e:	bf ef       	ldi	r27, 0xFF	; 255
    1160:	5b 07       	cpc	r21, r27
    1162:	f1 f0       	breq	.+60     	; 0x11a0 <xTaskCheckForTimeOut+0x5c>
    1164:	ec 01       	movw	r28, r24
    1166:	e9 81       	ldd	r30, Y+1	; 0x01
    1168:	fa 81       	ldd	r31, Y+2	; 0x02
    116a:	a0 91 6e 30 	lds	r26, 0x306E	; 0x80306e <xNumOfOverflows>
    116e:	b8 81       	ld	r27, Y
    1170:	ba 17       	cp	r27, r26
    1172:	19 f0       	breq	.+6      	; 0x117a <xTaskCheckForTimeOut+0x36>
    1174:	2e 17       	cp	r18, r30
    1176:	3f 07       	cpc	r19, r31
    1178:	a8 f4       	brcc	.+42     	; 0x11a4 <xTaskCheckForTimeOut+0x60>
    117a:	2e 1b       	sub	r18, r30
    117c:	3f 0b       	sbc	r19, r31
    117e:	24 17       	cp	r18, r20
    1180:	35 07       	cpc	r19, r21
    1182:	48 f4       	brcc	.+18     	; 0x1196 <xTaskCheckForTimeOut+0x52>
    1184:	fb 01       	movw	r30, r22
    1186:	42 1b       	sub	r20, r18
    1188:	53 0b       	sbc	r21, r19
    118a:	40 83       	st	Z, r20
    118c:	51 83       	std	Z+1, r21	; 0x01
    118e:	0e 94 97 08 	call	0x112e	; 0x112e <vTaskInternalSetTimeOutState>
    1192:	80 e0       	ldi	r24, 0x00	; 0
    1194:	08 c0       	rjmp	.+16     	; 0x11a6 <xTaskCheckForTimeOut+0x62>
    1196:	fb 01       	movw	r30, r22
    1198:	10 82       	st	Z, r1
    119a:	11 82       	std	Z+1, r1	; 0x01
    119c:	81 e0       	ldi	r24, 0x01	; 1
    119e:	03 c0       	rjmp	.+6      	; 0x11a6 <xTaskCheckForTimeOut+0x62>
    11a0:	80 e0       	ldi	r24, 0x00	; 0
    11a2:	01 c0       	rjmp	.+2      	; 0x11a6 <xTaskCheckForTimeOut+0x62>
    11a4:	81 e0       	ldi	r24, 0x01	; 1
    11a6:	0f 90       	pop	r0
    11a8:	0f be       	out	0x3f, r0	; 63
    11aa:	df 91       	pop	r29
    11ac:	cf 91       	pop	r28
    11ae:	08 95       	ret

000011b0 <vTaskMissedYield>:
    11b0:	81 e0       	ldi	r24, 0x01	; 1
    11b2:	80 93 6f 30 	sts	0x306F, r24	; 0x80306f <xYieldPending>
    11b6:	08 95       	ret

000011b8 <xTaskPriorityDisinherit>:
    11b8:	0f 93       	push	r16
    11ba:	1f 93       	push	r17
    11bc:	cf 93       	push	r28
    11be:	df 93       	push	r29
    11c0:	fc 01       	movw	r30, r24
    11c2:	89 2b       	or	r24, r25
    11c4:	79 f1       	breq	.+94     	; 0x1224 <xTaskPriorityDisinherit+0x6c>
    11c6:	82 a1       	ldd	r24, Z+34	; 0x22
    11c8:	81 50       	subi	r24, 0x01	; 1
    11ca:	82 a3       	std	Z+34, r24	; 0x22
    11cc:	26 89       	ldd	r18, Z+22	; 0x16
    11ce:	91 a1       	ldd	r25, Z+33	; 0x21
    11d0:	29 17       	cp	r18, r25
    11d2:	51 f1       	breq	.+84     	; 0x1228 <xTaskPriorityDisinherit+0x70>
    11d4:	81 11       	cpse	r24, r1
    11d6:	2a c0       	rjmp	.+84     	; 0x122c <xTaskPriorityDisinherit+0x74>
    11d8:	ef 01       	movw	r28, r30
    11da:	8f 01       	movw	r16, r30
    11dc:	0e 5f       	subi	r16, 0xFE	; 254
    11de:	1f 4f       	sbci	r17, 0xFF	; 255
    11e0:	c8 01       	movw	r24, r16
    11e2:	0e 94 ce 00 	call	0x19c	; 0x19c <uxListRemove>
    11e6:	89 a1       	ldd	r24, Y+33	; 0x21
    11e8:	8e 8b       	std	Y+22, r24	; 0x16
    11ea:	24 e0       	ldi	r18, 0x04	; 4
    11ec:	30 e0       	ldi	r19, 0x00	; 0
    11ee:	28 1b       	sub	r18, r24
    11f0:	31 09       	sbc	r19, r1
    11f2:	2c 87       	std	Y+12, r18	; 0x0c
    11f4:	3d 87       	std	Y+13, r19	; 0x0d
    11f6:	90 91 72 30 	lds	r25, 0x3072	; 0x803072 <uxTopReadyPriority>
    11fa:	98 17       	cp	r25, r24
    11fc:	10 f4       	brcc	.+4      	; 0x1202 <xTaskPriorityDisinherit+0x4a>
    11fe:	80 93 72 30 	sts	0x3072, r24	; 0x803072 <uxTopReadyPriority>
    1202:	90 e0       	ldi	r25, 0x00	; 0
    1204:	9c 01       	movw	r18, r24
    1206:	22 0f       	add	r18, r18
    1208:	33 1f       	adc	r19, r19
    120a:	22 0f       	add	r18, r18
    120c:	33 1f       	adc	r19, r19
    120e:	22 0f       	add	r18, r18
    1210:	33 1f       	adc	r19, r19
    1212:	82 0f       	add	r24, r18
    1214:	93 1f       	adc	r25, r19
    1216:	b8 01       	movw	r22, r16
    1218:	82 56       	subi	r24, 0x62	; 98
    121a:	9f 4c       	sbci	r25, 0xCF	; 207
    121c:	0e 94 7c 00 	call	0xf8	; 0xf8 <vListInsertEnd>
    1220:	81 e0       	ldi	r24, 0x01	; 1
    1222:	05 c0       	rjmp	.+10     	; 0x122e <xTaskPriorityDisinherit+0x76>
    1224:	80 e0       	ldi	r24, 0x00	; 0
    1226:	03 c0       	rjmp	.+6      	; 0x122e <xTaskPriorityDisinherit+0x76>
    1228:	80 e0       	ldi	r24, 0x00	; 0
    122a:	01 c0       	rjmp	.+2      	; 0x122e <xTaskPriorityDisinherit+0x76>
    122c:	80 e0       	ldi	r24, 0x00	; 0
    122e:	df 91       	pop	r29
    1230:	cf 91       	pop	r28
    1232:	1f 91       	pop	r17
    1234:	0f 91       	pop	r16
    1236:	08 95       	ret

00001238 <vSenderTask>:
	vTaskStartScheduler();
	return 0;
}

void vSenderTask(void *pvParams)
{
    1238:	cf 93       	push	r28
    123a:	df 93       	push	r29
    123c:	00 d0       	rcall	.+0      	; 0x123e <vSenderTask+0x6>
    123e:	cd b7       	in	r28, 0x3d	; 61
    1240:	de b7       	in	r29, 0x3e	; 62
    1242:	89 83       	std	Y+1, r24	; 0x01
    1244:	9a 83       	std	Y+2, r25	; 0x02
	for (;;)
	{
		if (strlen((char*)pvParams)>0)
    1246:	e9 81       	ldd	r30, Y+1	; 0x01
    1248:	fa 81       	ldd	r31, Y+2	; 0x02
    124a:	80 81       	ld	r24, Z
    124c:	88 23       	and	r24, r24
    124e:	61 f0       	breq	.+24     	; 0x1268 <vSenderTask+0x30>
		{
			xQueueSend(xPrintQueue,(void *)&pvParams,0);
    1250:	20 e0       	ldi	r18, 0x00	; 0
    1252:	40 e0       	ldi	r20, 0x00	; 0
    1254:	50 e0       	ldi	r21, 0x00	; 0
    1256:	be 01       	movw	r22, r28
    1258:	6f 5f       	subi	r22, 0xFF	; 255
    125a:	7f 4f       	sbci	r23, 0xFF	; 255
    125c:	80 91 eb 30 	lds	r24, 0x30EB	; 0x8030eb <xPrintQueue>
    1260:	90 91 ec 30 	lds	r25, 0x30EC	; 0x8030ec <xPrintQueue+0x1>
    1264:	0e 94 69 03 	call	0x6d2	; 0x6d2 <xQueueGenericSend>
		}
		vTaskDelay(pdMS_TO_TICKS(1000));
    1268:	88 ee       	ldi	r24, 0xE8	; 232
    126a:	93 e0       	ldi	r25, 0x03	; 3
    126c:	0e 94 c3 07 	call	0xf86	; 0xf86 <vTaskDelay>
	}
    1270:	ea cf       	rjmp	.-44     	; 0x1246 <vSenderTask+0xe>

00001272 <vSenderTask2>:
}

void vSenderTask2(void *pvParams)
{
    1272:	cf 93       	push	r28
    1274:	df 93       	push	r29
    1276:	00 d0       	rcall	.+0      	; 0x1278 <vSenderTask2+0x6>
    1278:	cd b7       	in	r28, 0x3d	; 61
    127a:	de b7       	in	r29, 0x3e	; 62
    127c:	89 83       	std	Y+1, r24	; 0x01
    127e:	9a 83       	std	Y+2, r25	; 0x02
	for (;;)
	{
		if (strlen((char*)pvParams)>0)
    1280:	e9 81       	ldd	r30, Y+1	; 0x01
    1282:	fa 81       	ldd	r31, Y+2	; 0x02
    1284:	80 81       	ld	r24, Z
    1286:	88 23       	and	r24, r24
    1288:	61 f0       	breq	.+24     	; 0x12a2 <vSenderTask2+0x30>
		{
			xQueueSend(xPrintQueue,(void *)&pvParams,0);
    128a:	20 e0       	ldi	r18, 0x00	; 0
    128c:	40 e0       	ldi	r20, 0x00	; 0
    128e:	50 e0       	ldi	r21, 0x00	; 0
    1290:	be 01       	movw	r22, r28
    1292:	6f 5f       	subi	r22, 0xFF	; 255
    1294:	7f 4f       	sbci	r23, 0xFF	; 255
    1296:	80 91 eb 30 	lds	r24, 0x30EB	; 0x8030eb <xPrintQueue>
    129a:	90 91 ec 30 	lds	r25, 0x30EC	; 0x8030ec <xPrintQueue+0x1>
    129e:	0e 94 69 03 	call	0x6d2	; 0x6d2 <xQueueGenericSend>
		}
		vTaskDelay(pdMS_TO_TICKS(500));
    12a2:	84 ef       	ldi	r24, 0xF4	; 244
    12a4:	91 e0       	ldi	r25, 0x01	; 1
    12a6:	0e 94 c3 07 	call	0xf86	; 0xf86 <vTaskDelay>
	}
    12aa:	ea cf       	rjmp	.-44     	; 0x1280 <vSenderTask2+0xe>

000012ac <main>:
char msg2[] = "This is the Message two\r\n";
char *ptr = msg;
extern char command[10];

int main(void)
{
    12ac:	ef 92       	push	r14
    12ae:	ff 92       	push	r15
    12b0:	0f 93       	push	r16
	atmel_start_init();
    12b2:	0e 94 67 00 	call	0xce	; 0xce <atmel_start_init>
	
	xPrintQueue = xQueueCreate(5,2);
    12b6:	40 e0       	ldi	r20, 0x00	; 0
    12b8:	62 e0       	ldi	r22, 0x02	; 2
    12ba:	85 e0       	ldi	r24, 0x05	; 5
    12bc:	0e 94 3c 03 	call	0x678	; 0x678 <xQueueGenericCreate>
    12c0:	80 93 eb 30 	sts	0x30EB, r24	; 0x8030eb <xPrintQueue>
    12c4:	90 93 ec 30 	sts	0x30EC, r25	; 0x8030ec <xPrintQueue+0x1>
	/* Task Registration and creation */
	xTaskCreate(vSenderTask, "sender", configMINIMAL_STACK_SIZE, (void *)msg, 1, NULL);
    12c8:	e1 2c       	mov	r14, r1
    12ca:	f1 2c       	mov	r15, r1
    12cc:	01 e0       	ldi	r16, 0x01	; 1
    12ce:	2a e1       	ldi	r18, 0x1A	; 26
    12d0:	38 e2       	ldi	r19, 0x28	; 40
    12d2:	43 e7       	ldi	r20, 0x73	; 115
    12d4:	50 e0       	ldi	r21, 0x00	; 0
    12d6:	6d eb       	ldi	r22, 0xBD	; 189
    12d8:	7b e5       	ldi	r23, 0x5B	; 91
    12da:	8c e1       	ldi	r24, 0x1C	; 28
    12dc:	99 e0       	ldi	r25, 0x09	; 9
    12de:	0e 94 52 05 	call	0xaa4	; 0xaa4 <xTaskCreate>
	xTaskCreate(vSenderTask2, "sender2", configMINIMAL_STACK_SIZE, (void *)msg2, 1, NULL);
    12e2:	20 e0       	ldi	r18, 0x00	; 0
    12e4:	38 e2       	ldi	r19, 0x28	; 40
    12e6:	43 e7       	ldi	r20, 0x73	; 115
    12e8:	50 e0       	ldi	r21, 0x00	; 0
    12ea:	64 ec       	ldi	r22, 0xC4	; 196
    12ec:	7b e5       	ldi	r23, 0x5B	; 91
    12ee:	89 e3       	ldi	r24, 0x39	; 57
    12f0:	99 e0       	ldi	r25, 0x09	; 9
    12f2:	0e 94 52 05 	call	0xaa4	; 0xaa4 <xTaskCreate>
	xTaskCreate(vReceiverTask, "receiver", configMINIMAL_STACK_SIZE, NULL, 2, NULL);
    12f6:	02 e0       	ldi	r16, 0x02	; 2
    12f8:	20 e0       	ldi	r18, 0x00	; 0
    12fa:	30 e0       	ldi	r19, 0x00	; 0
    12fc:	43 e7       	ldi	r20, 0x73	; 115
    12fe:	50 e0       	ldi	r21, 0x00	; 0
    1300:	6c ec       	ldi	r22, 0xCC	; 204
    1302:	7b e5       	ldi	r23, 0x5B	; 91
    1304:	8f e9       	ldi	r24, 0x9F	; 159
    1306:	99 e0       	ldi	r25, 0x09	; 9
    1308:	0e 94 52 05 	call	0xaa4	; 0xaa4 <xTaskCreate>
	
	vTaskStartScheduler();
    130c:	0e 94 5c 06 	call	0xcb8	; 0xcb8 <vTaskStartScheduler>
	return 0;
}
    1310:	80 e0       	ldi	r24, 0x00	; 0
    1312:	90 e0       	ldi	r25, 0x00	; 0
    1314:	0f 91       	pop	r16
    1316:	ff 90       	pop	r15
    1318:	ef 90       	pop	r14
    131a:	08 95       	ret

0000131c <vPrintString>:
		}
	}
}

void vPrintString(void *pvParams)
{
    131c:	cf 93       	push	r28
    131e:	df 93       	push	r29
    1320:	c8 2f       	mov	r28, r24
    1322:	d9 2f       	mov	r29, r25
	vTaskSuspendAll();
    1324:	0e 94 86 06 	call	0xd0c	; 0xd0c <vTaskSuspendAll>
	printf((const char *)pvParams);
    1328:	df 93       	push	r29
    132a:	cf 93       	push	r28
    132c:	0e 94 02 0b 	call	0x1604	; 0x1604 <printf>
	xTaskResumeAll();
    1330:	0e 94 44 07 	call	0xe88	; 0xe88 <xTaskResumeAll>
}
    1334:	0f 90       	pop	r0
    1336:	0f 90       	pop	r0
    1338:	df 91       	pop	r29
    133a:	cf 91       	pop	r28
    133c:	08 95       	ret

0000133e <vReceiverTask>:
		vTaskDelay(pdMS_TO_TICKS(500));
	}
}

void vReceiverTask(void *pvParams)
{
    133e:	cf 93       	push	r28
    1340:	df 93       	push	r29
    1342:	00 d0       	rcall	.+0      	; 0x1344 <vReceiverTask+0x6>
    1344:	cd b7       	in	r28, 0x3d	; 61
    1346:	de b7       	in	r29, 0x3e	; 62
	char *ptr=NULL;
    1348:	19 82       	std	Y+1, r1	; 0x01
    134a:	1a 82       	std	Y+2, r1	; 0x02
	for (;;)
	{
		if( xQueueReceive(xPrintQueue,(void *)&ptr,100) == pdPASS )
    134c:	44 e6       	ldi	r20, 0x64	; 100
    134e:	50 e0       	ldi	r21, 0x00	; 0
    1350:	be 01       	movw	r22, r28
    1352:	6f 5f       	subi	r22, 0xFF	; 255
    1354:	7f 4f       	sbci	r23, 0xFF	; 255
    1356:	80 91 eb 30 	lds	r24, 0x30EB	; 0x8030eb <xPrintQueue>
    135a:	90 91 ec 30 	lds	r25, 0x30EC	; 0x8030ec <xPrintQueue+0x1>
    135e:	0e 94 3f 04 	call	0x87e	; 0x87e <xQueueReceive>
    1362:	81 30       	cpi	r24, 0x01	; 1
    1364:	99 f7       	brne	.-26     	; 0x134c <vReceiverTask+0xe>
		{
			vPrintString((void *)ptr);
    1366:	89 81       	ldd	r24, Y+1	; 0x01
    1368:	9a 81       	ldd	r25, Y+2	; 0x02
    136a:	0e 94 8e 09 	call	0x131c	; 0x131c <vPrintString>
    136e:	ee cf       	rjmp	.-36     	; 0x134c <vReceiverTask+0xe>

00001370 <BOD_init>:
    1370:	82 e0       	ldi	r24, 0x02	; 2
    1372:	80 93 89 00 	sts	0x0089, r24	; 0x800089 <__TEXT_REGION_LENGTH__+0x700089>
    1376:	80 e0       	ldi	r24, 0x00	; 0
    1378:	08 95       	ret

0000137a <CLKCTRL_init>:
    137a:	41 e0       	ldi	r20, 0x01	; 1
    137c:	68 ed       	ldi	r22, 0xD8	; 216
    137e:	81 e6       	ldi	r24, 0x61	; 97
    1380:	90 e0       	ldi	r25, 0x00	; 0
    1382:	0e 94 1e 0a 	call	0x143c	; 0x143c <protected_write_io>
    1386:	80 e0       	ldi	r24, 0x00	; 0
    1388:	08 95       	ret

0000138a <CPUINT_init>:
    138a:	80 e0       	ldi	r24, 0x00	; 0
    138c:	08 95       	ret

0000138e <mcu_init>:
#ifdef __cplusplus
extern "C" {
#endif

void mcu_init(void)
{
    138e:	e0 e1       	ldi	r30, 0x10	; 16
    1390:	f4 e0       	ldi	r31, 0x04	; 4
	 * peripheral if used */

	/* Set all pins to low power mode */

	for (uint8_t i = 0; i < 8; i++) {
		*((uint8_t *)&PORTA + 0x10 + i) |= 1 << PORT_PULLUPEN_bp;
    1392:	80 81       	ld	r24, Z
    1394:	88 60       	ori	r24, 0x08	; 8
    1396:	81 93       	st	Z+, r24
	 * disables all peripherals to save power. Driver shall enable
	 * peripheral if used */

	/* Set all pins to low power mode */

	for (uint8_t i = 0; i < 8; i++) {
    1398:	e8 31       	cpi	r30, 0x18	; 24
    139a:	84 e0       	ldi	r24, 0x04	; 4
    139c:	f8 07       	cpc	r31, r24
    139e:	c9 f7       	brne	.-14     	; 0x1392 <mcu_init+0x4>
    13a0:	e0 e3       	ldi	r30, 0x30	; 48
    13a2:	f4 e0       	ldi	r31, 0x04	; 4
		*((uint8_t *)&PORTA + 0x10 + i) |= 1 << PORT_PULLUPEN_bp;
	}

	for (uint8_t i = 0; i < 8; i++) {
		*((uint8_t *)&PORTB + 0x10 + i) |= 1 << PORT_PULLUPEN_bp;
    13a4:	80 81       	ld	r24, Z
    13a6:	88 60       	ori	r24, 0x08	; 8
    13a8:	81 93       	st	Z+, r24

	for (uint8_t i = 0; i < 8; i++) {
		*((uint8_t *)&PORTA + 0x10 + i) |= 1 << PORT_PULLUPEN_bp;
	}

	for (uint8_t i = 0; i < 8; i++) {
    13aa:	e8 33       	cpi	r30, 0x38	; 56
    13ac:	84 e0       	ldi	r24, 0x04	; 4
    13ae:	f8 07       	cpc	r31, r24
    13b0:	c9 f7       	brne	.-14     	; 0x13a4 <mcu_init+0x16>
    13b2:	e0 e5       	ldi	r30, 0x50	; 80
    13b4:	f4 e0       	ldi	r31, 0x04	; 4
		*((uint8_t *)&PORTB + 0x10 + i) |= 1 << PORT_PULLUPEN_bp;
	}

	for (uint8_t i = 0; i < 8; i++) {
		*((uint8_t *)&PORTC + 0x10 + i) |= 1 << PORT_PULLUPEN_bp;
    13b6:	80 81       	ld	r24, Z
    13b8:	88 60       	ori	r24, 0x08	; 8
    13ba:	81 93       	st	Z+, r24

	for (uint8_t i = 0; i < 8; i++) {
		*((uint8_t *)&PORTB + 0x10 + i) |= 1 << PORT_PULLUPEN_bp;
	}

	for (uint8_t i = 0; i < 8; i++) {
    13bc:	e8 35       	cpi	r30, 0x58	; 88
    13be:	84 e0       	ldi	r24, 0x04	; 4
    13c0:	f8 07       	cpc	r31, r24
    13c2:	c9 f7       	brne	.-14     	; 0x13b6 <mcu_init+0x28>
    13c4:	e0 e7       	ldi	r30, 0x70	; 112
    13c6:	f4 e0       	ldi	r31, 0x04	; 4
		*((uint8_t *)&PORTC + 0x10 + i) |= 1 << PORT_PULLUPEN_bp;
	}

	for (uint8_t i = 0; i < 8; i++) {
		*((uint8_t *)&PORTD + 0x10 + i) |= 1 << PORT_PULLUPEN_bp;
    13c8:	80 81       	ld	r24, Z
    13ca:	88 60       	ori	r24, 0x08	; 8
    13cc:	81 93       	st	Z+, r24

	for (uint8_t i = 0; i < 8; i++) {
		*((uint8_t *)&PORTC + 0x10 + i) |= 1 << PORT_PULLUPEN_bp;
	}

	for (uint8_t i = 0; i < 8; i++) {
    13ce:	e8 37       	cpi	r30, 0x78	; 120
    13d0:	84 e0       	ldi	r24, 0x04	; 4
    13d2:	f8 07       	cpc	r31, r24
    13d4:	c9 f7       	brne	.-14     	; 0x13c8 <mcu_init+0x3a>
    13d6:	e0 e9       	ldi	r30, 0x90	; 144
    13d8:	f4 e0       	ldi	r31, 0x04	; 4
		*((uint8_t *)&PORTD + 0x10 + i) |= 1 << PORT_PULLUPEN_bp;
	}

	for (uint8_t i = 0; i < 8; i++) {
		*((uint8_t *)&PORTE + 0x10 + i) |= 1 << PORT_PULLUPEN_bp;
    13da:	80 81       	ld	r24, Z
    13dc:	88 60       	ori	r24, 0x08	; 8
    13de:	81 93       	st	Z+, r24

	for (uint8_t i = 0; i < 8; i++) {
		*((uint8_t *)&PORTD + 0x10 + i) |= 1 << PORT_PULLUPEN_bp;
	}

	for (uint8_t i = 0; i < 8; i++) {
    13e0:	e8 39       	cpi	r30, 0x98	; 152
    13e2:	84 e0       	ldi	r24, 0x04	; 4
    13e4:	f8 07       	cpc	r31, r24
    13e6:	c9 f7       	brne	.-14     	; 0x13da <mcu_init+0x4c>
    13e8:	e0 eb       	ldi	r30, 0xB0	; 176
    13ea:	f4 e0       	ldi	r31, 0x04	; 4
		*((uint8_t *)&PORTE + 0x10 + i) |= 1 << PORT_PULLUPEN_bp;
	}

	for (uint8_t i = 0; i < 8; i++) {
		*((uint8_t *)&PORTF + 0x10 + i) |= 1 << PORT_PULLUPEN_bp;
    13ec:	80 81       	ld	r24, Z
    13ee:	88 60       	ori	r24, 0x08	; 8
    13f0:	81 93       	st	Z+, r24

	for (uint8_t i = 0; i < 8; i++) {
		*((uint8_t *)&PORTE + 0x10 + i) |= 1 << PORT_PULLUPEN_bp;
	}

	for (uint8_t i = 0; i < 8; i++) {
    13f2:	e8 3b       	cpi	r30, 0xB8	; 184
    13f4:	84 e0       	ldi	r24, 0x04	; 4
    13f6:	f8 07       	cpc	r31, r24
    13f8:	c9 f7       	brne	.-14     	; 0x13ec <mcu_init+0x5e>
		*((uint8_t *)&PORTF + 0x10 + i) |= 1 << PORT_PULLUPEN_bp;
	}
}
    13fa:	08 95       	ret

000013fc <USART_0_initialization>:
 */
static inline void PORTF_set_pin_dir(const uint8_t pin, const enum port_dir dir)
{
	switch (dir) {
	case PORT_DIR_IN:
		VPORTF.DIR &= ~(1 << pin);
    13fc:	a1 98       	cbi	0x14, 1	; 20
	volatile uint8_t *port_pin_ctrl = ((uint8_t *)&PORTF + 0x10 + pin);

	if (pull_mode == PORT_PULL_UP) {
		*port_pin_ctrl |= PORT_PULLUPEN_bm;
	} else if (pull_mode == PORT_PULL_OFF) {
		*port_pin_ctrl &= ~PORT_PULLUPEN_bm;
    13fe:	e1 eb       	ldi	r30, 0xB1	; 177
    1400:	f4 e0       	ldi	r31, 0x04	; 4
    1402:	80 81       	ld	r24, Z
    1404:	87 7f       	andi	r24, 0xF7	; 247
    1406:	80 83       	st	Z, r24
	switch (dir) {
	case PORT_DIR_IN:
		VPORTF.DIR &= ~(1 << pin);
		break;
	case PORT_DIR_OUT:
		VPORTF.DIR |= (1 << pin);
    1408:	a0 9a       	sbi	0x14, 0	; 20
static inline void PORTF_set_pin_level(const uint8_t pin, const bool level)
{
	if (level == true) {
		VPORTF.OUT |= (1 << pin);
	} else {
		VPORTF.OUT &= ~(1 << pin);
    140a:	a8 98       	cbi	0x15, 0	; 21
	    // <id> pad_initial_level
	    // <false"> Low
	    // <true"> High
	    false);

	USART_0_init();
    140c:	0e 94 db 0a 	call	0x15b6	; 0x15b6 <USART_0_init>
    1410:	08 95       	ret

00001412 <system_init>:
/**
 * \brief System initialization
 */
void system_init()
{
	mcu_init();
    1412:	0e 94 c7 09 	call	0x138e	; 0x138e <mcu_init>
	switch (dir) {
	case PORT_DIR_IN:
		VPORTD.DIR &= ~(1 << pin);
		break;
	case PORT_DIR_OUT:
		VPORTD.DIR |= (1 << pin);
    1416:	60 9a       	sbi	0x0c, 0	; 12
 *                  false = Pin level set to "low" state
 */
static inline void PORTD_set_pin_level(const uint8_t pin, const bool level)
{
	if (level == true) {
		VPORTD.OUT |= (1 << pin);
    1418:	68 9a       	sbi	0x0d, 0	; 13
	switch (dir) {
	case PORT_DIR_IN:
		VPORTD.DIR &= ~(1 << pin);
		break;
	case PORT_DIR_OUT:
		VPORTD.DIR |= (1 << pin);
    141a:	61 9a       	sbi	0x0c, 1	; 12
 *                  false = Pin level set to "low" state
 */
static inline void PORTD_set_pin_level(const uint8_t pin, const bool level)
{
	if (level == true) {
		VPORTD.OUT |= (1 << pin);
    141c:	69 9a       	sbi	0x0d, 1	; 13
	switch (dir) {
	case PORT_DIR_IN:
		VPORTD.DIR &= ~(1 << pin);
		break;
	case PORT_DIR_OUT:
		VPORTD.DIR |= (1 << pin);
    141e:	62 9a       	sbi	0x0c, 2	; 12
 *                  false = Pin level set to "low" state
 */
static inline void PORTD_set_pin_level(const uint8_t pin, const bool level)
{
	if (level == true) {
		VPORTD.OUT |= (1 << pin);
    1420:	6a 9a       	sbi	0x0d, 2	; 13
	switch (dir) {
	case PORT_DIR_IN:
		VPORTD.DIR &= ~(1 << pin);
		break;
	case PORT_DIR_OUT:
		VPORTD.DIR |= (1 << pin);
    1422:	63 9a       	sbi	0x0c, 3	; 12
 *                  false = Pin level set to "low" state
 */
static inline void PORTD_set_pin_level(const uint8_t pin, const bool level)
{
	if (level == true) {
		VPORTD.OUT |= (1 << pin);
    1424:	6b 9a       	sbi	0x0d, 3	; 13
	    // <id> pad_initial_level
	    // <false"> Low
	    // <true"> High
	    true);

	CLKCTRL_init();
    1426:	0e 94 bd 09 	call	0x137a	; 0x137a <CLKCTRL_init>

	USART_0_initialization();
    142a:	0e 94 fe 09 	call	0x13fc	; 0x13fc <USART_0_initialization>

	CPUINT_init();
    142e:	0e 94 c5 09 	call	0x138a	; 0x138a <CPUINT_init>

	SLPCTRL_init();
    1432:	0e 94 22 0a 	call	0x1444	; 0x1444 <SLPCTRL_init>

	BOD_init();
    1436:	0e 94 b8 09 	call	0x1370	; 0x1370 <BOD_init>
    143a:	08 95       	ret

0000143c <protected_write_io>:
    143c:	fc 01       	movw	r30, r24
    143e:	64 bf       	out	0x34, r22	; 52
    1440:	40 83       	st	Z, r20
    1442:	08 95       	ret

00001444 <SLPCTRL_init>:
    1444:	80 e0       	ldi	r24, 0x00	; 0
    1446:	08 95       	ret

00001448 <USART_0_default_udre_isr_cb>:
	USART_0_rx_elements--;
	EXIT_CRITICAL(R);

	/* Return data */
	return USART_0_rxbuf[tmptail];
}
    1448:	80 91 c5 30 	lds	r24, 0x30C5	; 0x8030c5 <USART_0_tx_elements>
    144c:	88 23       	and	r24, r24
    144e:	89 f0       	breq	.+34     	; 0x1472 <USART_0_default_udre_isr_cb+0x2a>
    1450:	e0 91 c6 30 	lds	r30, 0x30C6	; 0x8030c6 <USART_0_tx_tail>
    1454:	ef 5f       	subi	r30, 0xFF	; 255
    1456:	ef 71       	andi	r30, 0x1F	; 31
    1458:	e0 93 c6 30 	sts	0x30C6, r30	; 0x8030c6 <USART_0_tx_tail>
    145c:	f0 e0       	ldi	r31, 0x00	; 0
    145e:	e8 53       	subi	r30, 0x38	; 56
    1460:	ff 4c       	sbci	r31, 0xCF	; 207
    1462:	80 81       	ld	r24, Z
    1464:	80 93 42 08 	sts	0x0842, r24	; 0x800842 <__TEXT_REGION_LENGTH__+0x700842>
    1468:	80 91 c5 30 	lds	r24, 0x30C5	; 0x8030c5 <USART_0_tx_elements>
    146c:	81 50       	subi	r24, 0x01	; 1
    146e:	80 93 c5 30 	sts	0x30C5, r24	; 0x8030c5 <USART_0_tx_elements>
    1472:	80 91 c5 30 	lds	r24, 0x30C5	; 0x8030c5 <USART_0_tx_elements>
    1476:	81 11       	cpse	r24, r1
    1478:	05 c0       	rjmp	.+10     	; 0x1484 <USART_0_default_udre_isr_cb+0x3c>
    147a:	e0 e4       	ldi	r30, 0x40	; 64
    147c:	f8 e0       	ldi	r31, 0x08	; 8
    147e:	85 81       	ldd	r24, Z+5	; 0x05
    1480:	8f 7d       	andi	r24, 0xDF	; 223
    1482:	85 83       	std	Z+5, r24	; 0x05
    1484:	08 95       	ret

00001486 <USART_0_default_rx_isr_cb>:
    1486:	80 91 40 08 	lds	r24, 0x0840	; 0x800840 <__TEXT_REGION_LENGTH__+0x700840>
    148a:	e0 91 c4 30 	lds	r30, 0x30C4	; 0x8030c4 <index.4408>
    148e:	91 e0       	ldi	r25, 0x01	; 1
    1490:	9e 0f       	add	r25, r30
    1492:	90 93 c4 30 	sts	0x30C4, r25	; 0x8030c4 <index.4408>
    1496:	f0 e0       	ldi	r31, 0x00	; 0
    1498:	ee 5c       	subi	r30, 0xCE	; 206
    149a:	f7 4d       	sbci	r31, 0xD7	; 215
    149c:	80 83       	st	Z, r24
    149e:	8a 30       	cpi	r24, 0x0A	; 10
    14a0:	99 f4       	brne	.+38     	; 0x14c8 <USART_0_default_rx_isr_cb+0x42>
    14a2:	e9 2f       	mov	r30, r25
    14a4:	f0 e0       	ldi	r31, 0x00	; 0
    14a6:	ee 5c       	subi	r30, 0xCE	; 206
    14a8:	f7 4d       	sbci	r31, 0xD7	; 215
    14aa:	10 82       	st	Z, r1
    14ac:	20 e0       	ldi	r18, 0x00	; 0
    14ae:	40 e0       	ldi	r20, 0x00	; 0
    14b0:	50 e0       	ldi	r21, 0x00	; 0
    14b2:	60 e3       	ldi	r22, 0x30	; 48
    14b4:	78 e2       	ldi	r23, 0x28	; 40
    14b6:	80 91 eb 30 	lds	r24, 0x30EB	; 0x8030eb <xPrintQueue>
    14ba:	90 91 ec 30 	lds	r25, 0x30EC	; 0x8030ec <xPrintQueue+0x1>
    14be:	0e 94 05 04 	call	0x80a	; 0x80a <xQueueGenericSendFromISR>
    14c2:	71 9a       	sbi	0x0e, 1	; 14
    14c4:	10 92 c4 30 	sts	0x30C4, r1	; 0x8030c4 <index.4408>
    14c8:	08 95       	ret

000014ca <__vector_31>:
    14ca:	1f 92       	push	r1
    14cc:	0f 92       	push	r0
    14ce:	0f b6       	in	r0, 0x3f	; 63
    14d0:	0f 92       	push	r0
    14d2:	11 24       	eor	r1, r1
    14d4:	2f 93       	push	r18
    14d6:	3f 93       	push	r19
    14d8:	4f 93       	push	r20
    14da:	5f 93       	push	r21
    14dc:	6f 93       	push	r22
    14de:	7f 93       	push	r23
    14e0:	8f 93       	push	r24
    14e2:	9f 93       	push	r25
    14e4:	af 93       	push	r26
    14e6:	bf 93       	push	r27
    14e8:	ef 93       	push	r30
    14ea:	ff 93       	push	r31
    14ec:	e0 91 54 28 	lds	r30, 0x2854	; 0x802854 <USART_0_rx_isr_cb>
    14f0:	f0 91 55 28 	lds	r31, 0x2855	; 0x802855 <USART_0_rx_isr_cb+0x1>
    14f4:	30 97       	sbiw	r30, 0x00	; 0
    14f6:	09 f0       	breq	.+2      	; 0x14fa <__vector_31+0x30>
    14f8:	09 95       	icall
    14fa:	ff 91       	pop	r31
    14fc:	ef 91       	pop	r30
    14fe:	bf 91       	pop	r27
    1500:	af 91       	pop	r26
    1502:	9f 91       	pop	r25
    1504:	8f 91       	pop	r24
    1506:	7f 91       	pop	r23
    1508:	6f 91       	pop	r22
    150a:	5f 91       	pop	r21
    150c:	4f 91       	pop	r20
    150e:	3f 91       	pop	r19
    1510:	2f 91       	pop	r18
    1512:	0f 90       	pop	r0
    1514:	0f be       	out	0x3f, r0	; 63
    1516:	0f 90       	pop	r0
    1518:	1f 90       	pop	r1
    151a:	18 95       	reti

0000151c <__vector_32>:
    151c:	1f 92       	push	r1
    151e:	0f 92       	push	r0
    1520:	0f b6       	in	r0, 0x3f	; 63
    1522:	0f 92       	push	r0
    1524:	11 24       	eor	r1, r1
    1526:	2f 93       	push	r18
    1528:	3f 93       	push	r19
    152a:	4f 93       	push	r20
    152c:	5f 93       	push	r21
    152e:	6f 93       	push	r22
    1530:	7f 93       	push	r23
    1532:	8f 93       	push	r24
    1534:	9f 93       	push	r25
    1536:	af 93       	push	r26
    1538:	bf 93       	push	r27
    153a:	ef 93       	push	r30
    153c:	ff 93       	push	r31
    153e:	e0 91 52 28 	lds	r30, 0x2852	; 0x802852 <USART_0_udre_isr_cb>
    1542:	f0 91 53 28 	lds	r31, 0x2853	; 0x802853 <USART_0_udre_isr_cb+0x1>
    1546:	30 97       	sbiw	r30, 0x00	; 0
    1548:	09 f0       	breq	.+2      	; 0x154c <__vector_32+0x30>
    154a:	09 95       	icall
    154c:	ff 91       	pop	r31
    154e:	ef 91       	pop	r30
    1550:	bf 91       	pop	r27
    1552:	af 91       	pop	r26
    1554:	9f 91       	pop	r25
    1556:	8f 91       	pop	r24
    1558:	7f 91       	pop	r23
    155a:	6f 91       	pop	r22
    155c:	5f 91       	pop	r21
    155e:	4f 91       	pop	r20
    1560:	3f 91       	pop	r19
    1562:	2f 91       	pop	r18
    1564:	0f 90       	pop	r0
    1566:	0f be       	out	0x3f, r0	; 63
    1568:	0f 90       	pop	r0
    156a:	1f 90       	pop	r1
    156c:	18 95       	reti

0000156e <USART_0_write>:
void USART_0_write(const uint8_t data)
{
	uint8_t tmphead;

	/* Calculate buffer index */
	tmphead = (USART_0_tx_head + 1) & USART_0_TX_BUFFER_MASK;
    156e:	20 91 c7 30 	lds	r18, 0x30C7	; 0x8030c7 <USART_0_tx_head>
    1572:	2f 5f       	subi	r18, 0xFF	; 255
    1574:	2f 71       	andi	r18, 0x1F	; 31
	/* Wait for free space in buffer */
	while (USART_0_tx_elements == USART_0_TX_BUFFER_SIZE)
    1576:	90 91 c5 30 	lds	r25, 0x30C5	; 0x8030c5 <USART_0_tx_elements>
    157a:	90 32       	cpi	r25, 0x20	; 32
    157c:	e1 f3       	breq	.-8      	; 0x1576 <USART_0_write+0x8>
		;
	/* Store data in buffer */
	USART_0_txbuf[tmphead] = data;
    157e:	e2 2f       	mov	r30, r18
    1580:	f0 e0       	ldi	r31, 0x00	; 0
    1582:	e8 53       	subi	r30, 0x38	; 56
    1584:	ff 4c       	sbci	r31, 0xCF	; 207
    1586:	80 83       	st	Z, r24
	/* Store new index */
	USART_0_tx_head = tmphead;
    1588:	20 93 c7 30 	sts	0x30C7, r18	; 0x8030c7 <USART_0_tx_head>
	ENTER_CRITICAL(W);
    158c:	0f b6       	in	r0, 0x3f	; 63
    158e:	f8 94       	cli
    1590:	0f 92       	push	r0
	USART_0_tx_elements++;
    1592:	80 91 c5 30 	lds	r24, 0x30C5	; 0x8030c5 <USART_0_tx_elements>
    1596:	8f 5f       	subi	r24, 0xFF	; 255
    1598:	80 93 c5 30 	sts	0x30C5, r24	; 0x8030c5 <USART_0_tx_elements>
	EXIT_CRITICAL(W);
    159c:	0f 90       	pop	r0
    159e:	0f be       	out	0x3f, r0	; 63
	/* Enable UDRE interrupt */
	USART2.CTRLA |= (1 << USART_DREIE_bp);
    15a0:	e0 e4       	ldi	r30, 0x40	; 64
    15a2:	f8 e0       	ldi	r31, 0x08	; 8
    15a4:	85 81       	ldd	r24, Z+5	; 0x05
    15a6:	80 62       	ori	r24, 0x20	; 32
    15a8:	85 83       	std	Z+5, r24	; 0x05
    15aa:	08 95       	ret

000015ac <USART_0_printCHAR>:

#if defined(__GNUC__)

int USART_0_printCHAR(char character, FILE *stream)
{
	USART_0_write(character);
    15ac:	0e 94 b7 0a 	call	0x156e	; 0x156e <USART_0_write>
	return 0;
}
    15b0:	80 e0       	ldi	r24, 0x00	; 0
    15b2:	90 e0       	ldi	r25, 0x00	; 0
    15b4:	08 95       	ret

000015b6 <USART_0_init>:
 * \retval 1 the USART init was not successful
 */
int8_t USART_0_init()
{

	USART2.BAUD = (uint16_t)USART2_BAUD_RATE(9600); /* set baud rate register */
    15b6:	e0 e4       	ldi	r30, 0x40	; 64
    15b8:	f8 e0       	ldi	r31, 0x08	; 8
    15ba:	87 e4       	ldi	r24, 0x47	; 71
    15bc:	90 e1       	ldi	r25, 0x10	; 16
    15be:	80 87       	std	Z+8, r24	; 0x08
    15c0:	91 87       	std	Z+9, r25	; 0x09

	USART2.CTRLA = 0 << USART_ABEIE_bp /* Auto-baud Error Interrupt Enable: disabled */
    15c2:	80 e8       	ldi	r24, 0x80	; 128
    15c4:	85 83       	std	Z+5, r24	; 0x05
			| USART_RS485_OFF_gc /* RS485 Mode disabled */
			| 1 << USART_RXCIE_bp /* Receive Complete Interrupt Enable: disabled */
			| 0 << USART_RXSIE_bp /* Receiver Start Frame Interrupt Enable: disabled */
			| 0 << USART_TXCIE_bp; /* Transmit Complete Interrupt Enable: disabled */

	USART2.CTRLB = 0 << USART_MPCM_bp       /* Multi-processor Communication Mode: disabled */
    15c6:	80 ec       	ldi	r24, 0xC0	; 192
    15c8:	86 83       	std	Z+6, r24	; 0x06
	uint8_t x;

	/* Initialize ringbuffers */
	x = 0;

	USART_0_rx_tail     = x;
    15ca:	10 92 e9 30 	sts	0x30E9, r1	; 0x8030e9 <USART_0_rx_tail>
	USART_0_rx_head     = x;
    15ce:	10 92 ea 30 	sts	0x30EA, r1	; 0x8030ea <USART_0_rx_head>
	USART_0_rx_elements = x;
    15d2:	10 92 e8 30 	sts	0x30E8, r1	; 0x8030e8 <USART_0_rx_elements>
	USART_0_tx_tail     = x;
    15d6:	10 92 c6 30 	sts	0x30C6, r1	; 0x8030c6 <USART_0_tx_tail>
	USART_0_tx_head     = x;
    15da:	10 92 c7 30 	sts	0x30C7, r1	; 0x8030c7 <USART_0_tx_head>
	USART_0_tx_elements = x;
    15de:	10 92 c5 30 	sts	0x30C5, r1	; 0x8030c5 <USART_0_tx_elements>

#if defined(__GNUC__)
	stdout = &USART_0_stream;
    15e2:	86 e5       	ldi	r24, 0x56	; 86
    15e4:	98 e2       	ldi	r25, 0x28	; 40
    15e6:	80 93 ef 30 	sts	0x30EF, r24	; 0x8030ef <__iob+0x2>
    15ea:	90 93 f0 30 	sts	0x30F0, r25	; 0x8030f0 <__iob+0x3>
#endif

	return 0;
}
    15ee:	80 e0       	ldi	r24, 0x00	; 0
    15f0:	08 95       	ret

000015f2 <memcpy>:
    15f2:	fb 01       	movw	r30, r22
    15f4:	dc 01       	movw	r26, r24
    15f6:	02 c0       	rjmp	.+4      	; 0x15fc <memcpy+0xa>
    15f8:	01 90       	ld	r0, Z+
    15fa:	0d 92       	st	X+, r0
    15fc:	41 50       	subi	r20, 0x01	; 1
    15fe:	50 40       	sbci	r21, 0x00	; 0
    1600:	d8 f7       	brcc	.-10     	; 0x15f8 <memcpy+0x6>
    1602:	08 95       	ret

00001604 <printf>:
    1604:	a0 e0       	ldi	r26, 0x00	; 0
    1606:	b0 e0       	ldi	r27, 0x00	; 0
    1608:	e8 e0       	ldi	r30, 0x08	; 8
    160a:	fb e0       	ldi	r31, 0x0B	; 11
    160c:	0c 94 b9 0d 	jmp	0x1b72	; 0x1b72 <__prologue_saves__+0x20>
    1610:	ae 01       	movw	r20, r28
    1612:	4b 5f       	subi	r20, 0xFB	; 251
    1614:	5f 4f       	sbci	r21, 0xFF	; 255
    1616:	fa 01       	movw	r30, r20
    1618:	61 91       	ld	r22, Z+
    161a:	71 91       	ld	r23, Z+
    161c:	af 01       	movw	r20, r30
    161e:	80 91 ef 30 	lds	r24, 0x30EF	; 0x8030ef <__iob+0x2>
    1622:	90 91 f0 30 	lds	r25, 0x30F0	; 0x8030f0 <__iob+0x3>
    1626:	0e 94 18 0b 	call	0x1630	; 0x1630 <vfprintf>
    162a:	e2 e0       	ldi	r30, 0x02	; 2
    162c:	0c 94 d2 0d 	jmp	0x1ba4	; 0x1ba4 <__epilogue_restores__+0x20>

00001630 <vfprintf>:
    1630:	ab e0       	ldi	r26, 0x0B	; 11
    1632:	b0 e0       	ldi	r27, 0x00	; 0
    1634:	ee e1       	ldi	r30, 0x1E	; 30
    1636:	fb e0       	ldi	r31, 0x0B	; 11
    1638:	0c 94 a9 0d 	jmp	0x1b52	; 0x1b52 <__prologue_saves__>
    163c:	6c 01       	movw	r12, r24
    163e:	7b 01       	movw	r14, r22
    1640:	8a 01       	movw	r16, r20
    1642:	fc 01       	movw	r30, r24
    1644:	16 82       	std	Z+6, r1	; 0x06
    1646:	17 82       	std	Z+7, r1	; 0x07
    1648:	83 81       	ldd	r24, Z+3	; 0x03
    164a:	81 ff       	sbrs	r24, 1
    164c:	cc c1       	rjmp	.+920    	; 0x19e6 <vfprintf+0x3b6>
    164e:	ce 01       	movw	r24, r28
    1650:	01 96       	adiw	r24, 0x01	; 1
    1652:	3c 01       	movw	r6, r24
    1654:	f6 01       	movw	r30, r12
    1656:	93 81       	ldd	r25, Z+3	; 0x03
    1658:	f7 01       	movw	r30, r14
    165a:	93 fd       	sbrc	r25, 3
    165c:	85 91       	lpm	r24, Z+
    165e:	93 ff       	sbrs	r25, 3
    1660:	81 91       	ld	r24, Z+
    1662:	7f 01       	movw	r14, r30
    1664:	88 23       	and	r24, r24
    1666:	09 f4       	brne	.+2      	; 0x166a <vfprintf+0x3a>
    1668:	ba c1       	rjmp	.+884    	; 0x19de <vfprintf+0x3ae>
    166a:	85 32       	cpi	r24, 0x25	; 37
    166c:	39 f4       	brne	.+14     	; 0x167c <vfprintf+0x4c>
    166e:	93 fd       	sbrc	r25, 3
    1670:	85 91       	lpm	r24, Z+
    1672:	93 ff       	sbrs	r25, 3
    1674:	81 91       	ld	r24, Z+
    1676:	7f 01       	movw	r14, r30
    1678:	85 32       	cpi	r24, 0x25	; 37
    167a:	29 f4       	brne	.+10     	; 0x1686 <vfprintf+0x56>
    167c:	b6 01       	movw	r22, r12
    167e:	90 e0       	ldi	r25, 0x00	; 0
    1680:	0e 94 0f 0d 	call	0x1a1e	; 0x1a1e <fputc>
    1684:	e7 cf       	rjmp	.-50     	; 0x1654 <vfprintf+0x24>
    1686:	91 2c       	mov	r9, r1
    1688:	21 2c       	mov	r2, r1
    168a:	31 2c       	mov	r3, r1
    168c:	ff e1       	ldi	r31, 0x1F	; 31
    168e:	f3 15       	cp	r31, r3
    1690:	d8 f0       	brcs	.+54     	; 0x16c8 <vfprintf+0x98>
    1692:	8b 32       	cpi	r24, 0x2B	; 43
    1694:	79 f0       	breq	.+30     	; 0x16b4 <vfprintf+0x84>
    1696:	38 f4       	brcc	.+14     	; 0x16a6 <vfprintf+0x76>
    1698:	80 32       	cpi	r24, 0x20	; 32
    169a:	79 f0       	breq	.+30     	; 0x16ba <vfprintf+0x8a>
    169c:	83 32       	cpi	r24, 0x23	; 35
    169e:	a1 f4       	brne	.+40     	; 0x16c8 <vfprintf+0x98>
    16a0:	23 2d       	mov	r18, r3
    16a2:	20 61       	ori	r18, 0x10	; 16
    16a4:	1d c0       	rjmp	.+58     	; 0x16e0 <vfprintf+0xb0>
    16a6:	8d 32       	cpi	r24, 0x2D	; 45
    16a8:	61 f0       	breq	.+24     	; 0x16c2 <vfprintf+0x92>
    16aa:	80 33       	cpi	r24, 0x30	; 48
    16ac:	69 f4       	brne	.+26     	; 0x16c8 <vfprintf+0x98>
    16ae:	23 2d       	mov	r18, r3
    16b0:	21 60       	ori	r18, 0x01	; 1
    16b2:	16 c0       	rjmp	.+44     	; 0x16e0 <vfprintf+0xb0>
    16b4:	83 2d       	mov	r24, r3
    16b6:	82 60       	ori	r24, 0x02	; 2
    16b8:	38 2e       	mov	r3, r24
    16ba:	e3 2d       	mov	r30, r3
    16bc:	e4 60       	ori	r30, 0x04	; 4
    16be:	3e 2e       	mov	r3, r30
    16c0:	2a c0       	rjmp	.+84     	; 0x1716 <vfprintf+0xe6>
    16c2:	f3 2d       	mov	r31, r3
    16c4:	f8 60       	ori	r31, 0x08	; 8
    16c6:	1d c0       	rjmp	.+58     	; 0x1702 <vfprintf+0xd2>
    16c8:	37 fc       	sbrc	r3, 7
    16ca:	2d c0       	rjmp	.+90     	; 0x1726 <vfprintf+0xf6>
    16cc:	20 ed       	ldi	r18, 0xD0	; 208
    16ce:	28 0f       	add	r18, r24
    16d0:	2a 30       	cpi	r18, 0x0A	; 10
    16d2:	40 f0       	brcs	.+16     	; 0x16e4 <vfprintf+0xb4>
    16d4:	8e 32       	cpi	r24, 0x2E	; 46
    16d6:	b9 f4       	brne	.+46     	; 0x1706 <vfprintf+0xd6>
    16d8:	36 fc       	sbrc	r3, 6
    16da:	81 c1       	rjmp	.+770    	; 0x19de <vfprintf+0x3ae>
    16dc:	23 2d       	mov	r18, r3
    16de:	20 64       	ori	r18, 0x40	; 64
    16e0:	32 2e       	mov	r3, r18
    16e2:	19 c0       	rjmp	.+50     	; 0x1716 <vfprintf+0xe6>
    16e4:	36 fe       	sbrs	r3, 6
    16e6:	06 c0       	rjmp	.+12     	; 0x16f4 <vfprintf+0xc4>
    16e8:	8a e0       	ldi	r24, 0x0A	; 10
    16ea:	98 9e       	mul	r9, r24
    16ec:	20 0d       	add	r18, r0
    16ee:	11 24       	eor	r1, r1
    16f0:	92 2e       	mov	r9, r18
    16f2:	11 c0       	rjmp	.+34     	; 0x1716 <vfprintf+0xe6>
    16f4:	ea e0       	ldi	r30, 0x0A	; 10
    16f6:	2e 9e       	mul	r2, r30
    16f8:	20 0d       	add	r18, r0
    16fa:	11 24       	eor	r1, r1
    16fc:	22 2e       	mov	r2, r18
    16fe:	f3 2d       	mov	r31, r3
    1700:	f0 62       	ori	r31, 0x20	; 32
    1702:	3f 2e       	mov	r3, r31
    1704:	08 c0       	rjmp	.+16     	; 0x1716 <vfprintf+0xe6>
    1706:	8c 36       	cpi	r24, 0x6C	; 108
    1708:	21 f4       	brne	.+8      	; 0x1712 <vfprintf+0xe2>
    170a:	83 2d       	mov	r24, r3
    170c:	80 68       	ori	r24, 0x80	; 128
    170e:	38 2e       	mov	r3, r24
    1710:	02 c0       	rjmp	.+4      	; 0x1716 <vfprintf+0xe6>
    1712:	88 36       	cpi	r24, 0x68	; 104
    1714:	41 f4       	brne	.+16     	; 0x1726 <vfprintf+0xf6>
    1716:	f7 01       	movw	r30, r14
    1718:	93 fd       	sbrc	r25, 3
    171a:	85 91       	lpm	r24, Z+
    171c:	93 ff       	sbrs	r25, 3
    171e:	81 91       	ld	r24, Z+
    1720:	7f 01       	movw	r14, r30
    1722:	81 11       	cpse	r24, r1
    1724:	b3 cf       	rjmp	.-154    	; 0x168c <vfprintf+0x5c>
    1726:	98 2f       	mov	r25, r24
    1728:	9f 7d       	andi	r25, 0xDF	; 223
    172a:	95 54       	subi	r25, 0x45	; 69
    172c:	93 30       	cpi	r25, 0x03	; 3
    172e:	28 f4       	brcc	.+10     	; 0x173a <vfprintf+0x10a>
    1730:	0c 5f       	subi	r16, 0xFC	; 252
    1732:	1f 4f       	sbci	r17, 0xFF	; 255
    1734:	9f e3       	ldi	r25, 0x3F	; 63
    1736:	99 83       	std	Y+1, r25	; 0x01
    1738:	0d c0       	rjmp	.+26     	; 0x1754 <vfprintf+0x124>
    173a:	83 36       	cpi	r24, 0x63	; 99
    173c:	31 f0       	breq	.+12     	; 0x174a <vfprintf+0x11a>
    173e:	83 37       	cpi	r24, 0x73	; 115
    1740:	71 f0       	breq	.+28     	; 0x175e <vfprintf+0x12e>
    1742:	83 35       	cpi	r24, 0x53	; 83
    1744:	09 f0       	breq	.+2      	; 0x1748 <vfprintf+0x118>
    1746:	59 c0       	rjmp	.+178    	; 0x17fa <vfprintf+0x1ca>
    1748:	21 c0       	rjmp	.+66     	; 0x178c <vfprintf+0x15c>
    174a:	f8 01       	movw	r30, r16
    174c:	80 81       	ld	r24, Z
    174e:	89 83       	std	Y+1, r24	; 0x01
    1750:	0e 5f       	subi	r16, 0xFE	; 254
    1752:	1f 4f       	sbci	r17, 0xFF	; 255
    1754:	88 24       	eor	r8, r8
    1756:	83 94       	inc	r8
    1758:	91 2c       	mov	r9, r1
    175a:	53 01       	movw	r10, r6
    175c:	13 c0       	rjmp	.+38     	; 0x1784 <vfprintf+0x154>
    175e:	28 01       	movw	r4, r16
    1760:	f2 e0       	ldi	r31, 0x02	; 2
    1762:	4f 0e       	add	r4, r31
    1764:	51 1c       	adc	r5, r1
    1766:	f8 01       	movw	r30, r16
    1768:	a0 80       	ld	r10, Z
    176a:	b1 80       	ldd	r11, Z+1	; 0x01
    176c:	36 fe       	sbrs	r3, 6
    176e:	03 c0       	rjmp	.+6      	; 0x1776 <vfprintf+0x146>
    1770:	69 2d       	mov	r22, r9
    1772:	70 e0       	ldi	r23, 0x00	; 0
    1774:	02 c0       	rjmp	.+4      	; 0x177a <vfprintf+0x14a>
    1776:	6f ef       	ldi	r22, 0xFF	; 255
    1778:	7f ef       	ldi	r23, 0xFF	; 255
    177a:	c5 01       	movw	r24, r10
    177c:	0e 94 04 0d 	call	0x1a08	; 0x1a08 <strnlen>
    1780:	4c 01       	movw	r8, r24
    1782:	82 01       	movw	r16, r4
    1784:	f3 2d       	mov	r31, r3
    1786:	ff 77       	andi	r31, 0x7F	; 127
    1788:	3f 2e       	mov	r3, r31
    178a:	16 c0       	rjmp	.+44     	; 0x17b8 <vfprintf+0x188>
    178c:	28 01       	movw	r4, r16
    178e:	22 e0       	ldi	r18, 0x02	; 2
    1790:	42 0e       	add	r4, r18
    1792:	51 1c       	adc	r5, r1
    1794:	f8 01       	movw	r30, r16
    1796:	a0 80       	ld	r10, Z
    1798:	b1 80       	ldd	r11, Z+1	; 0x01
    179a:	36 fe       	sbrs	r3, 6
    179c:	03 c0       	rjmp	.+6      	; 0x17a4 <vfprintf+0x174>
    179e:	69 2d       	mov	r22, r9
    17a0:	70 e0       	ldi	r23, 0x00	; 0
    17a2:	02 c0       	rjmp	.+4      	; 0x17a8 <vfprintf+0x178>
    17a4:	6f ef       	ldi	r22, 0xFF	; 255
    17a6:	7f ef       	ldi	r23, 0xFF	; 255
    17a8:	c5 01       	movw	r24, r10
    17aa:	0e 94 f9 0c 	call	0x19f2	; 0x19f2 <strnlen_P>
    17ae:	4c 01       	movw	r8, r24
    17b0:	f3 2d       	mov	r31, r3
    17b2:	f0 68       	ori	r31, 0x80	; 128
    17b4:	3f 2e       	mov	r3, r31
    17b6:	82 01       	movw	r16, r4
    17b8:	33 fc       	sbrc	r3, 3
    17ba:	1b c0       	rjmp	.+54     	; 0x17f2 <vfprintf+0x1c2>
    17bc:	82 2d       	mov	r24, r2
    17be:	90 e0       	ldi	r25, 0x00	; 0
    17c0:	88 16       	cp	r8, r24
    17c2:	99 06       	cpc	r9, r25
    17c4:	b0 f4       	brcc	.+44     	; 0x17f2 <vfprintf+0x1c2>
    17c6:	b6 01       	movw	r22, r12
    17c8:	80 e2       	ldi	r24, 0x20	; 32
    17ca:	90 e0       	ldi	r25, 0x00	; 0
    17cc:	0e 94 0f 0d 	call	0x1a1e	; 0x1a1e <fputc>
    17d0:	2a 94       	dec	r2
    17d2:	f4 cf       	rjmp	.-24     	; 0x17bc <vfprintf+0x18c>
    17d4:	f5 01       	movw	r30, r10
    17d6:	37 fc       	sbrc	r3, 7
    17d8:	85 91       	lpm	r24, Z+
    17da:	37 fe       	sbrs	r3, 7
    17dc:	81 91       	ld	r24, Z+
    17de:	5f 01       	movw	r10, r30
    17e0:	b6 01       	movw	r22, r12
    17e2:	90 e0       	ldi	r25, 0x00	; 0
    17e4:	0e 94 0f 0d 	call	0x1a1e	; 0x1a1e <fputc>
    17e8:	21 10       	cpse	r2, r1
    17ea:	2a 94       	dec	r2
    17ec:	21 e0       	ldi	r18, 0x01	; 1
    17ee:	82 1a       	sub	r8, r18
    17f0:	91 08       	sbc	r9, r1
    17f2:	81 14       	cp	r8, r1
    17f4:	91 04       	cpc	r9, r1
    17f6:	71 f7       	brne	.-36     	; 0x17d4 <vfprintf+0x1a4>
    17f8:	e8 c0       	rjmp	.+464    	; 0x19ca <vfprintf+0x39a>
    17fa:	84 36       	cpi	r24, 0x64	; 100
    17fc:	11 f0       	breq	.+4      	; 0x1802 <vfprintf+0x1d2>
    17fe:	89 36       	cpi	r24, 0x69	; 105
    1800:	41 f5       	brne	.+80     	; 0x1852 <vfprintf+0x222>
    1802:	f8 01       	movw	r30, r16
    1804:	37 fe       	sbrs	r3, 7
    1806:	07 c0       	rjmp	.+14     	; 0x1816 <vfprintf+0x1e6>
    1808:	60 81       	ld	r22, Z
    180a:	71 81       	ldd	r23, Z+1	; 0x01
    180c:	82 81       	ldd	r24, Z+2	; 0x02
    180e:	93 81       	ldd	r25, Z+3	; 0x03
    1810:	0c 5f       	subi	r16, 0xFC	; 252
    1812:	1f 4f       	sbci	r17, 0xFF	; 255
    1814:	08 c0       	rjmp	.+16     	; 0x1826 <vfprintf+0x1f6>
    1816:	60 81       	ld	r22, Z
    1818:	71 81       	ldd	r23, Z+1	; 0x01
    181a:	07 2e       	mov	r0, r23
    181c:	00 0c       	add	r0, r0
    181e:	88 0b       	sbc	r24, r24
    1820:	99 0b       	sbc	r25, r25
    1822:	0e 5f       	subi	r16, 0xFE	; 254
    1824:	1f 4f       	sbci	r17, 0xFF	; 255
    1826:	f3 2d       	mov	r31, r3
    1828:	ff 76       	andi	r31, 0x6F	; 111
    182a:	3f 2e       	mov	r3, r31
    182c:	97 ff       	sbrs	r25, 7
    182e:	09 c0       	rjmp	.+18     	; 0x1842 <vfprintf+0x212>
    1830:	90 95       	com	r25
    1832:	80 95       	com	r24
    1834:	70 95       	com	r23
    1836:	61 95       	neg	r22
    1838:	7f 4f       	sbci	r23, 0xFF	; 255
    183a:	8f 4f       	sbci	r24, 0xFF	; 255
    183c:	9f 4f       	sbci	r25, 0xFF	; 255
    183e:	f0 68       	ori	r31, 0x80	; 128
    1840:	3f 2e       	mov	r3, r31
    1842:	2a e0       	ldi	r18, 0x0A	; 10
    1844:	30 e0       	ldi	r19, 0x00	; 0
    1846:	a3 01       	movw	r20, r6
    1848:	0e 94 4b 0d 	call	0x1a96	; 0x1a96 <__ultoa_invert>
    184c:	88 2e       	mov	r8, r24
    184e:	86 18       	sub	r8, r6
    1850:	45 c0       	rjmp	.+138    	; 0x18dc <vfprintf+0x2ac>
    1852:	85 37       	cpi	r24, 0x75	; 117
    1854:	31 f4       	brne	.+12     	; 0x1862 <vfprintf+0x232>
    1856:	23 2d       	mov	r18, r3
    1858:	2f 7e       	andi	r18, 0xEF	; 239
    185a:	b2 2e       	mov	r11, r18
    185c:	2a e0       	ldi	r18, 0x0A	; 10
    185e:	30 e0       	ldi	r19, 0x00	; 0
    1860:	25 c0       	rjmp	.+74     	; 0x18ac <vfprintf+0x27c>
    1862:	93 2d       	mov	r25, r3
    1864:	99 7f       	andi	r25, 0xF9	; 249
    1866:	b9 2e       	mov	r11, r25
    1868:	8f 36       	cpi	r24, 0x6F	; 111
    186a:	c1 f0       	breq	.+48     	; 0x189c <vfprintf+0x26c>
    186c:	18 f4       	brcc	.+6      	; 0x1874 <vfprintf+0x244>
    186e:	88 35       	cpi	r24, 0x58	; 88
    1870:	79 f0       	breq	.+30     	; 0x1890 <vfprintf+0x260>
    1872:	b5 c0       	rjmp	.+362    	; 0x19de <vfprintf+0x3ae>
    1874:	80 37       	cpi	r24, 0x70	; 112
    1876:	19 f0       	breq	.+6      	; 0x187e <vfprintf+0x24e>
    1878:	88 37       	cpi	r24, 0x78	; 120
    187a:	21 f0       	breq	.+8      	; 0x1884 <vfprintf+0x254>
    187c:	b0 c0       	rjmp	.+352    	; 0x19de <vfprintf+0x3ae>
    187e:	e9 2f       	mov	r30, r25
    1880:	e0 61       	ori	r30, 0x10	; 16
    1882:	be 2e       	mov	r11, r30
    1884:	b4 fe       	sbrs	r11, 4
    1886:	0d c0       	rjmp	.+26     	; 0x18a2 <vfprintf+0x272>
    1888:	fb 2d       	mov	r31, r11
    188a:	f4 60       	ori	r31, 0x04	; 4
    188c:	bf 2e       	mov	r11, r31
    188e:	09 c0       	rjmp	.+18     	; 0x18a2 <vfprintf+0x272>
    1890:	34 fe       	sbrs	r3, 4
    1892:	0a c0       	rjmp	.+20     	; 0x18a8 <vfprintf+0x278>
    1894:	29 2f       	mov	r18, r25
    1896:	26 60       	ori	r18, 0x06	; 6
    1898:	b2 2e       	mov	r11, r18
    189a:	06 c0       	rjmp	.+12     	; 0x18a8 <vfprintf+0x278>
    189c:	28 e0       	ldi	r18, 0x08	; 8
    189e:	30 e0       	ldi	r19, 0x00	; 0
    18a0:	05 c0       	rjmp	.+10     	; 0x18ac <vfprintf+0x27c>
    18a2:	20 e1       	ldi	r18, 0x10	; 16
    18a4:	30 e0       	ldi	r19, 0x00	; 0
    18a6:	02 c0       	rjmp	.+4      	; 0x18ac <vfprintf+0x27c>
    18a8:	20 e1       	ldi	r18, 0x10	; 16
    18aa:	32 e0       	ldi	r19, 0x02	; 2
    18ac:	f8 01       	movw	r30, r16
    18ae:	b7 fe       	sbrs	r11, 7
    18b0:	07 c0       	rjmp	.+14     	; 0x18c0 <vfprintf+0x290>
    18b2:	60 81       	ld	r22, Z
    18b4:	71 81       	ldd	r23, Z+1	; 0x01
    18b6:	82 81       	ldd	r24, Z+2	; 0x02
    18b8:	93 81       	ldd	r25, Z+3	; 0x03
    18ba:	0c 5f       	subi	r16, 0xFC	; 252
    18bc:	1f 4f       	sbci	r17, 0xFF	; 255
    18be:	06 c0       	rjmp	.+12     	; 0x18cc <vfprintf+0x29c>
    18c0:	60 81       	ld	r22, Z
    18c2:	71 81       	ldd	r23, Z+1	; 0x01
    18c4:	80 e0       	ldi	r24, 0x00	; 0
    18c6:	90 e0       	ldi	r25, 0x00	; 0
    18c8:	0e 5f       	subi	r16, 0xFE	; 254
    18ca:	1f 4f       	sbci	r17, 0xFF	; 255
    18cc:	a3 01       	movw	r20, r6
    18ce:	0e 94 4b 0d 	call	0x1a96	; 0x1a96 <__ultoa_invert>
    18d2:	88 2e       	mov	r8, r24
    18d4:	86 18       	sub	r8, r6
    18d6:	fb 2d       	mov	r31, r11
    18d8:	ff 77       	andi	r31, 0x7F	; 127
    18da:	3f 2e       	mov	r3, r31
    18dc:	36 fe       	sbrs	r3, 6
    18de:	0d c0       	rjmp	.+26     	; 0x18fa <vfprintf+0x2ca>
    18e0:	23 2d       	mov	r18, r3
    18e2:	2e 7f       	andi	r18, 0xFE	; 254
    18e4:	a2 2e       	mov	r10, r18
    18e6:	89 14       	cp	r8, r9
    18e8:	58 f4       	brcc	.+22     	; 0x1900 <vfprintf+0x2d0>
    18ea:	34 fe       	sbrs	r3, 4
    18ec:	0b c0       	rjmp	.+22     	; 0x1904 <vfprintf+0x2d4>
    18ee:	32 fc       	sbrc	r3, 2
    18f0:	09 c0       	rjmp	.+18     	; 0x1904 <vfprintf+0x2d4>
    18f2:	83 2d       	mov	r24, r3
    18f4:	8e 7e       	andi	r24, 0xEE	; 238
    18f6:	a8 2e       	mov	r10, r24
    18f8:	05 c0       	rjmp	.+10     	; 0x1904 <vfprintf+0x2d4>
    18fa:	b8 2c       	mov	r11, r8
    18fc:	a3 2c       	mov	r10, r3
    18fe:	03 c0       	rjmp	.+6      	; 0x1906 <vfprintf+0x2d6>
    1900:	b8 2c       	mov	r11, r8
    1902:	01 c0       	rjmp	.+2      	; 0x1906 <vfprintf+0x2d6>
    1904:	b9 2c       	mov	r11, r9
    1906:	a4 fe       	sbrs	r10, 4
    1908:	0f c0       	rjmp	.+30     	; 0x1928 <vfprintf+0x2f8>
    190a:	fe 01       	movw	r30, r28
    190c:	e8 0d       	add	r30, r8
    190e:	f1 1d       	adc	r31, r1
    1910:	80 81       	ld	r24, Z
    1912:	80 33       	cpi	r24, 0x30	; 48
    1914:	21 f4       	brne	.+8      	; 0x191e <vfprintf+0x2ee>
    1916:	9a 2d       	mov	r25, r10
    1918:	99 7e       	andi	r25, 0xE9	; 233
    191a:	a9 2e       	mov	r10, r25
    191c:	09 c0       	rjmp	.+18     	; 0x1930 <vfprintf+0x300>
    191e:	a2 fe       	sbrs	r10, 2
    1920:	06 c0       	rjmp	.+12     	; 0x192e <vfprintf+0x2fe>
    1922:	b3 94       	inc	r11
    1924:	b3 94       	inc	r11
    1926:	04 c0       	rjmp	.+8      	; 0x1930 <vfprintf+0x300>
    1928:	8a 2d       	mov	r24, r10
    192a:	86 78       	andi	r24, 0x86	; 134
    192c:	09 f0       	breq	.+2      	; 0x1930 <vfprintf+0x300>
    192e:	b3 94       	inc	r11
    1930:	a3 fc       	sbrc	r10, 3
    1932:	11 c0       	rjmp	.+34     	; 0x1956 <vfprintf+0x326>
    1934:	a0 fe       	sbrs	r10, 0
    1936:	06 c0       	rjmp	.+12     	; 0x1944 <vfprintf+0x314>
    1938:	b2 14       	cp	r11, r2
    193a:	88 f4       	brcc	.+34     	; 0x195e <vfprintf+0x32e>
    193c:	28 0c       	add	r2, r8
    193e:	92 2c       	mov	r9, r2
    1940:	9b 18       	sub	r9, r11
    1942:	0e c0       	rjmp	.+28     	; 0x1960 <vfprintf+0x330>
    1944:	b2 14       	cp	r11, r2
    1946:	60 f4       	brcc	.+24     	; 0x1960 <vfprintf+0x330>
    1948:	b6 01       	movw	r22, r12
    194a:	80 e2       	ldi	r24, 0x20	; 32
    194c:	90 e0       	ldi	r25, 0x00	; 0
    194e:	0e 94 0f 0d 	call	0x1a1e	; 0x1a1e <fputc>
    1952:	b3 94       	inc	r11
    1954:	f7 cf       	rjmp	.-18     	; 0x1944 <vfprintf+0x314>
    1956:	b2 14       	cp	r11, r2
    1958:	18 f4       	brcc	.+6      	; 0x1960 <vfprintf+0x330>
    195a:	2b 18       	sub	r2, r11
    195c:	02 c0       	rjmp	.+4      	; 0x1962 <vfprintf+0x332>
    195e:	98 2c       	mov	r9, r8
    1960:	21 2c       	mov	r2, r1
    1962:	a4 fe       	sbrs	r10, 4
    1964:	10 c0       	rjmp	.+32     	; 0x1986 <vfprintf+0x356>
    1966:	b6 01       	movw	r22, r12
    1968:	80 e3       	ldi	r24, 0x30	; 48
    196a:	90 e0       	ldi	r25, 0x00	; 0
    196c:	0e 94 0f 0d 	call	0x1a1e	; 0x1a1e <fputc>
    1970:	a2 fe       	sbrs	r10, 2
    1972:	17 c0       	rjmp	.+46     	; 0x19a2 <vfprintf+0x372>
    1974:	a1 fc       	sbrc	r10, 1
    1976:	03 c0       	rjmp	.+6      	; 0x197e <vfprintf+0x34e>
    1978:	88 e7       	ldi	r24, 0x78	; 120
    197a:	90 e0       	ldi	r25, 0x00	; 0
    197c:	02 c0       	rjmp	.+4      	; 0x1982 <vfprintf+0x352>
    197e:	88 e5       	ldi	r24, 0x58	; 88
    1980:	90 e0       	ldi	r25, 0x00	; 0
    1982:	b6 01       	movw	r22, r12
    1984:	0c c0       	rjmp	.+24     	; 0x199e <vfprintf+0x36e>
    1986:	8a 2d       	mov	r24, r10
    1988:	86 78       	andi	r24, 0x86	; 134
    198a:	59 f0       	breq	.+22     	; 0x19a2 <vfprintf+0x372>
    198c:	a1 fe       	sbrs	r10, 1
    198e:	02 c0       	rjmp	.+4      	; 0x1994 <vfprintf+0x364>
    1990:	8b e2       	ldi	r24, 0x2B	; 43
    1992:	01 c0       	rjmp	.+2      	; 0x1996 <vfprintf+0x366>
    1994:	80 e2       	ldi	r24, 0x20	; 32
    1996:	a7 fc       	sbrc	r10, 7
    1998:	8d e2       	ldi	r24, 0x2D	; 45
    199a:	b6 01       	movw	r22, r12
    199c:	90 e0       	ldi	r25, 0x00	; 0
    199e:	0e 94 0f 0d 	call	0x1a1e	; 0x1a1e <fputc>
    19a2:	89 14       	cp	r8, r9
    19a4:	38 f4       	brcc	.+14     	; 0x19b4 <vfprintf+0x384>
    19a6:	b6 01       	movw	r22, r12
    19a8:	80 e3       	ldi	r24, 0x30	; 48
    19aa:	90 e0       	ldi	r25, 0x00	; 0
    19ac:	0e 94 0f 0d 	call	0x1a1e	; 0x1a1e <fputc>
    19b0:	9a 94       	dec	r9
    19b2:	f7 cf       	rjmp	.-18     	; 0x19a2 <vfprintf+0x372>
    19b4:	8a 94       	dec	r8
    19b6:	f3 01       	movw	r30, r6
    19b8:	e8 0d       	add	r30, r8
    19ba:	f1 1d       	adc	r31, r1
    19bc:	80 81       	ld	r24, Z
    19be:	b6 01       	movw	r22, r12
    19c0:	90 e0       	ldi	r25, 0x00	; 0
    19c2:	0e 94 0f 0d 	call	0x1a1e	; 0x1a1e <fputc>
    19c6:	81 10       	cpse	r8, r1
    19c8:	f5 cf       	rjmp	.-22     	; 0x19b4 <vfprintf+0x384>
    19ca:	22 20       	and	r2, r2
    19cc:	09 f4       	brne	.+2      	; 0x19d0 <vfprintf+0x3a0>
    19ce:	42 ce       	rjmp	.-892    	; 0x1654 <vfprintf+0x24>
    19d0:	b6 01       	movw	r22, r12
    19d2:	80 e2       	ldi	r24, 0x20	; 32
    19d4:	90 e0       	ldi	r25, 0x00	; 0
    19d6:	0e 94 0f 0d 	call	0x1a1e	; 0x1a1e <fputc>
    19da:	2a 94       	dec	r2
    19dc:	f6 cf       	rjmp	.-20     	; 0x19ca <vfprintf+0x39a>
    19de:	f6 01       	movw	r30, r12
    19e0:	86 81       	ldd	r24, Z+6	; 0x06
    19e2:	97 81       	ldd	r25, Z+7	; 0x07
    19e4:	02 c0       	rjmp	.+4      	; 0x19ea <vfprintf+0x3ba>
    19e6:	8f ef       	ldi	r24, 0xFF	; 255
    19e8:	9f ef       	ldi	r25, 0xFF	; 255
    19ea:	2b 96       	adiw	r28, 0x0b	; 11
    19ec:	e2 e1       	ldi	r30, 0x12	; 18
    19ee:	0c 94 c2 0d 	jmp	0x1b84	; 0x1b84 <__epilogue_restores__>

000019f2 <strnlen_P>:
    19f2:	fc 01       	movw	r30, r24
    19f4:	05 90       	lpm	r0, Z+
    19f6:	61 50       	subi	r22, 0x01	; 1
    19f8:	70 40       	sbci	r23, 0x00	; 0
    19fa:	01 10       	cpse	r0, r1
    19fc:	d8 f7       	brcc	.-10     	; 0x19f4 <strnlen_P+0x2>
    19fe:	80 95       	com	r24
    1a00:	90 95       	com	r25
    1a02:	8e 0f       	add	r24, r30
    1a04:	9f 1f       	adc	r25, r31
    1a06:	08 95       	ret

00001a08 <strnlen>:
    1a08:	fc 01       	movw	r30, r24
    1a0a:	61 50       	subi	r22, 0x01	; 1
    1a0c:	70 40       	sbci	r23, 0x00	; 0
    1a0e:	01 90       	ld	r0, Z+
    1a10:	01 10       	cpse	r0, r1
    1a12:	d8 f7       	brcc	.-10     	; 0x1a0a <strnlen+0x2>
    1a14:	80 95       	com	r24
    1a16:	90 95       	com	r25
    1a18:	8e 0f       	add	r24, r30
    1a1a:	9f 1f       	adc	r25, r31
    1a1c:	08 95       	ret

00001a1e <fputc>:
    1a1e:	0f 93       	push	r16
    1a20:	1f 93       	push	r17
    1a22:	cf 93       	push	r28
    1a24:	df 93       	push	r29
    1a26:	fb 01       	movw	r30, r22
    1a28:	23 81       	ldd	r18, Z+3	; 0x03
    1a2a:	21 fd       	sbrc	r18, 1
    1a2c:	03 c0       	rjmp	.+6      	; 0x1a34 <fputc+0x16>
    1a2e:	8f ef       	ldi	r24, 0xFF	; 255
    1a30:	9f ef       	ldi	r25, 0xFF	; 255
    1a32:	2c c0       	rjmp	.+88     	; 0x1a8c <fputc+0x6e>
    1a34:	22 ff       	sbrs	r18, 2
    1a36:	16 c0       	rjmp	.+44     	; 0x1a64 <fputc+0x46>
    1a38:	46 81       	ldd	r20, Z+6	; 0x06
    1a3a:	57 81       	ldd	r21, Z+7	; 0x07
    1a3c:	24 81       	ldd	r18, Z+4	; 0x04
    1a3e:	35 81       	ldd	r19, Z+5	; 0x05
    1a40:	42 17       	cp	r20, r18
    1a42:	53 07       	cpc	r21, r19
    1a44:	44 f4       	brge	.+16     	; 0x1a56 <fputc+0x38>
    1a46:	a0 81       	ld	r26, Z
    1a48:	b1 81       	ldd	r27, Z+1	; 0x01
    1a4a:	9d 01       	movw	r18, r26
    1a4c:	2f 5f       	subi	r18, 0xFF	; 255
    1a4e:	3f 4f       	sbci	r19, 0xFF	; 255
    1a50:	20 83       	st	Z, r18
    1a52:	31 83       	std	Z+1, r19	; 0x01
    1a54:	8c 93       	st	X, r24
    1a56:	26 81       	ldd	r18, Z+6	; 0x06
    1a58:	37 81       	ldd	r19, Z+7	; 0x07
    1a5a:	2f 5f       	subi	r18, 0xFF	; 255
    1a5c:	3f 4f       	sbci	r19, 0xFF	; 255
    1a5e:	26 83       	std	Z+6, r18	; 0x06
    1a60:	37 83       	std	Z+7, r19	; 0x07
    1a62:	14 c0       	rjmp	.+40     	; 0x1a8c <fputc+0x6e>
    1a64:	8b 01       	movw	r16, r22
    1a66:	ec 01       	movw	r28, r24
    1a68:	fb 01       	movw	r30, r22
    1a6a:	00 84       	ldd	r0, Z+8	; 0x08
    1a6c:	f1 85       	ldd	r31, Z+9	; 0x09
    1a6e:	e0 2d       	mov	r30, r0
    1a70:	09 95       	icall
    1a72:	89 2b       	or	r24, r25
    1a74:	e1 f6       	brne	.-72     	; 0x1a2e <fputc+0x10>
    1a76:	d8 01       	movw	r26, r16
    1a78:	16 96       	adiw	r26, 0x06	; 6
    1a7a:	8d 91       	ld	r24, X+
    1a7c:	9c 91       	ld	r25, X
    1a7e:	17 97       	sbiw	r26, 0x07	; 7
    1a80:	01 96       	adiw	r24, 0x01	; 1
    1a82:	16 96       	adiw	r26, 0x06	; 6
    1a84:	8d 93       	st	X+, r24
    1a86:	9c 93       	st	X, r25
    1a88:	17 97       	sbiw	r26, 0x07	; 7
    1a8a:	ce 01       	movw	r24, r28
    1a8c:	df 91       	pop	r29
    1a8e:	cf 91       	pop	r28
    1a90:	1f 91       	pop	r17
    1a92:	0f 91       	pop	r16
    1a94:	08 95       	ret

00001a96 <__ultoa_invert>:
    1a96:	fa 01       	movw	r30, r20
    1a98:	aa 27       	eor	r26, r26
    1a9a:	28 30       	cpi	r18, 0x08	; 8
    1a9c:	51 f1       	breq	.+84     	; 0x1af2 <__ultoa_invert+0x5c>
    1a9e:	20 31       	cpi	r18, 0x10	; 16
    1aa0:	81 f1       	breq	.+96     	; 0x1b02 <__ultoa_invert+0x6c>
    1aa2:	e8 94       	clt
    1aa4:	6f 93       	push	r22
    1aa6:	6e 7f       	andi	r22, 0xFE	; 254
    1aa8:	6e 5f       	subi	r22, 0xFE	; 254
    1aaa:	7f 4f       	sbci	r23, 0xFF	; 255
    1aac:	8f 4f       	sbci	r24, 0xFF	; 255
    1aae:	9f 4f       	sbci	r25, 0xFF	; 255
    1ab0:	af 4f       	sbci	r26, 0xFF	; 255
    1ab2:	b1 e0       	ldi	r27, 0x01	; 1
    1ab4:	3e d0       	rcall	.+124    	; 0x1b32 <__ultoa_invert+0x9c>
    1ab6:	b4 e0       	ldi	r27, 0x04	; 4
    1ab8:	3c d0       	rcall	.+120    	; 0x1b32 <__ultoa_invert+0x9c>
    1aba:	67 0f       	add	r22, r23
    1abc:	78 1f       	adc	r23, r24
    1abe:	89 1f       	adc	r24, r25
    1ac0:	9a 1f       	adc	r25, r26
    1ac2:	a1 1d       	adc	r26, r1
    1ac4:	68 0f       	add	r22, r24
    1ac6:	79 1f       	adc	r23, r25
    1ac8:	8a 1f       	adc	r24, r26
    1aca:	91 1d       	adc	r25, r1
    1acc:	a1 1d       	adc	r26, r1
    1ace:	6a 0f       	add	r22, r26
    1ad0:	71 1d       	adc	r23, r1
    1ad2:	81 1d       	adc	r24, r1
    1ad4:	91 1d       	adc	r25, r1
    1ad6:	a1 1d       	adc	r26, r1
    1ad8:	20 d0       	rcall	.+64     	; 0x1b1a <__ultoa_invert+0x84>
    1ada:	09 f4       	brne	.+2      	; 0x1ade <__ultoa_invert+0x48>
    1adc:	68 94       	set
    1ade:	3f 91       	pop	r19
    1ae0:	2a e0       	ldi	r18, 0x0A	; 10
    1ae2:	26 9f       	mul	r18, r22
    1ae4:	11 24       	eor	r1, r1
    1ae6:	30 19       	sub	r19, r0
    1ae8:	30 5d       	subi	r19, 0xD0	; 208
    1aea:	31 93       	st	Z+, r19
    1aec:	de f6       	brtc	.-74     	; 0x1aa4 <__ultoa_invert+0xe>
    1aee:	cf 01       	movw	r24, r30
    1af0:	08 95       	ret
    1af2:	46 2f       	mov	r20, r22
    1af4:	47 70       	andi	r20, 0x07	; 7
    1af6:	40 5d       	subi	r20, 0xD0	; 208
    1af8:	41 93       	st	Z+, r20
    1afa:	b3 e0       	ldi	r27, 0x03	; 3
    1afc:	0f d0       	rcall	.+30     	; 0x1b1c <__ultoa_invert+0x86>
    1afe:	c9 f7       	brne	.-14     	; 0x1af2 <__ultoa_invert+0x5c>
    1b00:	f6 cf       	rjmp	.-20     	; 0x1aee <__ultoa_invert+0x58>
    1b02:	46 2f       	mov	r20, r22
    1b04:	4f 70       	andi	r20, 0x0F	; 15
    1b06:	40 5d       	subi	r20, 0xD0	; 208
    1b08:	4a 33       	cpi	r20, 0x3A	; 58
    1b0a:	18 f0       	brcs	.+6      	; 0x1b12 <__ultoa_invert+0x7c>
    1b0c:	49 5d       	subi	r20, 0xD9	; 217
    1b0e:	31 fd       	sbrc	r19, 1
    1b10:	40 52       	subi	r20, 0x20	; 32
    1b12:	41 93       	st	Z+, r20
    1b14:	02 d0       	rcall	.+4      	; 0x1b1a <__ultoa_invert+0x84>
    1b16:	a9 f7       	brne	.-22     	; 0x1b02 <__ultoa_invert+0x6c>
    1b18:	ea cf       	rjmp	.-44     	; 0x1aee <__ultoa_invert+0x58>
    1b1a:	b4 e0       	ldi	r27, 0x04	; 4
    1b1c:	a6 95       	lsr	r26
    1b1e:	97 95       	ror	r25
    1b20:	87 95       	ror	r24
    1b22:	77 95       	ror	r23
    1b24:	67 95       	ror	r22
    1b26:	ba 95       	dec	r27
    1b28:	c9 f7       	brne	.-14     	; 0x1b1c <__ultoa_invert+0x86>
    1b2a:	00 97       	sbiw	r24, 0x00	; 0
    1b2c:	61 05       	cpc	r22, r1
    1b2e:	71 05       	cpc	r23, r1
    1b30:	08 95       	ret
    1b32:	9b 01       	movw	r18, r22
    1b34:	ac 01       	movw	r20, r24
    1b36:	0a 2e       	mov	r0, r26
    1b38:	06 94       	lsr	r0
    1b3a:	57 95       	ror	r21
    1b3c:	47 95       	ror	r20
    1b3e:	37 95       	ror	r19
    1b40:	27 95       	ror	r18
    1b42:	ba 95       	dec	r27
    1b44:	c9 f7       	brne	.-14     	; 0x1b38 <__ultoa_invert+0xa2>
    1b46:	62 0f       	add	r22, r18
    1b48:	73 1f       	adc	r23, r19
    1b4a:	84 1f       	adc	r24, r20
    1b4c:	95 1f       	adc	r25, r21
    1b4e:	a0 1d       	adc	r26, r0
    1b50:	08 95       	ret

00001b52 <__prologue_saves__>:
    1b52:	2f 92       	push	r2
    1b54:	3f 92       	push	r3
    1b56:	4f 92       	push	r4
    1b58:	5f 92       	push	r5
    1b5a:	6f 92       	push	r6
    1b5c:	7f 92       	push	r7
    1b5e:	8f 92       	push	r8
    1b60:	9f 92       	push	r9
    1b62:	af 92       	push	r10
    1b64:	bf 92       	push	r11
    1b66:	cf 92       	push	r12
    1b68:	df 92       	push	r13
    1b6a:	ef 92       	push	r14
    1b6c:	ff 92       	push	r15
    1b6e:	0f 93       	push	r16
    1b70:	1f 93       	push	r17
    1b72:	cf 93       	push	r28
    1b74:	df 93       	push	r29
    1b76:	cd b7       	in	r28, 0x3d	; 61
    1b78:	de b7       	in	r29, 0x3e	; 62
    1b7a:	ca 1b       	sub	r28, r26
    1b7c:	db 0b       	sbc	r29, r27
    1b7e:	cd bf       	out	0x3d, r28	; 61
    1b80:	de bf       	out	0x3e, r29	; 62
    1b82:	09 94       	ijmp

00001b84 <__epilogue_restores__>:
    1b84:	2a 88       	ldd	r2, Y+18	; 0x12
    1b86:	39 88       	ldd	r3, Y+17	; 0x11
    1b88:	48 88       	ldd	r4, Y+16	; 0x10
    1b8a:	5f 84       	ldd	r5, Y+15	; 0x0f
    1b8c:	6e 84       	ldd	r6, Y+14	; 0x0e
    1b8e:	7d 84       	ldd	r7, Y+13	; 0x0d
    1b90:	8c 84       	ldd	r8, Y+12	; 0x0c
    1b92:	9b 84       	ldd	r9, Y+11	; 0x0b
    1b94:	aa 84       	ldd	r10, Y+10	; 0x0a
    1b96:	b9 84       	ldd	r11, Y+9	; 0x09
    1b98:	c8 84       	ldd	r12, Y+8	; 0x08
    1b9a:	df 80       	ldd	r13, Y+7	; 0x07
    1b9c:	ee 80       	ldd	r14, Y+6	; 0x06
    1b9e:	fd 80       	ldd	r15, Y+5	; 0x05
    1ba0:	0c 81       	ldd	r16, Y+4	; 0x04
    1ba2:	1b 81       	ldd	r17, Y+3	; 0x03
    1ba4:	aa 81       	ldd	r26, Y+2	; 0x02
    1ba6:	b9 81       	ldd	r27, Y+1	; 0x01
    1ba8:	ce 0f       	add	r28, r30
    1baa:	d1 1d       	adc	r29, r1
    1bac:	cd bf       	out	0x3d, r28	; 61
    1bae:	de bf       	out	0x3e, r29	; 62
    1bb0:	ed 01       	movw	r28, r26
    1bb2:	08 95       	ret

00001bb4 <_exit>:
    1bb4:	f8 94       	cli

00001bb6 <__stop_program>:
    1bb6:	ff cf       	rjmp	.-2      	; 0x1bb6 <__stop_program>
