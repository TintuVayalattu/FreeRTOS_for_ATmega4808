
FreeRTOS4LEDsAVRIoTBoardSTARTcompatible.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000064  00802800  00001c9f  00001d53  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00001c54  00000000  00000000  000000b4  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       0000004b  00005c54  00001c54  00001d08  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .bss          00000891  00802864  00802864  00001db7  2**0
                  ALLOC
  4 .comment      0000008c  00000000  00000000  00001db7  2**0
                  CONTENTS, READONLY
  5 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00001e44  2**2
                  CONTENTS, READONLY
  6 .debug_aranges 000004c0  00000000  00000000  00001e88  2**3
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_info   00007ac9  00000000  00000000  00002348  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 000033d2  00000000  00000000  00009e11  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_line   00002fcb  00000000  00000000  0000d1e3  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_frame  00000c9c  00000000  00000000  000101b0  2**2
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_str    00002ce1  00000000  00000000  00010e4c  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_loc    000040bd  00000000  00000000  00013b2d  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_ranges 00000468  00000000  00000000  00017bea  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 48 00 	jmp	0x90	; 0x90 <__ctors_end>
       4:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
       8:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
       c:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      10:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      14:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      18:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      1c:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      20:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      24:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      28:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      2c:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      30:	0c 94 22 02 	jmp	0x444	; 0x444 <__vector_12>
      34:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      38:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      3c:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      40:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      44:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      48:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      4c:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      50:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      54:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      58:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      5c:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      60:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      64:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      68:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      6c:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      70:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      74:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      78:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      7c:	0c 94 aa 0a 	jmp	0x1554	; 0x1554 <__vector_31>
      80:	0c 94 d3 0a 	jmp	0x15a6	; 0x15a6 <__vector_32>
      84:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      88:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      8c:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>

00000090 <__ctors_end>:
      90:	11 24       	eor	r1, r1
      92:	1f be       	out	0x3f, r1	; 63
      94:	cf ef       	ldi	r28, 0xFF	; 255
      96:	cd bf       	out	0x3d, r28	; 61
      98:	df e3       	ldi	r29, 0x3F	; 63
      9a:	de bf       	out	0x3e, r29	; 62

0000009c <__do_copy_data>:
      9c:	18 e2       	ldi	r17, 0x28	; 40
      9e:	a0 e0       	ldi	r26, 0x00	; 0
      a0:	b8 e2       	ldi	r27, 0x28	; 40
      a2:	ef e9       	ldi	r30, 0x9F	; 159
      a4:	fc e1       	ldi	r31, 0x1C	; 28
      a6:	02 c0       	rjmp	.+4      	; 0xac <__do_copy_data+0x10>
      a8:	05 90       	lpm	r0, Z+
      aa:	0d 92       	st	X+, r0
      ac:	a4 36       	cpi	r26, 0x64	; 100
      ae:	b1 07       	cpc	r27, r17
      b0:	d9 f7       	brne	.-10     	; 0xa8 <__do_copy_data+0xc>

000000b2 <__do_clear_bss>:
      b2:	20 e3       	ldi	r18, 0x30	; 48
      b4:	a4 e6       	ldi	r26, 0x64	; 100
      b6:	b8 e2       	ldi	r27, 0x28	; 40
      b8:	01 c0       	rjmp	.+2      	; 0xbc <.do_clear_bss_start>

000000ba <.do_clear_bss_loop>:
      ba:	1d 92       	st	X+, r1

000000bc <.do_clear_bss_start>:
      bc:	a5 3f       	cpi	r26, 0xF5	; 245
      be:	b2 07       	cpc	r27, r18
      c0:	e1 f7       	brne	.-8      	; 0xba <.do_clear_bss_loop>
      c2:	0e 94 88 09 	call	0x1310	; 0x1310 <main>
      c6:	0c 94 28 0e 	jmp	0x1c50	; 0x1c50 <_exit>

000000ca <__bad_interrupt>:
      ca:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000ce <atmel_start_init>:
/**
 * Initializes MCU, drivers and middleware in the project
 **/
void atmel_start_init(void)
{
	system_init();
      ce:	0e 94 4e 0a 	call	0x149c	; 0x149c <system_init>
      d2:	08 95       	ret

000000d4 <vCommandReceiverTask>:

/* Function prototypes */
void vPrintString(void *pvParams);

void vCommandReceiverTask(void *pvParams)
{
      d4:	cf 93       	push	r28
      d6:	df 93       	push	r29
      d8:	00 d0       	rcall	.+0      	; 0xda <vCommandReceiverTask+0x6>
      da:	cd b7       	in	r28, 0x3d	; 61
      dc:	de b7       	in	r29, 0x3e	; 62
	char *ptr=NULL;
      de:	19 82       	std	Y+1, r1	; 0x01
      e0:	1a 82       	std	Y+2, r1	; 0x02
	for (;;)
	{
		if( xQueueReceive(xCommandQueue,(void *)&ptr,100) == pdPASS )
      e2:	44 e6       	ldi	r20, 0x64	; 100
      e4:	50 e0       	ldi	r21, 0x00	; 0
      e6:	be 01       	movw	r22, r28
      e8:	6f 5f       	subi	r22, 0xFF	; 255
      ea:	7f 4f       	sbci	r23, 0xFF	; 255
      ec:	80 91 eb 30 	lds	r24, 0x30EB	; 0x8030eb <xCommandQueue>
      f0:	90 91 ec 30 	lds	r25, 0x30EC	; 0x8030ec <xCommandQueue+0x1>
      f4:	0e 94 71 04 	call	0x8e2	; 0x8e2 <xQueueReceive>
      f8:	81 30       	cpi	r24, 0x01	; 1
      fa:	99 f7       	brne	.-26     	; 0xe2 <vCommandReceiverTask+0xe>
		{
			if (!strcmp((char *)ptr,CMD_VERSION))
      fc:	09 81       	ldd	r16, Y+1	; 0x01
      fe:	1a 81       	ldd	r17, Y+2	; 0x02
     100:	64 e5       	ldi	r22, 0x54	; 84
     102:	7c e5       	ldi	r23, 0x5C	; 92
     104:	c8 01       	movw	r24, r16
     106:	0e 94 47 0b 	call	0x168e	; 0x168e <strcmp>
     10a:	89 2b       	or	r24, r25
     10c:	29 f4       	brne	.+10     	; 0x118 <vCommandReceiverTask+0x44>
			{
				vPrintString((void *)"version = 1.0.0\r\n");
     10e:	8c e5       	ldi	r24, 0x5C	; 92
     110:	9c e5       	ldi	r25, 0x5C	; 92
     112:	0e 94 d3 09 	call	0x13a6	; 0x13a6 <vPrintString>
     116:	e5 cf       	rjmp	.-54     	; 0xe2 <vCommandReceiverTask+0xe>
			}
			else if (!strcmp((char *)ptr,CMD_TIME))
     118:	6e e6       	ldi	r22, 0x6E	; 110
     11a:	7c e5       	ldi	r23, 0x5C	; 92
     11c:	c8 01       	movw	r24, r16
     11e:	0e 94 47 0b 	call	0x168e	; 0x168e <strcmp>
     122:	89 2b       	or	r24, r25
     124:	29 f4       	brne	.+10     	; 0x130 <vCommandReceiverTask+0x5c>
			{
				vPrintString((void *)"18:30:00\r\n");
     126:	83 e7       	ldi	r24, 0x73	; 115
     128:	9c e5       	ldi	r25, 0x5C	; 92
     12a:	0e 94 d3 09 	call	0x13a6	; 0x13a6 <vPrintString>
     12e:	d9 cf       	rjmp	.-78     	; 0xe2 <vCommandReceiverTask+0xe>
			}
			else
			{
				vPrintString((void *)ptr);
     130:	c8 01       	movw	r24, r16
     132:	0e 94 d3 09 	call	0x13a6	; 0x13a6 <vPrintString>
     136:	d5 cf       	rjmp	.-86     	; 0xe2 <vCommandReceiverTask+0xe>

00000138 <vListInitialise>:
     138:	fc 01       	movw	r30, r24
     13a:	03 96       	adiw	r24, 0x03	; 3
     13c:	81 83       	std	Z+1, r24	; 0x01
     13e:	92 83       	std	Z+2, r25	; 0x02
     140:	2f ef       	ldi	r18, 0xFF	; 255
     142:	3f ef       	ldi	r19, 0xFF	; 255
     144:	23 83       	std	Z+3, r18	; 0x03
     146:	34 83       	std	Z+4, r19	; 0x04
     148:	85 83       	std	Z+5, r24	; 0x05
     14a:	96 83       	std	Z+6, r25	; 0x06
     14c:	87 83       	std	Z+7, r24	; 0x07
     14e:	90 87       	std	Z+8, r25	; 0x08
     150:	10 82       	st	Z, r1
     152:	08 95       	ret

00000154 <vListInitialiseItem>:
     154:	fc 01       	movw	r30, r24
     156:	10 86       	std	Z+8, r1	; 0x08
     158:	11 86       	std	Z+9, r1	; 0x09
     15a:	08 95       	ret

0000015c <vListInsertEnd>:
     15c:	cf 93       	push	r28
     15e:	df 93       	push	r29
     160:	9c 01       	movw	r18, r24
     162:	fb 01       	movw	r30, r22
     164:	dc 01       	movw	r26, r24
     166:	11 96       	adiw	r26, 0x01	; 1
     168:	cd 91       	ld	r28, X+
     16a:	dc 91       	ld	r29, X
     16c:	12 97       	sbiw	r26, 0x02	; 2
     16e:	c2 83       	std	Z+2, r28	; 0x02
     170:	d3 83       	std	Z+3, r29	; 0x03
     172:	8c 81       	ldd	r24, Y+4	; 0x04
     174:	9d 81       	ldd	r25, Y+5	; 0x05
     176:	84 83       	std	Z+4, r24	; 0x04
     178:	95 83       	std	Z+5, r25	; 0x05
     17a:	8c 81       	ldd	r24, Y+4	; 0x04
     17c:	9d 81       	ldd	r25, Y+5	; 0x05
     17e:	dc 01       	movw	r26, r24
     180:	12 96       	adiw	r26, 0x02	; 2
     182:	6d 93       	st	X+, r22
     184:	7c 93       	st	X, r23
     186:	13 97       	sbiw	r26, 0x03	; 3
     188:	6c 83       	std	Y+4, r22	; 0x04
     18a:	7d 83       	std	Y+5, r23	; 0x05
     18c:	20 87       	std	Z+8, r18	; 0x08
     18e:	31 87       	std	Z+9, r19	; 0x09
     190:	f9 01       	movw	r30, r18
     192:	80 81       	ld	r24, Z
     194:	8f 5f       	subi	r24, 0xFF	; 255
     196:	80 83       	st	Z, r24
     198:	df 91       	pop	r29
     19a:	cf 91       	pop	r28
     19c:	08 95       	ret

0000019e <vListInsert>:
     19e:	cf 93       	push	r28
     1a0:	df 93       	push	r29
     1a2:	eb 01       	movw	r28, r22
     1a4:	48 81       	ld	r20, Y
     1a6:	59 81       	ldd	r21, Y+1	; 0x01
     1a8:	4f 3f       	cpi	r20, 0xFF	; 255
     1aa:	2f ef       	ldi	r18, 0xFF	; 255
     1ac:	52 07       	cpc	r21, r18
     1ae:	21 f4       	brne	.+8      	; 0x1b8 <vListInsert+0x1a>
     1b0:	fc 01       	movw	r30, r24
     1b2:	a7 81       	ldd	r26, Z+7	; 0x07
     1b4:	b0 85       	ldd	r27, Z+8	; 0x08
     1b6:	0d c0       	rjmp	.+26     	; 0x1d2 <vListInsert+0x34>
     1b8:	dc 01       	movw	r26, r24
     1ba:	13 96       	adiw	r26, 0x03	; 3
     1bc:	01 c0       	rjmp	.+2      	; 0x1c0 <vListInsert+0x22>
     1be:	df 01       	movw	r26, r30
     1c0:	12 96       	adiw	r26, 0x02	; 2
     1c2:	ed 91       	ld	r30, X+
     1c4:	fc 91       	ld	r31, X
     1c6:	13 97       	sbiw	r26, 0x03	; 3
     1c8:	20 81       	ld	r18, Z
     1ca:	31 81       	ldd	r19, Z+1	; 0x01
     1cc:	42 17       	cp	r20, r18
     1ce:	53 07       	cpc	r21, r19
     1d0:	b0 f7       	brcc	.-20     	; 0x1be <vListInsert+0x20>
     1d2:	12 96       	adiw	r26, 0x02	; 2
     1d4:	ed 91       	ld	r30, X+
     1d6:	fc 91       	ld	r31, X
     1d8:	13 97       	sbiw	r26, 0x03	; 3
     1da:	ea 83       	std	Y+2, r30	; 0x02
     1dc:	fb 83       	std	Y+3, r31	; 0x03
     1de:	c4 83       	std	Z+4, r28	; 0x04
     1e0:	d5 83       	std	Z+5, r29	; 0x05
     1e2:	ac 83       	std	Y+4, r26	; 0x04
     1e4:	bd 83       	std	Y+5, r27	; 0x05
     1e6:	12 96       	adiw	r26, 0x02	; 2
     1e8:	cd 93       	st	X+, r28
     1ea:	dc 93       	st	X, r29
     1ec:	13 97       	sbiw	r26, 0x03	; 3
     1ee:	88 87       	std	Y+8, r24	; 0x08
     1f0:	99 87       	std	Y+9, r25	; 0x09
     1f2:	fc 01       	movw	r30, r24
     1f4:	20 81       	ld	r18, Z
     1f6:	2f 5f       	subi	r18, 0xFF	; 255
     1f8:	20 83       	st	Z, r18
     1fa:	df 91       	pop	r29
     1fc:	cf 91       	pop	r28
     1fe:	08 95       	ret

00000200 <uxListRemove>:
     200:	cf 93       	push	r28
     202:	df 93       	push	r29
     204:	fc 01       	movw	r30, r24
     206:	a0 85       	ldd	r26, Z+8	; 0x08
     208:	b1 85       	ldd	r27, Z+9	; 0x09
     20a:	c2 81       	ldd	r28, Z+2	; 0x02
     20c:	d3 81       	ldd	r29, Z+3	; 0x03
     20e:	84 81       	ldd	r24, Z+4	; 0x04
     210:	95 81       	ldd	r25, Z+5	; 0x05
     212:	8c 83       	std	Y+4, r24	; 0x04
     214:	9d 83       	std	Y+5, r25	; 0x05
     216:	c4 81       	ldd	r28, Z+4	; 0x04
     218:	d5 81       	ldd	r29, Z+5	; 0x05
     21a:	82 81       	ldd	r24, Z+2	; 0x02
     21c:	93 81       	ldd	r25, Z+3	; 0x03
     21e:	8a 83       	std	Y+2, r24	; 0x02
     220:	9b 83       	std	Y+3, r25	; 0x03
     222:	11 96       	adiw	r26, 0x01	; 1
     224:	8d 91       	ld	r24, X+
     226:	9c 91       	ld	r25, X
     228:	12 97       	sbiw	r26, 0x02	; 2
     22a:	e8 17       	cp	r30, r24
     22c:	f9 07       	cpc	r31, r25
     22e:	31 f4       	brne	.+12     	; 0x23c <uxListRemove+0x3c>
     230:	84 81       	ldd	r24, Z+4	; 0x04
     232:	95 81       	ldd	r25, Z+5	; 0x05
     234:	11 96       	adiw	r26, 0x01	; 1
     236:	8d 93       	st	X+, r24
     238:	9c 93       	st	X, r25
     23a:	12 97       	sbiw	r26, 0x02	; 2
     23c:	10 86       	std	Z+8, r1	; 0x08
     23e:	11 86       	std	Z+9, r1	; 0x09
     240:	8c 91       	ld	r24, X
     242:	81 50       	subi	r24, 0x01	; 1
     244:	8c 93       	st	X, r24
     246:	8c 91       	ld	r24, X
     248:	df 91       	pop	r29
     24a:	cf 91       	pop	r28
     24c:	08 95       	ret

0000024e <pxPortInitialiseStack>:
     24e:	fc 01       	movw	r30, r24
     250:	60 83       	st	Z, r22
     252:	31 97       	sbiw	r30, 0x01	; 1
     254:	70 83       	st	Z, r23
     256:	31 97       	sbiw	r30, 0x01	; 1
     258:	10 82       	st	Z, r1
     25a:	31 97       	sbiw	r30, 0x01	; 1
     25c:	20 e8       	ldi	r18, 0x80	; 128
     25e:	20 83       	st	Z, r18
     260:	31 97       	sbiw	r30, 0x01	; 1
     262:	10 82       	st	Z, r1
     264:	77 97       	sbiw	r30, 0x17	; 23
     266:	40 83       	st	Z, r20
     268:	31 97       	sbiw	r30, 0x01	; 1
     26a:	50 83       	st	Z, r21
     26c:	83 97       	sbiw	r24, 0x23	; 35
     26e:	08 95       	ret

00000270 <xPortStartScheduler>:
     270:	e0 e8       	ldi	r30, 0x80	; 128
     272:	fa e0       	ldi	r31, 0x0A	; 10
     274:	80 e1       	ldi	r24, 0x10	; 16
     276:	97 e2       	ldi	r25, 0x27	; 39
     278:	84 87       	std	Z+12, r24	; 0x0c
     27a:	95 87       	std	Z+13, r25	; 0x0d
     27c:	81 e0       	ldi	r24, 0x01	; 1
     27e:	85 83       	std	Z+5, r24	; 0x05
     280:	80 83       	st	Z, r24
     282:	a0 91 c2 30 	lds	r26, 0x30C2	; 0x8030c2 <pxCurrentTCB>
     286:	b0 91 c3 30 	lds	r27, 0x30C3	; 0x8030c3 <pxCurrentTCB+0x1>
     28a:	cd 91       	ld	r28, X+
     28c:	cd bf       	out	0x3d, r28	; 61
     28e:	dd 91       	ld	r29, X+
     290:	de bf       	out	0x3e, r29	; 62
     292:	ff 91       	pop	r31
     294:	ef 91       	pop	r30
     296:	df 91       	pop	r29
     298:	cf 91       	pop	r28
     29a:	bf 91       	pop	r27
     29c:	af 91       	pop	r26
     29e:	9f 91       	pop	r25
     2a0:	8f 91       	pop	r24
     2a2:	7f 91       	pop	r23
     2a4:	6f 91       	pop	r22
     2a6:	5f 91       	pop	r21
     2a8:	4f 91       	pop	r20
     2aa:	3f 91       	pop	r19
     2ac:	2f 91       	pop	r18
     2ae:	1f 91       	pop	r17
     2b0:	0f 91       	pop	r16
     2b2:	ff 90       	pop	r15
     2b4:	ef 90       	pop	r14
     2b6:	df 90       	pop	r13
     2b8:	cf 90       	pop	r12
     2ba:	bf 90       	pop	r11
     2bc:	af 90       	pop	r10
     2be:	9f 90       	pop	r9
     2c0:	8f 90       	pop	r8
     2c2:	7f 90       	pop	r7
     2c4:	6f 90       	pop	r6
     2c6:	5f 90       	pop	r5
     2c8:	4f 90       	pop	r4
     2ca:	3f 90       	pop	r3
     2cc:	2f 90       	pop	r2
     2ce:	1f 90       	pop	r1
     2d0:	0f 90       	pop	r0
     2d2:	0f be       	out	0x3f, r0	; 63
     2d4:	0f 90       	pop	r0
     2d6:	08 95       	ret
     2d8:	08 95       	ret

000002da <vPortYield>:
     2da:	0f 92       	push	r0
     2dc:	0f b6       	in	r0, 0x3f	; 63
     2de:	f8 94       	cli
     2e0:	0f 92       	push	r0
     2e2:	1f 92       	push	r1
     2e4:	11 24       	eor	r1, r1
     2e6:	2f 92       	push	r2
     2e8:	3f 92       	push	r3
     2ea:	4f 92       	push	r4
     2ec:	5f 92       	push	r5
     2ee:	6f 92       	push	r6
     2f0:	7f 92       	push	r7
     2f2:	8f 92       	push	r8
     2f4:	9f 92       	push	r9
     2f6:	af 92       	push	r10
     2f8:	bf 92       	push	r11
     2fa:	cf 92       	push	r12
     2fc:	df 92       	push	r13
     2fe:	ef 92       	push	r14
     300:	ff 92       	push	r15
     302:	0f 93       	push	r16
     304:	1f 93       	push	r17
     306:	2f 93       	push	r18
     308:	3f 93       	push	r19
     30a:	4f 93       	push	r20
     30c:	5f 93       	push	r21
     30e:	6f 93       	push	r22
     310:	7f 93       	push	r23
     312:	8f 93       	push	r24
     314:	9f 93       	push	r25
     316:	af 93       	push	r26
     318:	bf 93       	push	r27
     31a:	cf 93       	push	r28
     31c:	df 93       	push	r29
     31e:	ef 93       	push	r30
     320:	ff 93       	push	r31
     322:	a0 91 c2 30 	lds	r26, 0x30C2	; 0x8030c2 <pxCurrentTCB>
     326:	b0 91 c3 30 	lds	r27, 0x30C3	; 0x8030c3 <pxCurrentTCB+0x1>
     32a:	0d b6       	in	r0, 0x3d	; 61
     32c:	0d 92       	st	X+, r0
     32e:	0e b6       	in	r0, 0x3e	; 62
     330:	0d 92       	st	X+, r0
     332:	0e 94 09 08 	call	0x1012	; 0x1012 <vTaskSwitchContext>
     336:	a0 91 c2 30 	lds	r26, 0x30C2	; 0x8030c2 <pxCurrentTCB>
     33a:	b0 91 c3 30 	lds	r27, 0x30C3	; 0x8030c3 <pxCurrentTCB+0x1>
     33e:	cd 91       	ld	r28, X+
     340:	cd bf       	out	0x3d, r28	; 61
     342:	dd 91       	ld	r29, X+
     344:	de bf       	out	0x3e, r29	; 62
     346:	ff 91       	pop	r31
     348:	ef 91       	pop	r30
     34a:	df 91       	pop	r29
     34c:	cf 91       	pop	r28
     34e:	bf 91       	pop	r27
     350:	af 91       	pop	r26
     352:	9f 91       	pop	r25
     354:	8f 91       	pop	r24
     356:	7f 91       	pop	r23
     358:	6f 91       	pop	r22
     35a:	5f 91       	pop	r21
     35c:	4f 91       	pop	r20
     35e:	3f 91       	pop	r19
     360:	2f 91       	pop	r18
     362:	1f 91       	pop	r17
     364:	0f 91       	pop	r16
     366:	ff 90       	pop	r15
     368:	ef 90       	pop	r14
     36a:	df 90       	pop	r13
     36c:	cf 90       	pop	r12
     36e:	bf 90       	pop	r11
     370:	af 90       	pop	r10
     372:	9f 90       	pop	r9
     374:	8f 90       	pop	r8
     376:	7f 90       	pop	r7
     378:	6f 90       	pop	r6
     37a:	5f 90       	pop	r5
     37c:	4f 90       	pop	r4
     37e:	3f 90       	pop	r3
     380:	2f 90       	pop	r2
     382:	1f 90       	pop	r1
     384:	0f 90       	pop	r0
     386:	0f be       	out	0x3f, r0	; 63
     388:	0f 90       	pop	r0
     38a:	08 95       	ret

0000038c <vPortYieldFromTick>:
     38c:	0f 92       	push	r0
     38e:	0f b6       	in	r0, 0x3f	; 63
     390:	f8 94       	cli
     392:	0f 92       	push	r0
     394:	1f 92       	push	r1
     396:	11 24       	eor	r1, r1
     398:	2f 92       	push	r2
     39a:	3f 92       	push	r3
     39c:	4f 92       	push	r4
     39e:	5f 92       	push	r5
     3a0:	6f 92       	push	r6
     3a2:	7f 92       	push	r7
     3a4:	8f 92       	push	r8
     3a6:	9f 92       	push	r9
     3a8:	af 92       	push	r10
     3aa:	bf 92       	push	r11
     3ac:	cf 92       	push	r12
     3ae:	df 92       	push	r13
     3b0:	ef 92       	push	r14
     3b2:	ff 92       	push	r15
     3b4:	0f 93       	push	r16
     3b6:	1f 93       	push	r17
     3b8:	2f 93       	push	r18
     3ba:	3f 93       	push	r19
     3bc:	4f 93       	push	r20
     3be:	5f 93       	push	r21
     3c0:	6f 93       	push	r22
     3c2:	7f 93       	push	r23
     3c4:	8f 93       	push	r24
     3c6:	9f 93       	push	r25
     3c8:	af 93       	push	r26
     3ca:	bf 93       	push	r27
     3cc:	cf 93       	push	r28
     3ce:	df 93       	push	r29
     3d0:	ef 93       	push	r30
     3d2:	ff 93       	push	r31
     3d4:	a0 91 c2 30 	lds	r26, 0x30C2	; 0x8030c2 <pxCurrentTCB>
     3d8:	b0 91 c3 30 	lds	r27, 0x30C3	; 0x8030c3 <pxCurrentTCB+0x1>
     3dc:	0d b6       	in	r0, 0x3d	; 61
     3de:	0d 92       	st	X+, r0
     3e0:	0e b6       	in	r0, 0x3e	; 62
     3e2:	0d 92       	st	X+, r0
     3e4:	0e 94 be 06 	call	0xd7c	; 0xd7c <xTaskIncrementTick>
     3e8:	81 11       	cpse	r24, r1
     3ea:	0e 94 09 08 	call	0x1012	; 0x1012 <vTaskSwitchContext>
     3ee:	a0 91 c2 30 	lds	r26, 0x30C2	; 0x8030c2 <pxCurrentTCB>
     3f2:	b0 91 c3 30 	lds	r27, 0x30C3	; 0x8030c3 <pxCurrentTCB+0x1>
     3f6:	cd 91       	ld	r28, X+
     3f8:	cd bf       	out	0x3d, r28	; 61
     3fa:	dd 91       	ld	r29, X+
     3fc:	de bf       	out	0x3e, r29	; 62
     3fe:	ff 91       	pop	r31
     400:	ef 91       	pop	r30
     402:	df 91       	pop	r29
     404:	cf 91       	pop	r28
     406:	bf 91       	pop	r27
     408:	af 91       	pop	r26
     40a:	9f 91       	pop	r25
     40c:	8f 91       	pop	r24
     40e:	7f 91       	pop	r23
     410:	6f 91       	pop	r22
     412:	5f 91       	pop	r21
     414:	4f 91       	pop	r20
     416:	3f 91       	pop	r19
     418:	2f 91       	pop	r18
     41a:	1f 91       	pop	r17
     41c:	0f 91       	pop	r16
     41e:	ff 90       	pop	r15
     420:	ef 90       	pop	r14
     422:	df 90       	pop	r13
     424:	cf 90       	pop	r12
     426:	bf 90       	pop	r11
     428:	af 90       	pop	r10
     42a:	9f 90       	pop	r9
     42c:	8f 90       	pop	r8
     42e:	7f 90       	pop	r7
     430:	6f 90       	pop	r6
     432:	5f 90       	pop	r5
     434:	4f 90       	pop	r4
     436:	3f 90       	pop	r3
     438:	2f 90       	pop	r2
     43a:	1f 90       	pop	r1
     43c:	0f 90       	pop	r0
     43e:	0f be       	out	0x3f, r0	; 63
     440:	0f 90       	pop	r0
     442:	18 95       	reti

00000444 <__vector_12>:
     444:	0f 93       	push	r16
     446:	01 e0       	ldi	r16, 0x01	; 1
     448:	00 93 86 0a 	sts	0x0A86, r16	; 0x800a86 <__TEXT_REGION_LENGTH__+0x700a86>
     44c:	0f 91       	pop	r16
     44e:	0e 94 c6 01 	call	0x38c	; 0x38c <vPortYieldFromTick>
     452:	18 95       	reti

00000454 <pvPortMalloc>:
     454:	cf 93       	push	r28
     456:	df 93       	push	r29
     458:	ec 01       	movw	r28, r24
     45a:	0e 94 b8 06 	call	0xd70	; 0xd70 <vTaskSuspendAll>
     45e:	80 91 64 28 	lds	r24, 0x2864	; 0x802864 <__data_end>
     462:	90 91 65 28 	lds	r25, 0x2865	; 0x802865 <__data_end+0x1>
     466:	89 2b       	or	r24, r25
     468:	31 f4       	brne	.+12     	; 0x476 <pvPortMalloc+0x22>
     46a:	89 e6       	ldi	r24, 0x69	; 105
     46c:	98 e2       	ldi	r25, 0x28	; 40
     46e:	80 93 64 28 	sts	0x2864, r24	; 0x802864 <__data_end>
     472:	90 93 65 28 	sts	0x2865, r25	; 0x802865 <__data_end+0x1>
     476:	20 91 66 28 	lds	r18, 0x2866	; 0x802866 <xNextFreeByte>
     47a:	30 91 67 28 	lds	r19, 0x2867	; 0x802867 <xNextFreeByte+0x1>
     47e:	c9 01       	movw	r24, r18
     480:	8c 0f       	add	r24, r28
     482:	9d 1f       	adc	r25, r29
     484:	8f 3f       	cpi	r24, 0xFF	; 255
     486:	47 e0       	ldi	r20, 0x07	; 7
     488:	94 07       	cpc	r25, r20
     48a:	70 f4       	brcc	.+28     	; 0x4a8 <pvPortMalloc+0x54>
     48c:	28 17       	cp	r18, r24
     48e:	39 07       	cpc	r19, r25
     490:	70 f4       	brcc	.+28     	; 0x4ae <pvPortMalloc+0x5a>
     492:	c0 91 64 28 	lds	r28, 0x2864	; 0x802864 <__data_end>
     496:	d0 91 65 28 	lds	r29, 0x2865	; 0x802865 <__data_end+0x1>
     49a:	c2 0f       	add	r28, r18
     49c:	d3 1f       	adc	r29, r19
     49e:	80 93 66 28 	sts	0x2866, r24	; 0x802866 <xNextFreeByte>
     4a2:	90 93 67 28 	sts	0x2867, r25	; 0x802867 <xNextFreeByte+0x1>
     4a6:	05 c0       	rjmp	.+10     	; 0x4b2 <pvPortMalloc+0x5e>
     4a8:	c0 e0       	ldi	r28, 0x00	; 0
     4aa:	d0 e0       	ldi	r29, 0x00	; 0
     4ac:	02 c0       	rjmp	.+4      	; 0x4b2 <pvPortMalloc+0x5e>
     4ae:	c0 e0       	ldi	r28, 0x00	; 0
     4b0:	d0 e0       	ldi	r29, 0x00	; 0
     4b2:	0e 94 76 07 	call	0xeec	; 0xeec <xTaskResumeAll>
     4b6:	ce 01       	movw	r24, r28
     4b8:	df 91       	pop	r29
     4ba:	cf 91       	pop	r28
     4bc:	08 95       	ret

000004be <vPortFree>:
     4be:	08 95       	ret

000004c0 <prvIsQueueEmpty>:
     4c0:	0f b6       	in	r0, 0x3f	; 63
     4c2:	f8 94       	cli
     4c4:	0f 92       	push	r0
     4c6:	fc 01       	movw	r30, r24
     4c8:	92 8d       	ldd	r25, Z+26	; 0x1a
     4ca:	0f 90       	pop	r0
     4cc:	0f be       	out	0x3f, r0	; 63
     4ce:	81 e0       	ldi	r24, 0x01	; 1
     4d0:	91 11       	cpse	r25, r1
     4d2:	80 e0       	ldi	r24, 0x00	; 0
     4d4:	08 95       	ret

000004d6 <prvCopyDataToQueue>:
     4d6:	0f 93       	push	r16
     4d8:	1f 93       	push	r17
     4da:	cf 93       	push	r28
     4dc:	df 93       	push	r29
     4de:	ec 01       	movw	r28, r24
     4e0:	04 2f       	mov	r16, r20
     4e2:	1a 8d       	ldd	r17, Y+26	; 0x1a
     4e4:	4c 8d       	ldd	r20, Y+28	; 0x1c
     4e6:	41 11       	cpse	r20, r1
     4e8:	0c c0       	rjmp	.+24     	; 0x502 <prvCopyDataToQueue+0x2c>
     4ea:	88 81       	ld	r24, Y
     4ec:	99 81       	ldd	r25, Y+1	; 0x01
     4ee:	89 2b       	or	r24, r25
     4f0:	09 f0       	breq	.+2      	; 0x4f4 <prvCopyDataToQueue+0x1e>
     4f2:	42 c0       	rjmp	.+132    	; 0x578 <prvCopyDataToQueue+0xa2>
     4f4:	8a 81       	ldd	r24, Y+2	; 0x02
     4f6:	9b 81       	ldd	r25, Y+3	; 0x03
     4f8:	0e 94 0e 09 	call	0x121c	; 0x121c <xTaskPriorityDisinherit>
     4fc:	1a 82       	std	Y+2, r1	; 0x02
     4fe:	1b 82       	std	Y+3, r1	; 0x03
     500:	42 c0       	rjmp	.+132    	; 0x586 <prvCopyDataToQueue+0xb0>
     502:	01 11       	cpse	r16, r1
     504:	17 c0       	rjmp	.+46     	; 0x534 <prvCopyDataToQueue+0x5e>
     506:	50 e0       	ldi	r21, 0x00	; 0
     508:	8c 81       	ldd	r24, Y+4	; 0x04
     50a:	9d 81       	ldd	r25, Y+5	; 0x05
     50c:	0e 94 3e 0b 	call	0x167c	; 0x167c <memcpy>
     510:	2c 8d       	ldd	r18, Y+28	; 0x1c
     512:	8c 81       	ldd	r24, Y+4	; 0x04
     514:	9d 81       	ldd	r25, Y+5	; 0x05
     516:	82 0f       	add	r24, r18
     518:	91 1d       	adc	r25, r1
     51a:	8c 83       	std	Y+4, r24	; 0x04
     51c:	9d 83       	std	Y+5, r25	; 0x05
     51e:	2a 81       	ldd	r18, Y+2	; 0x02
     520:	3b 81       	ldd	r19, Y+3	; 0x03
     522:	82 17       	cp	r24, r18
     524:	93 07       	cpc	r25, r19
     526:	50 f1       	brcs	.+84     	; 0x57c <prvCopyDataToQueue+0xa6>
     528:	88 81       	ld	r24, Y
     52a:	99 81       	ldd	r25, Y+1	; 0x01
     52c:	8c 83       	std	Y+4, r24	; 0x04
     52e:	9d 83       	std	Y+5, r25	; 0x05
     530:	80 e0       	ldi	r24, 0x00	; 0
     532:	29 c0       	rjmp	.+82     	; 0x586 <prvCopyDataToQueue+0xb0>
     534:	50 e0       	ldi	r21, 0x00	; 0
     536:	8e 81       	ldd	r24, Y+6	; 0x06
     538:	9f 81       	ldd	r25, Y+7	; 0x07
     53a:	0e 94 3e 0b 	call	0x167c	; 0x167c <memcpy>
     53e:	8c 8d       	ldd	r24, Y+28	; 0x1c
     540:	90 e0       	ldi	r25, 0x00	; 0
     542:	91 95       	neg	r25
     544:	81 95       	neg	r24
     546:	91 09       	sbc	r25, r1
     548:	2e 81       	ldd	r18, Y+6	; 0x06
     54a:	3f 81       	ldd	r19, Y+7	; 0x07
     54c:	28 0f       	add	r18, r24
     54e:	39 1f       	adc	r19, r25
     550:	2e 83       	std	Y+6, r18	; 0x06
     552:	3f 83       	std	Y+7, r19	; 0x07
     554:	48 81       	ld	r20, Y
     556:	59 81       	ldd	r21, Y+1	; 0x01
     558:	24 17       	cp	r18, r20
     55a:	35 07       	cpc	r19, r21
     55c:	30 f4       	brcc	.+12     	; 0x56a <prvCopyDataToQueue+0x94>
     55e:	2a 81       	ldd	r18, Y+2	; 0x02
     560:	3b 81       	ldd	r19, Y+3	; 0x03
     562:	82 0f       	add	r24, r18
     564:	93 1f       	adc	r25, r19
     566:	8e 83       	std	Y+6, r24	; 0x06
     568:	9f 83       	std	Y+7, r25	; 0x07
     56a:	02 30       	cpi	r16, 0x02	; 2
     56c:	49 f4       	brne	.+18     	; 0x580 <prvCopyDataToQueue+0xaa>
     56e:	11 23       	and	r17, r17
     570:	49 f0       	breq	.+18     	; 0x584 <prvCopyDataToQueue+0xae>
     572:	11 50       	subi	r17, 0x01	; 1
     574:	80 e0       	ldi	r24, 0x00	; 0
     576:	07 c0       	rjmp	.+14     	; 0x586 <prvCopyDataToQueue+0xb0>
     578:	80 e0       	ldi	r24, 0x00	; 0
     57a:	05 c0       	rjmp	.+10     	; 0x586 <prvCopyDataToQueue+0xb0>
     57c:	80 e0       	ldi	r24, 0x00	; 0
     57e:	03 c0       	rjmp	.+6      	; 0x586 <prvCopyDataToQueue+0xb0>
     580:	80 e0       	ldi	r24, 0x00	; 0
     582:	01 c0       	rjmp	.+2      	; 0x586 <prvCopyDataToQueue+0xb0>
     584:	80 e0       	ldi	r24, 0x00	; 0
     586:	1f 5f       	subi	r17, 0xFF	; 255
     588:	1a 8f       	std	Y+26, r17	; 0x1a
     58a:	df 91       	pop	r29
     58c:	cf 91       	pop	r28
     58e:	1f 91       	pop	r17
     590:	0f 91       	pop	r16
     592:	08 95       	ret

00000594 <prvCopyDataFromQueue>:
     594:	fc 01       	movw	r30, r24
     596:	44 8d       	ldd	r20, Z+28	; 0x1c
     598:	44 23       	and	r20, r20
     59a:	a9 f0       	breq	.+42     	; 0x5c6 <prvCopyDataFromQueue+0x32>
     59c:	50 e0       	ldi	r21, 0x00	; 0
     59e:	26 81       	ldd	r18, Z+6	; 0x06
     5a0:	37 81       	ldd	r19, Z+7	; 0x07
     5a2:	24 0f       	add	r18, r20
     5a4:	35 1f       	adc	r19, r21
     5a6:	26 83       	std	Z+6, r18	; 0x06
     5a8:	37 83       	std	Z+7, r19	; 0x07
     5aa:	82 81       	ldd	r24, Z+2	; 0x02
     5ac:	93 81       	ldd	r25, Z+3	; 0x03
     5ae:	28 17       	cp	r18, r24
     5b0:	39 07       	cpc	r19, r25
     5b2:	20 f0       	brcs	.+8      	; 0x5bc <prvCopyDataFromQueue+0x28>
     5b4:	80 81       	ld	r24, Z
     5b6:	91 81       	ldd	r25, Z+1	; 0x01
     5b8:	86 83       	std	Z+6, r24	; 0x06
     5ba:	97 83       	std	Z+7, r25	; 0x07
     5bc:	cb 01       	movw	r24, r22
     5be:	66 81       	ldd	r22, Z+6	; 0x06
     5c0:	77 81       	ldd	r23, Z+7	; 0x07
     5c2:	0e 94 3e 0b 	call	0x167c	; 0x167c <memcpy>
     5c6:	08 95       	ret

000005c8 <prvUnlockQueue>:
     5c8:	ef 92       	push	r14
     5ca:	ff 92       	push	r15
     5cc:	0f 93       	push	r16
     5ce:	1f 93       	push	r17
     5d0:	cf 93       	push	r28
     5d2:	8c 01       	movw	r16, r24
     5d4:	0f b6       	in	r0, 0x3f	; 63
     5d6:	f8 94       	cli
     5d8:	0f 92       	push	r0
     5da:	fc 01       	movw	r30, r24
     5dc:	c6 8d       	ldd	r28, Z+30	; 0x1e
     5de:	1c 16       	cp	r1, r28
     5e0:	ac f4       	brge	.+42     	; 0x60c <prvUnlockQueue+0x44>
     5e2:	81 89       	ldd	r24, Z+17	; 0x11
     5e4:	81 11       	cpse	r24, r1
     5e6:	06 c0       	rjmp	.+12     	; 0x5f4 <prvUnlockQueue+0x2c>
     5e8:	11 c0       	rjmp	.+34     	; 0x60c <prvUnlockQueue+0x44>
     5ea:	f8 01       	movw	r30, r16
     5ec:	81 89       	ldd	r24, Z+17	; 0x11
     5ee:	81 11       	cpse	r24, r1
     5f0:	05 c0       	rjmp	.+10     	; 0x5fc <prvUnlockQueue+0x34>
     5f2:	0c c0       	rjmp	.+24     	; 0x60c <prvUnlockQueue+0x44>
     5f4:	78 01       	movw	r14, r16
     5f6:	f1 e1       	ldi	r31, 0x11	; 17
     5f8:	ef 0e       	add	r14, r31
     5fa:	f1 1c       	adc	r15, r1
     5fc:	c7 01       	movw	r24, r14
     5fe:	0e 94 81 08 	call	0x1102	; 0x1102 <xTaskRemoveFromEventList>
     602:	81 11       	cpse	r24, r1
     604:	0e 94 0a 09 	call	0x1214	; 0x1214 <vTaskMissedYield>
     608:	c1 50       	subi	r28, 0x01	; 1
     60a:	79 f7       	brne	.-34     	; 0x5ea <prvUnlockQueue+0x22>
     60c:	8f ef       	ldi	r24, 0xFF	; 255
     60e:	f8 01       	movw	r30, r16
     610:	86 8f       	std	Z+30, r24	; 0x1e
     612:	0f 90       	pop	r0
     614:	0f be       	out	0x3f, r0	; 63
     616:	0f b6       	in	r0, 0x3f	; 63
     618:	f8 94       	cli
     61a:	0f 92       	push	r0
     61c:	c5 8d       	ldd	r28, Z+29	; 0x1d
     61e:	1c 16       	cp	r1, r28
     620:	ac f4       	brge	.+42     	; 0x64c <prvUnlockQueue+0x84>
     622:	80 85       	ldd	r24, Z+8	; 0x08
     624:	81 11       	cpse	r24, r1
     626:	06 c0       	rjmp	.+12     	; 0x634 <prvUnlockQueue+0x6c>
     628:	11 c0       	rjmp	.+34     	; 0x64c <prvUnlockQueue+0x84>
     62a:	f8 01       	movw	r30, r16
     62c:	80 85       	ldd	r24, Z+8	; 0x08
     62e:	81 11       	cpse	r24, r1
     630:	05 c0       	rjmp	.+10     	; 0x63c <prvUnlockQueue+0x74>
     632:	0c c0       	rjmp	.+24     	; 0x64c <prvUnlockQueue+0x84>
     634:	78 01       	movw	r14, r16
     636:	f8 e0       	ldi	r31, 0x08	; 8
     638:	ef 0e       	add	r14, r31
     63a:	f1 1c       	adc	r15, r1
     63c:	c7 01       	movw	r24, r14
     63e:	0e 94 81 08 	call	0x1102	; 0x1102 <xTaskRemoveFromEventList>
     642:	81 11       	cpse	r24, r1
     644:	0e 94 0a 09 	call	0x1214	; 0x1214 <vTaskMissedYield>
     648:	c1 50       	subi	r28, 0x01	; 1
     64a:	79 f7       	brne	.-34     	; 0x62a <prvUnlockQueue+0x62>
     64c:	8f ef       	ldi	r24, 0xFF	; 255
     64e:	f8 01       	movw	r30, r16
     650:	85 8f       	std	Z+29, r24	; 0x1d
     652:	0f 90       	pop	r0
     654:	0f be       	out	0x3f, r0	; 63
     656:	cf 91       	pop	r28
     658:	1f 91       	pop	r17
     65a:	0f 91       	pop	r16
     65c:	ff 90       	pop	r15
     65e:	ef 90       	pop	r14
     660:	08 95       	ret

00000662 <xQueueGenericReset>:
     662:	cf 93       	push	r28
     664:	df 93       	push	r29
     666:	ec 01       	movw	r28, r24
     668:	0f b6       	in	r0, 0x3f	; 63
     66a:	f8 94       	cli
     66c:	0f 92       	push	r0
     66e:	48 81       	ld	r20, Y
     670:	59 81       	ldd	r21, Y+1	; 0x01
     672:	2c 8d       	ldd	r18, Y+28	; 0x1c
     674:	30 e0       	ldi	r19, 0x00	; 0
     676:	7b 8d       	ldd	r23, Y+27	; 0x1b
     678:	72 9f       	mul	r23, r18
     67a:	c0 01       	movw	r24, r0
     67c:	73 9f       	mul	r23, r19
     67e:	90 0d       	add	r25, r0
     680:	11 24       	eor	r1, r1
     682:	fa 01       	movw	r30, r20
     684:	e8 0f       	add	r30, r24
     686:	f9 1f       	adc	r31, r25
     688:	ea 83       	std	Y+2, r30	; 0x02
     68a:	fb 83       	std	Y+3, r31	; 0x03
     68c:	1a 8e       	std	Y+26, r1	; 0x1a
     68e:	4c 83       	std	Y+4, r20	; 0x04
     690:	5d 83       	std	Y+5, r21	; 0x05
     692:	82 1b       	sub	r24, r18
     694:	93 0b       	sbc	r25, r19
     696:	84 0f       	add	r24, r20
     698:	95 1f       	adc	r25, r21
     69a:	8e 83       	std	Y+6, r24	; 0x06
     69c:	9f 83       	std	Y+7, r25	; 0x07
     69e:	8f ef       	ldi	r24, 0xFF	; 255
     6a0:	8d 8f       	std	Y+29, r24	; 0x1d
     6a2:	8e 8f       	std	Y+30, r24	; 0x1e
     6a4:	61 11       	cpse	r22, r1
     6a6:	0c c0       	rjmp	.+24     	; 0x6c0 <xQueueGenericReset+0x5e>
     6a8:	88 85       	ldd	r24, Y+8	; 0x08
     6aa:	88 23       	and	r24, r24
     6ac:	89 f0       	breq	.+34     	; 0x6d0 <xQueueGenericReset+0x6e>
     6ae:	ce 01       	movw	r24, r28
     6b0:	08 96       	adiw	r24, 0x08	; 8
     6b2:	0e 94 81 08 	call	0x1102	; 0x1102 <xTaskRemoveFromEventList>
     6b6:	88 23       	and	r24, r24
     6b8:	59 f0       	breq	.+22     	; 0x6d0 <xQueueGenericReset+0x6e>
     6ba:	0e 94 6d 01 	call	0x2da	; 0x2da <vPortYield>
     6be:	08 c0       	rjmp	.+16     	; 0x6d0 <xQueueGenericReset+0x6e>
     6c0:	ce 01       	movw	r24, r28
     6c2:	08 96       	adiw	r24, 0x08	; 8
     6c4:	0e 94 9c 00 	call	0x138	; 0x138 <vListInitialise>
     6c8:	ce 01       	movw	r24, r28
     6ca:	41 96       	adiw	r24, 0x11	; 17
     6cc:	0e 94 9c 00 	call	0x138	; 0x138 <vListInitialise>
     6d0:	0f 90       	pop	r0
     6d2:	0f be       	out	0x3f, r0	; 63
     6d4:	81 e0       	ldi	r24, 0x01	; 1
     6d6:	df 91       	pop	r29
     6d8:	cf 91       	pop	r28
     6da:	08 95       	ret

000006dc <xQueueGenericCreate>:
     6dc:	0f 93       	push	r16
     6de:	1f 93       	push	r17
     6e0:	cf 93       	push	r28
     6e2:	df 93       	push	r29
     6e4:	08 2f       	mov	r16, r24
     6e6:	16 2f       	mov	r17, r22
     6e8:	66 23       	and	r22, r22
     6ea:	c1 f0       	breq	.+48     	; 0x71c <xQueueGenericCreate+0x40>
     6ec:	86 9f       	mul	r24, r22
     6ee:	c0 01       	movw	r24, r0
     6f0:	11 24       	eor	r1, r1
     6f2:	4f 96       	adiw	r24, 0x1f	; 31
     6f4:	0e 94 2a 02 	call	0x454	; 0x454 <pvPortMalloc>
     6f8:	ec 01       	movw	r28, r24
     6fa:	00 97       	sbiw	r24, 0x00	; 0
     6fc:	41 f4       	brne	.+16     	; 0x70e <xQueueGenericCreate+0x32>
     6fe:	15 c0       	rjmp	.+42     	; 0x72a <xQueueGenericCreate+0x4e>
     700:	0b 8f       	std	Y+27, r16	; 0x1b
     702:	1c 8f       	std	Y+28, r17	; 0x1c
     704:	61 e0       	ldi	r22, 0x01	; 1
     706:	ce 01       	movw	r24, r28
     708:	0e 94 31 03 	call	0x662	; 0x662 <xQueueGenericReset>
     70c:	0e c0       	rjmp	.+28     	; 0x72a <xQueueGenericCreate+0x4e>
     70e:	4f 96       	adiw	r24, 0x1f	; 31
     710:	88 83       	st	Y, r24
     712:	99 83       	std	Y+1, r25	; 0x01
     714:	f5 cf       	rjmp	.-22     	; 0x700 <xQueueGenericCreate+0x24>
     716:	c8 83       	st	Y, r28
     718:	d9 83       	std	Y+1, r29	; 0x01
     71a:	f2 cf       	rjmp	.-28     	; 0x700 <xQueueGenericCreate+0x24>
     71c:	8f e1       	ldi	r24, 0x1F	; 31
     71e:	90 e0       	ldi	r25, 0x00	; 0
     720:	0e 94 2a 02 	call	0x454	; 0x454 <pvPortMalloc>
     724:	ec 01       	movw	r28, r24
     726:	89 2b       	or	r24, r25
     728:	b1 f7       	brne	.-20     	; 0x716 <xQueueGenericCreate+0x3a>
     72a:	ce 01       	movw	r24, r28
     72c:	df 91       	pop	r29
     72e:	cf 91       	pop	r28
     730:	1f 91       	pop	r17
     732:	0f 91       	pop	r16
     734:	08 95       	ret

00000736 <xQueueGenericSend>:
     736:	af 92       	push	r10
     738:	bf 92       	push	r11
     73a:	cf 92       	push	r12
     73c:	df 92       	push	r13
     73e:	ef 92       	push	r14
     740:	ff 92       	push	r15
     742:	0f 93       	push	r16
     744:	1f 93       	push	r17
     746:	cf 93       	push	r28
     748:	df 93       	push	r29
     74a:	cd b7       	in	r28, 0x3d	; 61
     74c:	de b7       	in	r29, 0x3e	; 62
     74e:	25 97       	sbiw	r28, 0x05	; 5
     750:	cd bf       	out	0x3d, r28	; 61
     752:	de bf       	out	0x3e, r29	; 62
     754:	8c 01       	movw	r16, r24
     756:	6b 01       	movw	r12, r22
     758:	4c 83       	std	Y+4, r20	; 0x04
     75a:	5d 83       	std	Y+5, r21	; 0x05
     75c:	a2 2e       	mov	r10, r18
     75e:	b1 2c       	mov	r11, r1
     760:	7c 01       	movw	r14, r24
     762:	88 e0       	ldi	r24, 0x08	; 8
     764:	e8 0e       	add	r14, r24
     766:	f1 1c       	adc	r15, r1
     768:	0f b6       	in	r0, 0x3f	; 63
     76a:	f8 94       	cli
     76c:	0f 92       	push	r0
     76e:	f8 01       	movw	r30, r16
     770:	92 8d       	ldd	r25, Z+26	; 0x1a
     772:	83 8d       	ldd	r24, Z+27	; 0x1b
     774:	98 17       	cp	r25, r24
     776:	18 f0       	brcs	.+6      	; 0x77e <xQueueGenericSend+0x48>
     778:	f2 e0       	ldi	r31, 0x02	; 2
     77a:	af 12       	cpse	r10, r31
     77c:	19 c0       	rjmp	.+50     	; 0x7b0 <xQueueGenericSend+0x7a>
     77e:	4a 2d       	mov	r20, r10
     780:	b6 01       	movw	r22, r12
     782:	c8 01       	movw	r24, r16
     784:	0e 94 6b 02 	call	0x4d6	; 0x4d6 <prvCopyDataToQueue>
     788:	f8 01       	movw	r30, r16
     78a:	91 89       	ldd	r25, Z+17	; 0x11
     78c:	99 23       	and	r25, r25
     78e:	49 f0       	breq	.+18     	; 0x7a2 <xQueueGenericSend+0x6c>
     790:	c8 01       	movw	r24, r16
     792:	41 96       	adiw	r24, 0x11	; 17
     794:	0e 94 81 08 	call	0x1102	; 0x1102 <xTaskRemoveFromEventList>
     798:	88 23       	and	r24, r24
     79a:	31 f0       	breq	.+12     	; 0x7a8 <xQueueGenericSend+0x72>
     79c:	0e 94 6d 01 	call	0x2da	; 0x2da <vPortYield>
     7a0:	03 c0       	rjmp	.+6      	; 0x7a8 <xQueueGenericSend+0x72>
     7a2:	81 11       	cpse	r24, r1
     7a4:	0e 94 6d 01 	call	0x2da	; 0x2da <vPortYield>
     7a8:	0f 90       	pop	r0
     7aa:	0f be       	out	0x3f, r0	; 63
     7ac:	81 e0       	ldi	r24, 0x01	; 1
     7ae:	51 c0       	rjmp	.+162    	; 0x852 <xQueueGenericSend+0x11c>
     7b0:	8c 81       	ldd	r24, Y+4	; 0x04
     7b2:	9d 81       	ldd	r25, Y+5	; 0x05
     7b4:	89 2b       	or	r24, r25
     7b6:	21 f4       	brne	.+8      	; 0x7c0 <xQueueGenericSend+0x8a>
     7b8:	0f 90       	pop	r0
     7ba:	0f be       	out	0x3f, r0	; 63
     7bc:	80 e0       	ldi	r24, 0x00	; 0
     7be:	49 c0       	rjmp	.+146    	; 0x852 <xQueueGenericSend+0x11c>
     7c0:	b1 10       	cpse	r11, r1
     7c2:	06 c0       	rjmp	.+12     	; 0x7d0 <xQueueGenericSend+0x9a>
     7c4:	ce 01       	movw	r24, r28
     7c6:	01 96       	adiw	r24, 0x01	; 1
     7c8:	0e 94 c9 08 	call	0x1192	; 0x1192 <vTaskInternalSetTimeOutState>
     7cc:	bb 24       	eor	r11, r11
     7ce:	b3 94       	inc	r11
     7d0:	0f 90       	pop	r0
     7d2:	0f be       	out	0x3f, r0	; 63
     7d4:	0e 94 b8 06 	call	0xd70	; 0xd70 <vTaskSuspendAll>
     7d8:	0f b6       	in	r0, 0x3f	; 63
     7da:	f8 94       	cli
     7dc:	0f 92       	push	r0
     7de:	f8 01       	movw	r30, r16
     7e0:	85 8d       	ldd	r24, Z+29	; 0x1d
     7e2:	8f 3f       	cpi	r24, 0xFF	; 255
     7e4:	09 f4       	brne	.+2      	; 0x7e8 <xQueueGenericSend+0xb2>
     7e6:	15 8e       	std	Z+29, r1	; 0x1d
     7e8:	f8 01       	movw	r30, r16
     7ea:	86 8d       	ldd	r24, Z+30	; 0x1e
     7ec:	8f 3f       	cpi	r24, 0xFF	; 255
     7ee:	09 f4       	brne	.+2      	; 0x7f2 <xQueueGenericSend+0xbc>
     7f0:	16 8e       	std	Z+30, r1	; 0x1e
     7f2:	0f 90       	pop	r0
     7f4:	0f be       	out	0x3f, r0	; 63
     7f6:	be 01       	movw	r22, r28
     7f8:	6c 5f       	subi	r22, 0xFC	; 252
     7fa:	7f 4f       	sbci	r23, 0xFF	; 255
     7fc:	ce 01       	movw	r24, r28
     7fe:	01 96       	adiw	r24, 0x01	; 1
     800:	0e 94 d4 08 	call	0x11a8	; 0x11a8 <xTaskCheckForTimeOut>
     804:	81 11       	cpse	r24, r1
     806:	1f c0       	rjmp	.+62     	; 0x846 <xQueueGenericSend+0x110>
     808:	0f b6       	in	r0, 0x3f	; 63
     80a:	f8 94       	cli
     80c:	0f 92       	push	r0
     80e:	f8 01       	movw	r30, r16
     810:	92 8d       	ldd	r25, Z+26	; 0x1a
     812:	0f 90       	pop	r0
     814:	0f be       	out	0x3f, r0	; 63
     816:	83 8d       	ldd	r24, Z+27	; 0x1b
     818:	98 13       	cpse	r25, r24
     81a:	0f c0       	rjmp	.+30     	; 0x83a <xQueueGenericSend+0x104>
     81c:	6c 81       	ldd	r22, Y+4	; 0x04
     81e:	7d 81       	ldd	r23, Y+5	; 0x05
     820:	c7 01       	movw	r24, r14
     822:	0e 94 6f 08 	call	0x10de	; 0x10de <vTaskPlaceOnEventList>
     826:	c8 01       	movw	r24, r16
     828:	0e 94 e4 02 	call	0x5c8	; 0x5c8 <prvUnlockQueue>
     82c:	0e 94 76 07 	call	0xeec	; 0xeec <xTaskResumeAll>
     830:	81 11       	cpse	r24, r1
     832:	9a cf       	rjmp	.-204    	; 0x768 <xQueueGenericSend+0x32>
     834:	0e 94 6d 01 	call	0x2da	; 0x2da <vPortYield>
     838:	97 cf       	rjmp	.-210    	; 0x768 <xQueueGenericSend+0x32>
     83a:	c8 01       	movw	r24, r16
     83c:	0e 94 e4 02 	call	0x5c8	; 0x5c8 <prvUnlockQueue>
     840:	0e 94 76 07 	call	0xeec	; 0xeec <xTaskResumeAll>
     844:	91 cf       	rjmp	.-222    	; 0x768 <xQueueGenericSend+0x32>
     846:	c8 01       	movw	r24, r16
     848:	0e 94 e4 02 	call	0x5c8	; 0x5c8 <prvUnlockQueue>
     84c:	0e 94 76 07 	call	0xeec	; 0xeec <xTaskResumeAll>
     850:	80 e0       	ldi	r24, 0x00	; 0
     852:	25 96       	adiw	r28, 0x05	; 5
     854:	cd bf       	out	0x3d, r28	; 61
     856:	de bf       	out	0x3e, r29	; 62
     858:	df 91       	pop	r29
     85a:	cf 91       	pop	r28
     85c:	1f 91       	pop	r17
     85e:	0f 91       	pop	r16
     860:	ff 90       	pop	r15
     862:	ef 90       	pop	r14
     864:	df 90       	pop	r13
     866:	cf 90       	pop	r12
     868:	bf 90       	pop	r11
     86a:	af 90       	pop	r10
     86c:	08 95       	ret

0000086e <xQueueGenericSendFromISR>:
     86e:	ef 92       	push	r14
     870:	ff 92       	push	r15
     872:	0f 93       	push	r16
     874:	1f 93       	push	r17
     876:	cf 93       	push	r28
     878:	df 93       	push	r29
     87a:	8a 01       	movw	r16, r20
     87c:	fc 01       	movw	r30, r24
     87e:	52 8d       	ldd	r21, Z+26	; 0x1a
     880:	33 8d       	ldd	r19, Z+27	; 0x1b
     882:	53 17       	cp	r21, r19
     884:	10 f0       	brcs	.+4      	; 0x88a <xQueueGenericSendFromISR+0x1c>
     886:	22 30       	cpi	r18, 0x02	; 2
     888:	f1 f4       	brne	.+60     	; 0x8c6 <xQueueGenericSendFromISR+0x58>
     88a:	42 2f       	mov	r20, r18
     88c:	78 01       	movw	r14, r16
     88e:	ec 01       	movw	r28, r24
     890:	1e 8d       	ldd	r17, Y+30	; 0x1e
     892:	0e 94 6b 02 	call	0x4d6	; 0x4d6 <prvCopyDataToQueue>
     896:	1f 3f       	cpi	r17, 0xFF	; 255
     898:	81 f4       	brne	.+32     	; 0x8ba <xQueueGenericSendFromISR+0x4c>
     89a:	89 89       	ldd	r24, Y+17	; 0x11
     89c:	88 23       	and	r24, r24
     89e:	a9 f0       	breq	.+42     	; 0x8ca <xQueueGenericSendFromISR+0x5c>
     8a0:	ce 01       	movw	r24, r28
     8a2:	41 96       	adiw	r24, 0x11	; 17
     8a4:	0e 94 81 08 	call	0x1102	; 0x1102 <xTaskRemoveFromEventList>
     8a8:	88 23       	and	r24, r24
     8aa:	89 f0       	breq	.+34     	; 0x8ce <xQueueGenericSendFromISR+0x60>
     8ac:	e1 14       	cp	r14, r1
     8ae:	f1 04       	cpc	r15, r1
     8b0:	81 f0       	breq	.+32     	; 0x8d2 <xQueueGenericSendFromISR+0x64>
     8b2:	81 e0       	ldi	r24, 0x01	; 1
     8b4:	f7 01       	movw	r30, r14
     8b6:	80 83       	st	Z, r24
     8b8:	0d c0       	rjmp	.+26     	; 0x8d4 <xQueueGenericSendFromISR+0x66>
     8ba:	ff 24       	eor	r15, r15
     8bc:	f3 94       	inc	r15
     8be:	f1 0e       	add	r15, r17
     8c0:	fe 8e       	std	Y+30, r15	; 0x1e
     8c2:	81 e0       	ldi	r24, 0x01	; 1
     8c4:	07 c0       	rjmp	.+14     	; 0x8d4 <xQueueGenericSendFromISR+0x66>
     8c6:	80 e0       	ldi	r24, 0x00	; 0
     8c8:	05 c0       	rjmp	.+10     	; 0x8d4 <xQueueGenericSendFromISR+0x66>
     8ca:	81 e0       	ldi	r24, 0x01	; 1
     8cc:	03 c0       	rjmp	.+6      	; 0x8d4 <xQueueGenericSendFromISR+0x66>
     8ce:	81 e0       	ldi	r24, 0x01	; 1
     8d0:	01 c0       	rjmp	.+2      	; 0x8d4 <xQueueGenericSendFromISR+0x66>
     8d2:	81 e0       	ldi	r24, 0x01	; 1
     8d4:	df 91       	pop	r29
     8d6:	cf 91       	pop	r28
     8d8:	1f 91       	pop	r17
     8da:	0f 91       	pop	r16
     8dc:	ff 90       	pop	r15
     8de:	ef 90       	pop	r14
     8e0:	08 95       	ret

000008e2 <xQueueReceive>:
     8e2:	af 92       	push	r10
     8e4:	bf 92       	push	r11
     8e6:	cf 92       	push	r12
     8e8:	df 92       	push	r13
     8ea:	ef 92       	push	r14
     8ec:	ff 92       	push	r15
     8ee:	0f 93       	push	r16
     8f0:	1f 93       	push	r17
     8f2:	cf 93       	push	r28
     8f4:	df 93       	push	r29
     8f6:	cd b7       	in	r28, 0x3d	; 61
     8f8:	de b7       	in	r29, 0x3e	; 62
     8fa:	25 97       	sbiw	r28, 0x05	; 5
     8fc:	cd bf       	out	0x3d, r28	; 61
     8fe:	de bf       	out	0x3e, r29	; 62
     900:	8c 01       	movw	r16, r24
     902:	5b 01       	movw	r10, r22
     904:	4c 83       	std	Y+4, r20	; 0x04
     906:	5d 83       	std	Y+5, r21	; 0x05
     908:	e1 2c       	mov	r14, r1
     90a:	6c 01       	movw	r12, r24
     90c:	81 e1       	ldi	r24, 0x11	; 17
     90e:	c8 0e       	add	r12, r24
     910:	d1 1c       	adc	r13, r1
     912:	0f b6       	in	r0, 0x3f	; 63
     914:	f8 94       	cli
     916:	0f 92       	push	r0
     918:	f8 01       	movw	r30, r16
     91a:	f2 8c       	ldd	r15, Z+26	; 0x1a
     91c:	ff 20       	and	r15, r15
     91e:	a9 f0       	breq	.+42     	; 0x94a <xQueueReceive+0x68>
     920:	b5 01       	movw	r22, r10
     922:	c8 01       	movw	r24, r16
     924:	0e 94 ca 02 	call	0x594	; 0x594 <prvCopyDataFromQueue>
     928:	fa 94       	dec	r15
     92a:	f8 01       	movw	r30, r16
     92c:	f2 8e       	std	Z+26, r15	; 0x1a
     92e:	80 85       	ldd	r24, Z+8	; 0x08
     930:	88 23       	and	r24, r24
     932:	39 f0       	breq	.+14     	; 0x942 <xQueueReceive+0x60>
     934:	c8 01       	movw	r24, r16
     936:	08 96       	adiw	r24, 0x08	; 8
     938:	0e 94 81 08 	call	0x1102	; 0x1102 <xTaskRemoveFromEventList>
     93c:	81 11       	cpse	r24, r1
     93e:	0e 94 6d 01 	call	0x2da	; 0x2da <vPortYield>
     942:	0f 90       	pop	r0
     944:	0f be       	out	0x3f, r0	; 63
     946:	81 e0       	ldi	r24, 0x01	; 1
     948:	52 c0       	rjmp	.+164    	; 0x9ee <xQueueReceive+0x10c>
     94a:	8c 81       	ldd	r24, Y+4	; 0x04
     94c:	9d 81       	ldd	r25, Y+5	; 0x05
     94e:	89 2b       	or	r24, r25
     950:	21 f4       	brne	.+8      	; 0x95a <xQueueReceive+0x78>
     952:	0f 90       	pop	r0
     954:	0f be       	out	0x3f, r0	; 63
     956:	80 e0       	ldi	r24, 0x00	; 0
     958:	4a c0       	rjmp	.+148    	; 0x9ee <xQueueReceive+0x10c>
     95a:	e1 10       	cpse	r14, r1
     95c:	06 c0       	rjmp	.+12     	; 0x96a <xQueueReceive+0x88>
     95e:	ce 01       	movw	r24, r28
     960:	01 96       	adiw	r24, 0x01	; 1
     962:	0e 94 c9 08 	call	0x1192	; 0x1192 <vTaskInternalSetTimeOutState>
     966:	ee 24       	eor	r14, r14
     968:	e3 94       	inc	r14
     96a:	0f 90       	pop	r0
     96c:	0f be       	out	0x3f, r0	; 63
     96e:	0e 94 b8 06 	call	0xd70	; 0xd70 <vTaskSuspendAll>
     972:	0f b6       	in	r0, 0x3f	; 63
     974:	f8 94       	cli
     976:	0f 92       	push	r0
     978:	f8 01       	movw	r30, r16
     97a:	85 8d       	ldd	r24, Z+29	; 0x1d
     97c:	8f 3f       	cpi	r24, 0xFF	; 255
     97e:	09 f4       	brne	.+2      	; 0x982 <xQueueReceive+0xa0>
     980:	15 8e       	std	Z+29, r1	; 0x1d
     982:	f8 01       	movw	r30, r16
     984:	86 8d       	ldd	r24, Z+30	; 0x1e
     986:	8f 3f       	cpi	r24, 0xFF	; 255
     988:	09 f4       	brne	.+2      	; 0x98c <xQueueReceive+0xaa>
     98a:	16 8e       	std	Z+30, r1	; 0x1e
     98c:	0f 90       	pop	r0
     98e:	0f be       	out	0x3f, r0	; 63
     990:	be 01       	movw	r22, r28
     992:	6c 5f       	subi	r22, 0xFC	; 252
     994:	7f 4f       	sbci	r23, 0xFF	; 255
     996:	ce 01       	movw	r24, r28
     998:	01 96       	adiw	r24, 0x01	; 1
     99a:	0e 94 d4 08 	call	0x11a8	; 0x11a8 <xTaskCheckForTimeOut>
     99e:	81 11       	cpse	r24, r1
     9a0:	1a c0       	rjmp	.+52     	; 0x9d6 <xQueueReceive+0xf4>
     9a2:	c8 01       	movw	r24, r16
     9a4:	0e 94 60 02 	call	0x4c0	; 0x4c0 <prvIsQueueEmpty>
     9a8:	88 23       	and	r24, r24
     9aa:	79 f0       	breq	.+30     	; 0x9ca <xQueueReceive+0xe8>
     9ac:	6c 81       	ldd	r22, Y+4	; 0x04
     9ae:	7d 81       	ldd	r23, Y+5	; 0x05
     9b0:	c6 01       	movw	r24, r12
     9b2:	0e 94 6f 08 	call	0x10de	; 0x10de <vTaskPlaceOnEventList>
     9b6:	c8 01       	movw	r24, r16
     9b8:	0e 94 e4 02 	call	0x5c8	; 0x5c8 <prvUnlockQueue>
     9bc:	0e 94 76 07 	call	0xeec	; 0xeec <xTaskResumeAll>
     9c0:	81 11       	cpse	r24, r1
     9c2:	a7 cf       	rjmp	.-178    	; 0x912 <xQueueReceive+0x30>
     9c4:	0e 94 6d 01 	call	0x2da	; 0x2da <vPortYield>
     9c8:	a4 cf       	rjmp	.-184    	; 0x912 <xQueueReceive+0x30>
     9ca:	c8 01       	movw	r24, r16
     9cc:	0e 94 e4 02 	call	0x5c8	; 0x5c8 <prvUnlockQueue>
     9d0:	0e 94 76 07 	call	0xeec	; 0xeec <xTaskResumeAll>
     9d4:	9e cf       	rjmp	.-196    	; 0x912 <xQueueReceive+0x30>
     9d6:	c8 01       	movw	r24, r16
     9d8:	0e 94 e4 02 	call	0x5c8	; 0x5c8 <prvUnlockQueue>
     9dc:	0e 94 76 07 	call	0xeec	; 0xeec <xTaskResumeAll>
     9e0:	c8 01       	movw	r24, r16
     9e2:	0e 94 60 02 	call	0x4c0	; 0x4c0 <prvIsQueueEmpty>
     9e6:	88 23       	and	r24, r24
     9e8:	09 f4       	brne	.+2      	; 0x9ec <xQueueReceive+0x10a>
     9ea:	93 cf       	rjmp	.-218    	; 0x912 <xQueueReceive+0x30>
     9ec:	80 e0       	ldi	r24, 0x00	; 0
     9ee:	25 96       	adiw	r28, 0x05	; 5
     9f0:	cd bf       	out	0x3d, r28	; 61
     9f2:	de bf       	out	0x3e, r29	; 62
     9f4:	df 91       	pop	r29
     9f6:	cf 91       	pop	r28
     9f8:	1f 91       	pop	r17
     9fa:	0f 91       	pop	r16
     9fc:	ff 90       	pop	r15
     9fe:	ef 90       	pop	r14
     a00:	df 90       	pop	r13
     a02:	cf 90       	pop	r12
     a04:	bf 90       	pop	r11
     a06:	af 90       	pop	r10
     a08:	08 95       	ret

00000a0a <prvResetNextTaskUnblockTime>:
     a0a:	e0 91 8a 30 	lds	r30, 0x308A	; 0x80308a <pxDelayedTaskList>
     a0e:	f0 91 8b 30 	lds	r31, 0x308B	; 0x80308b <pxDelayedTaskList+0x1>
     a12:	80 81       	ld	r24, Z
     a14:	81 11       	cpse	r24, r1
     a16:	07 c0       	rjmp	.+14     	; 0xa26 <prvResetNextTaskUnblockTime+0x1c>
     a18:	8f ef       	ldi	r24, 0xFF	; 255
     a1a:	9f ef       	ldi	r25, 0xFF	; 255
     a1c:	80 93 6b 30 	sts	0x306B, r24	; 0x80306b <xNextTaskUnblockTime>
     a20:	90 93 6c 30 	sts	0x306C, r25	; 0x80306c <xNextTaskUnblockTime+0x1>
     a24:	08 95       	ret
     a26:	e0 91 8a 30 	lds	r30, 0x308A	; 0x80308a <pxDelayedTaskList>
     a2a:	f0 91 8b 30 	lds	r31, 0x308B	; 0x80308b <pxDelayedTaskList+0x1>
     a2e:	05 80       	ldd	r0, Z+5	; 0x05
     a30:	f6 81       	ldd	r31, Z+6	; 0x06
     a32:	e0 2d       	mov	r30, r0
     a34:	06 80       	ldd	r0, Z+6	; 0x06
     a36:	f7 81       	ldd	r31, Z+7	; 0x07
     a38:	e0 2d       	mov	r30, r0
     a3a:	82 81       	ldd	r24, Z+2	; 0x02
     a3c:	93 81       	ldd	r25, Z+3	; 0x03
     a3e:	80 93 6b 30 	sts	0x306B, r24	; 0x80306b <xNextTaskUnblockTime>
     a42:	90 93 6c 30 	sts	0x306C, r25	; 0x80306c <xNextTaskUnblockTime+0x1>
     a46:	08 95       	ret

00000a48 <prvIdleTask>:
     a48:	ce e9       	ldi	r28, 0x9E	; 158
     a4a:	d0 e3       	ldi	r29, 0x30	; 48
     a4c:	88 81       	ld	r24, Y
     a4e:	82 30       	cpi	r24, 0x02	; 2
     a50:	e8 f3       	brcs	.-6      	; 0xa4c <prvIdleTask+0x4>
     a52:	0e 94 6d 01 	call	0x2da	; 0x2da <vPortYield>
     a56:	fa cf       	rjmp	.-12     	; 0xa4c <prvIdleTask+0x4>

00000a58 <prvAddCurrentTaskToDelayedList>:
     a58:	ff 92       	push	r15
     a5a:	0f 93       	push	r16
     a5c:	1f 93       	push	r17
     a5e:	cf 93       	push	r28
     a60:	df 93       	push	r29
     a62:	ec 01       	movw	r28, r24
     a64:	f6 2e       	mov	r15, r22
     a66:	00 91 73 30 	lds	r16, 0x3073	; 0x803073 <xTickCount>
     a6a:	10 91 74 30 	lds	r17, 0x3074	; 0x803074 <xTickCount+0x1>
     a6e:	80 91 c2 30 	lds	r24, 0x30C2	; 0x8030c2 <pxCurrentTCB>
     a72:	90 91 c3 30 	lds	r25, 0x30C3	; 0x8030c3 <pxCurrentTCB+0x1>
     a76:	02 96       	adiw	r24, 0x02	; 2
     a78:	0e 94 00 01 	call	0x200	; 0x200 <uxListRemove>
     a7c:	cf 3f       	cpi	r28, 0xFF	; 255
     a7e:	8f ef       	ldi	r24, 0xFF	; 255
     a80:	d8 07       	cpc	r29, r24
     a82:	69 f4       	brne	.+26     	; 0xa9e <prvAddCurrentTaskToDelayedList+0x46>
     a84:	ff 20       	and	r15, r15
     a86:	59 f0       	breq	.+22     	; 0xa9e <prvAddCurrentTaskToDelayedList+0x46>
     a88:	60 91 c2 30 	lds	r22, 0x30C2	; 0x8030c2 <pxCurrentTCB>
     a8c:	70 91 c3 30 	lds	r23, 0x30C3	; 0x8030c3 <pxCurrentTCB+0x1>
     a90:	6e 5f       	subi	r22, 0xFE	; 254
     a92:	7f 4f       	sbci	r23, 0xFF	; 255
     a94:	86 e7       	ldi	r24, 0x76	; 118
     a96:	90 e3       	ldi	r25, 0x30	; 48
     a98:	0e 94 ae 00 	call	0x15c	; 0x15c <vListInsertEnd>
     a9c:	2f c0       	rjmp	.+94     	; 0xafc <prvAddCurrentTaskToDelayedList+0xa4>
     a9e:	c0 0f       	add	r28, r16
     aa0:	d1 1f       	adc	r29, r17
     aa2:	e0 91 c2 30 	lds	r30, 0x30C2	; 0x8030c2 <pxCurrentTCB>
     aa6:	f0 91 c3 30 	lds	r31, 0x30C3	; 0x8030c3 <pxCurrentTCB+0x1>
     aaa:	c2 83       	std	Z+2, r28	; 0x02
     aac:	d3 83       	std	Z+3, r29	; 0x03
     aae:	c0 17       	cp	r28, r16
     ab0:	d1 07       	cpc	r29, r17
     ab2:	68 f4       	brcc	.+26     	; 0xace <prvAddCurrentTaskToDelayedList+0x76>
     ab4:	60 91 c2 30 	lds	r22, 0x30C2	; 0x8030c2 <pxCurrentTCB>
     ab8:	70 91 c3 30 	lds	r23, 0x30C3	; 0x8030c3 <pxCurrentTCB+0x1>
     abc:	80 91 88 30 	lds	r24, 0x3088	; 0x803088 <pxOverflowDelayedTaskList>
     ac0:	90 91 89 30 	lds	r25, 0x3089	; 0x803089 <pxOverflowDelayedTaskList+0x1>
     ac4:	6e 5f       	subi	r22, 0xFE	; 254
     ac6:	7f 4f       	sbci	r23, 0xFF	; 255
     ac8:	0e 94 cf 00 	call	0x19e	; 0x19e <vListInsert>
     acc:	17 c0       	rjmp	.+46     	; 0xafc <prvAddCurrentTaskToDelayedList+0xa4>
     ace:	60 91 c2 30 	lds	r22, 0x30C2	; 0x8030c2 <pxCurrentTCB>
     ad2:	70 91 c3 30 	lds	r23, 0x30C3	; 0x8030c3 <pxCurrentTCB+0x1>
     ad6:	80 91 8a 30 	lds	r24, 0x308A	; 0x80308a <pxDelayedTaskList>
     ada:	90 91 8b 30 	lds	r25, 0x308B	; 0x80308b <pxDelayedTaskList+0x1>
     ade:	6e 5f       	subi	r22, 0xFE	; 254
     ae0:	7f 4f       	sbci	r23, 0xFF	; 255
     ae2:	0e 94 cf 00 	call	0x19e	; 0x19e <vListInsert>
     ae6:	80 91 6b 30 	lds	r24, 0x306B	; 0x80306b <xNextTaskUnblockTime>
     aea:	90 91 6c 30 	lds	r25, 0x306C	; 0x80306c <xNextTaskUnblockTime+0x1>
     aee:	c8 17       	cp	r28, r24
     af0:	d9 07       	cpc	r29, r25
     af2:	20 f4       	brcc	.+8      	; 0xafc <prvAddCurrentTaskToDelayedList+0xa4>
     af4:	c0 93 6b 30 	sts	0x306B, r28	; 0x80306b <xNextTaskUnblockTime>
     af8:	d0 93 6c 30 	sts	0x306C, r29	; 0x80306c <xNextTaskUnblockTime+0x1>
     afc:	df 91       	pop	r29
     afe:	cf 91       	pop	r28
     b00:	1f 91       	pop	r17
     b02:	0f 91       	pop	r16
     b04:	ff 90       	pop	r15
     b06:	08 95       	ret

00000b08 <xTaskCreate>:
     b08:	4f 92       	push	r4
     b0a:	5f 92       	push	r5
     b0c:	6f 92       	push	r6
     b0e:	7f 92       	push	r7
     b10:	8f 92       	push	r8
     b12:	9f 92       	push	r9
     b14:	af 92       	push	r10
     b16:	bf 92       	push	r11
     b18:	cf 92       	push	r12
     b1a:	df 92       	push	r13
     b1c:	ef 92       	push	r14
     b1e:	ff 92       	push	r15
     b20:	0f 93       	push	r16
     b22:	cf 93       	push	r28
     b24:	df 93       	push	r29
     b26:	4c 01       	movw	r8, r24
     b28:	6b 01       	movw	r12, r22
     b2a:	5a 01       	movw	r10, r20
     b2c:	29 01       	movw	r4, r18
     b2e:	ca 01       	movw	r24, r20
     b30:	0e 94 2a 02 	call	0x454	; 0x454 <pvPortMalloc>
     b34:	3c 01       	movw	r6, r24
     b36:	89 2b       	or	r24, r25
     b38:	09 f4       	brne	.+2      	; 0xb3c <xTaskCreate+0x34>
     b3a:	df c0       	rjmp	.+446    	; 0xcfa <xTaskCreate+0x1f2>
     b3c:	88 e2       	ldi	r24, 0x28	; 40
     b3e:	90 e0       	ldi	r25, 0x00	; 0
     b40:	0e 94 2a 02 	call	0x454	; 0x454 <pvPortMalloc>
     b44:	ec 01       	movw	r28, r24
     b46:	89 2b       	or	r24, r25
     b48:	71 f0       	breq	.+28     	; 0xb66 <xTaskCreate+0x5e>
     b4a:	6f 8a       	std	Y+23, r6	; 0x17
     b4c:	78 8e       	std	Y+24, r7	; 0x18
     b4e:	81 e0       	ldi	r24, 0x01	; 1
     b50:	a8 1a       	sub	r10, r24
     b52:	b1 08       	sbc	r11, r1
     b54:	6a 0c       	add	r6, r10
     b56:	7b 1c       	adc	r7, r11
     b58:	d6 01       	movw	r26, r12
     b5a:	8c 91       	ld	r24, X
     b5c:	89 8f       	std	Y+25, r24	; 0x19
     b5e:	8c 91       	ld	r24, X
     b60:	81 11       	cpse	r24, r1
     b62:	05 c0       	rjmp	.+10     	; 0xb6e <xTaskCreate+0x66>
     b64:	18 c0       	rjmp	.+48     	; 0xb96 <xTaskCreate+0x8e>
     b66:	c3 01       	movw	r24, r6
     b68:	0e 94 5f 02 	call	0x4be	; 0x4be <vPortFree>
     b6c:	c6 c0       	rjmp	.+396    	; 0xcfa <xTaskCreate+0x1f2>
     b6e:	ae 01       	movw	r20, r28
     b70:	46 5e       	subi	r20, 0xE6	; 230
     b72:	5f 4f       	sbci	r21, 0xFF	; 255
     b74:	f6 01       	movw	r30, r12
     b76:	31 96       	adiw	r30, 0x01	; 1
     b78:	b8 e0       	ldi	r27, 0x08	; 8
     b7a:	cb 0e       	add	r12, r27
     b7c:	d1 1c       	adc	r13, r1
     b7e:	cf 01       	movw	r24, r30
     b80:	21 91       	ld	r18, Z+
     b82:	da 01       	movw	r26, r20
     b84:	2d 93       	st	X+, r18
     b86:	ad 01       	movw	r20, r26
     b88:	dc 01       	movw	r26, r24
     b8a:	8c 91       	ld	r24, X
     b8c:	88 23       	and	r24, r24
     b8e:	19 f0       	breq	.+6      	; 0xb96 <xTaskCreate+0x8e>
     b90:	ec 15       	cp	r30, r12
     b92:	fd 05       	cpc	r31, r13
     b94:	a1 f7       	brne	.-24     	; 0xb7e <xTaskCreate+0x76>
     b96:	18 a2       	std	Y+32, r1	; 0x20
     b98:	04 30       	cpi	r16, 0x04	; 4
     b9a:	08 f0       	brcs	.+2      	; 0xb9e <xTaskCreate+0x96>
     b9c:	03 e0       	ldi	r16, 0x03	; 3
     b9e:	0e 8b       	std	Y+22, r16	; 0x16
     ba0:	09 a3       	std	Y+33, r16	; 0x21
     ba2:	1a a2       	std	Y+34, r1	; 0x22
     ba4:	6e 01       	movw	r12, r28
     ba6:	b2 e0       	ldi	r27, 0x02	; 2
     ba8:	cb 0e       	add	r12, r27
     baa:	d1 1c       	adc	r13, r1
     bac:	c6 01       	movw	r24, r12
     bae:	0e 94 aa 00 	call	0x154	; 0x154 <vListInitialiseItem>
     bb2:	ce 01       	movw	r24, r28
     bb4:	0c 96       	adiw	r24, 0x0c	; 12
     bb6:	0e 94 aa 00 	call	0x154	; 0x154 <vListInitialiseItem>
     bba:	c8 87       	std	Y+8, r28	; 0x08
     bbc:	d9 87       	std	Y+9, r29	; 0x09
     bbe:	84 e0       	ldi	r24, 0x04	; 4
     bc0:	90 e0       	ldi	r25, 0x00	; 0
     bc2:	80 1b       	sub	r24, r16
     bc4:	91 09       	sbc	r25, r1
     bc6:	8c 87       	std	Y+12, r24	; 0x0c
     bc8:	9d 87       	std	Y+13, r25	; 0x0d
     bca:	ca 8b       	std	Y+18, r28	; 0x12
     bcc:	db 8b       	std	Y+19, r29	; 0x13
     bce:	1b a2       	std	Y+35, r1	; 0x23
     bd0:	1c a2       	std	Y+36, r1	; 0x24
     bd2:	1d a2       	std	Y+37, r1	; 0x25
     bd4:	1e a2       	std	Y+38, r1	; 0x26
     bd6:	1f a2       	std	Y+39, r1	; 0x27
     bd8:	a2 01       	movw	r20, r4
     bda:	b4 01       	movw	r22, r8
     bdc:	c3 01       	movw	r24, r6
     bde:	0e 94 27 01 	call	0x24e	; 0x24e <pxPortInitialiseStack>
     be2:	88 83       	st	Y, r24
     be4:	99 83       	std	Y+1, r25	; 0x01
     be6:	e1 14       	cp	r14, r1
     be8:	f1 04       	cpc	r15, r1
     bea:	19 f0       	breq	.+6      	; 0xbf2 <xTaskCreate+0xea>
     bec:	f7 01       	movw	r30, r14
     bee:	c0 83       	st	Z, r28
     bf0:	d1 83       	std	Z+1, r29	; 0x01
     bf2:	0f b6       	in	r0, 0x3f	; 63
     bf4:	f8 94       	cli
     bf6:	0f 92       	push	r0
     bf8:	80 91 75 30 	lds	r24, 0x3075	; 0x803075 <uxCurrentNumberOfTasks>
     bfc:	8f 5f       	subi	r24, 0xFF	; 255
     bfe:	80 93 75 30 	sts	0x3075, r24	; 0x803075 <uxCurrentNumberOfTasks>
     c02:	80 91 c2 30 	lds	r24, 0x30C2	; 0x8030c2 <pxCurrentTCB>
     c06:	90 91 c3 30 	lds	r25, 0x30C3	; 0x8030c3 <pxCurrentTCB+0x1>
     c0a:	89 2b       	or	r24, r25
     c0c:	a9 f5       	brne	.+106    	; 0xc78 <xTaskCreate+0x170>
     c0e:	c0 93 c2 30 	sts	0x30C2, r28	; 0x8030c2 <pxCurrentTCB>
     c12:	d0 93 c3 30 	sts	0x30C3, r29	; 0x8030c3 <pxCurrentTCB+0x1>
     c16:	80 91 75 30 	lds	r24, 0x3075	; 0x803075 <uxCurrentNumberOfTasks>
     c1a:	81 30       	cpi	r24, 0x01	; 1
     c1c:	e9 f5       	brne	.+122    	; 0xc98 <xTaskCreate+0x190>
     c1e:	8e e9       	ldi	r24, 0x9E	; 158
     c20:	90 e3       	ldi	r25, 0x30	; 48
     c22:	0e 94 9c 00 	call	0x138	; 0x138 <vListInitialise>
     c26:	87 ea       	ldi	r24, 0xA7	; 167
     c28:	90 e3       	ldi	r25, 0x30	; 48
     c2a:	0e 94 9c 00 	call	0x138	; 0x138 <vListInitialise>
     c2e:	80 eb       	ldi	r24, 0xB0	; 176
     c30:	90 e3       	ldi	r25, 0x30	; 48
     c32:	0e 94 9c 00 	call	0x138	; 0x138 <vListInitialise>
     c36:	89 eb       	ldi	r24, 0xB9	; 185
     c38:	90 e3       	ldi	r25, 0x30	; 48
     c3a:	0e 94 9c 00 	call	0x138	; 0x138 <vListInitialise>
     c3e:	85 e9       	ldi	r24, 0x95	; 149
     c40:	90 e3       	ldi	r25, 0x30	; 48
     c42:	0e 94 9c 00 	call	0x138	; 0x138 <vListInitialise>
     c46:	8c e8       	ldi	r24, 0x8C	; 140
     c48:	90 e3       	ldi	r25, 0x30	; 48
     c4a:	0e 94 9c 00 	call	0x138	; 0x138 <vListInitialise>
     c4e:	8f e7       	ldi	r24, 0x7F	; 127
     c50:	90 e3       	ldi	r25, 0x30	; 48
     c52:	0e 94 9c 00 	call	0x138	; 0x138 <vListInitialise>
     c56:	86 e7       	ldi	r24, 0x76	; 118
     c58:	90 e3       	ldi	r25, 0x30	; 48
     c5a:	0e 94 9c 00 	call	0x138	; 0x138 <vListInitialise>
     c5e:	85 e9       	ldi	r24, 0x95	; 149
     c60:	90 e3       	ldi	r25, 0x30	; 48
     c62:	80 93 8a 30 	sts	0x308A, r24	; 0x80308a <pxDelayedTaskList>
     c66:	90 93 8b 30 	sts	0x308B, r25	; 0x80308b <pxDelayedTaskList+0x1>
     c6a:	8c e8       	ldi	r24, 0x8C	; 140
     c6c:	90 e3       	ldi	r25, 0x30	; 48
     c6e:	80 93 88 30 	sts	0x3088, r24	; 0x803088 <pxOverflowDelayedTaskList>
     c72:	90 93 89 30 	sts	0x3089, r25	; 0x803089 <pxOverflowDelayedTaskList+0x1>
     c76:	10 c0       	rjmp	.+32     	; 0xc98 <xTaskCreate+0x190>
     c78:	80 91 71 30 	lds	r24, 0x3071	; 0x803071 <xSchedulerRunning>
     c7c:	81 11       	cpse	r24, r1
     c7e:	0c c0       	rjmp	.+24     	; 0xc98 <xTaskCreate+0x190>
     c80:	e0 91 c2 30 	lds	r30, 0x30C2	; 0x8030c2 <pxCurrentTCB>
     c84:	f0 91 c3 30 	lds	r31, 0x30C3	; 0x8030c3 <pxCurrentTCB+0x1>
     c88:	96 89       	ldd	r25, Z+22	; 0x16
     c8a:	8e 89       	ldd	r24, Y+22	; 0x16
     c8c:	89 17       	cp	r24, r25
     c8e:	20 f0       	brcs	.+8      	; 0xc98 <xTaskCreate+0x190>
     c90:	c0 93 c2 30 	sts	0x30C2, r28	; 0x8030c2 <pxCurrentTCB>
     c94:	d0 93 c3 30 	sts	0x30C3, r29	; 0x8030c3 <pxCurrentTCB+0x1>
     c98:	80 91 6d 30 	lds	r24, 0x306D	; 0x80306d <uxTaskNumber>
     c9c:	8f 5f       	subi	r24, 0xFF	; 255
     c9e:	80 93 6d 30 	sts	0x306D, r24	; 0x80306d <uxTaskNumber>
     ca2:	8e 89       	ldd	r24, Y+22	; 0x16
     ca4:	90 91 72 30 	lds	r25, 0x3072	; 0x803072 <uxTopReadyPriority>
     ca8:	98 17       	cp	r25, r24
     caa:	10 f4       	brcc	.+4      	; 0xcb0 <xTaskCreate+0x1a8>
     cac:	80 93 72 30 	sts	0x3072, r24	; 0x803072 <uxTopReadyPriority>
     cb0:	90 e0       	ldi	r25, 0x00	; 0
     cb2:	9c 01       	movw	r18, r24
     cb4:	22 0f       	add	r18, r18
     cb6:	33 1f       	adc	r19, r19
     cb8:	22 0f       	add	r18, r18
     cba:	33 1f       	adc	r19, r19
     cbc:	22 0f       	add	r18, r18
     cbe:	33 1f       	adc	r19, r19
     cc0:	82 0f       	add	r24, r18
     cc2:	93 1f       	adc	r25, r19
     cc4:	b6 01       	movw	r22, r12
     cc6:	82 56       	subi	r24, 0x62	; 98
     cc8:	9f 4c       	sbci	r25, 0xCF	; 207
     cca:	0e 94 ae 00 	call	0x15c	; 0x15c <vListInsertEnd>
     cce:	0f 90       	pop	r0
     cd0:	0f be       	out	0x3f, r0	; 63
     cd2:	80 91 71 30 	lds	r24, 0x3071	; 0x803071 <xSchedulerRunning>
     cd6:	88 23       	and	r24, r24
     cd8:	61 f0       	breq	.+24     	; 0xcf2 <xTaskCreate+0x1ea>
     cda:	e0 91 c2 30 	lds	r30, 0x30C2	; 0x8030c2 <pxCurrentTCB>
     cde:	f0 91 c3 30 	lds	r31, 0x30C3	; 0x8030c3 <pxCurrentTCB+0x1>
     ce2:	96 89       	ldd	r25, Z+22	; 0x16
     ce4:	8e 89       	ldd	r24, Y+22	; 0x16
     ce6:	98 17       	cp	r25, r24
     ce8:	30 f4       	brcc	.+12     	; 0xcf6 <xTaskCreate+0x1ee>
     cea:	0e 94 6d 01 	call	0x2da	; 0x2da <vPortYield>
     cee:	81 e0       	ldi	r24, 0x01	; 1
     cf0:	05 c0       	rjmp	.+10     	; 0xcfc <xTaskCreate+0x1f4>
     cf2:	81 e0       	ldi	r24, 0x01	; 1
     cf4:	03 c0       	rjmp	.+6      	; 0xcfc <xTaskCreate+0x1f4>
     cf6:	81 e0       	ldi	r24, 0x01	; 1
     cf8:	01 c0       	rjmp	.+2      	; 0xcfc <xTaskCreate+0x1f4>
     cfa:	8f ef       	ldi	r24, 0xFF	; 255
     cfc:	df 91       	pop	r29
     cfe:	cf 91       	pop	r28
     d00:	0f 91       	pop	r16
     d02:	ff 90       	pop	r15
     d04:	ef 90       	pop	r14
     d06:	df 90       	pop	r13
     d08:	cf 90       	pop	r12
     d0a:	bf 90       	pop	r11
     d0c:	af 90       	pop	r10
     d0e:	9f 90       	pop	r9
     d10:	8f 90       	pop	r8
     d12:	7f 90       	pop	r7
     d14:	6f 90       	pop	r6
     d16:	5f 90       	pop	r5
     d18:	4f 90       	pop	r4
     d1a:	08 95       	ret

00000d1c <vTaskStartScheduler>:
     d1c:	ef 92       	push	r14
     d1e:	ff 92       	push	r15
     d20:	0f 93       	push	r16
     d22:	0f 2e       	mov	r0, r31
     d24:	f9 e6       	ldi	r31, 0x69	; 105
     d26:	ef 2e       	mov	r14, r31
     d28:	f0 e3       	ldi	r31, 0x30	; 48
     d2a:	ff 2e       	mov	r15, r31
     d2c:	f0 2d       	mov	r31, r0
     d2e:	00 e0       	ldi	r16, 0x00	; 0
     d30:	20 e0       	ldi	r18, 0x00	; 0
     d32:	30 e0       	ldi	r19, 0x00	; 0
     d34:	43 e7       	ldi	r20, 0x73	; 115
     d36:	50 e0       	ldi	r21, 0x00	; 0
     d38:	6e e7       	ldi	r22, 0x7E	; 126
     d3a:	7c e5       	ldi	r23, 0x5C	; 92
     d3c:	84 e2       	ldi	r24, 0x24	; 36
     d3e:	95 e0       	ldi	r25, 0x05	; 5
     d40:	0e 94 84 05 	call	0xb08	; 0xb08 <xTaskCreate>
     d44:	81 30       	cpi	r24, 0x01	; 1
     d46:	81 f4       	brne	.+32     	; 0xd68 <vTaskStartScheduler+0x4c>
     d48:	f8 94       	cli
     d4a:	8f ef       	ldi	r24, 0xFF	; 255
     d4c:	9f ef       	ldi	r25, 0xFF	; 255
     d4e:	80 93 6b 30 	sts	0x306B, r24	; 0x80306b <xNextTaskUnblockTime>
     d52:	90 93 6c 30 	sts	0x306C, r25	; 0x80306c <xNextTaskUnblockTime+0x1>
     d56:	81 e0       	ldi	r24, 0x01	; 1
     d58:	80 93 71 30 	sts	0x3071, r24	; 0x803071 <xSchedulerRunning>
     d5c:	10 92 73 30 	sts	0x3073, r1	; 0x803073 <xTickCount>
     d60:	10 92 74 30 	sts	0x3074, r1	; 0x803074 <xTickCount+0x1>
     d64:	0e 94 38 01 	call	0x270	; 0x270 <xPortStartScheduler>
     d68:	0f 91       	pop	r16
     d6a:	ff 90       	pop	r15
     d6c:	ef 90       	pop	r14
     d6e:	08 95       	ret

00000d70 <vTaskSuspendAll>:
     d70:	80 91 68 30 	lds	r24, 0x3068	; 0x803068 <uxSchedulerSuspended>
     d74:	8f 5f       	subi	r24, 0xFF	; 255
     d76:	80 93 68 30 	sts	0x3068, r24	; 0x803068 <uxSchedulerSuspended>
     d7a:	08 95       	ret

00000d7c <xTaskIncrementTick>:
     d7c:	df 92       	push	r13
     d7e:	ef 92       	push	r14
     d80:	ff 92       	push	r15
     d82:	0f 93       	push	r16
     d84:	1f 93       	push	r17
     d86:	cf 93       	push	r28
     d88:	df 93       	push	r29
     d8a:	80 91 68 30 	lds	r24, 0x3068	; 0x803068 <uxSchedulerSuspended>
     d8e:	81 11       	cpse	r24, r1
     d90:	98 c0       	rjmp	.+304    	; 0xec2 <xTaskIncrementTick+0x146>
     d92:	e0 90 73 30 	lds	r14, 0x3073	; 0x803073 <xTickCount>
     d96:	f0 90 74 30 	lds	r15, 0x3074	; 0x803074 <xTickCount+0x1>
     d9a:	8f ef       	ldi	r24, 0xFF	; 255
     d9c:	e8 1a       	sub	r14, r24
     d9e:	f8 0a       	sbc	r15, r24
     da0:	e0 92 73 30 	sts	0x3073, r14	; 0x803073 <xTickCount>
     da4:	f0 92 74 30 	sts	0x3074, r15	; 0x803074 <xTickCount+0x1>
     da8:	e1 14       	cp	r14, r1
     daa:	f1 04       	cpc	r15, r1
     dac:	b9 f4       	brne	.+46     	; 0xddc <xTaskIncrementTick+0x60>
     dae:	80 91 8a 30 	lds	r24, 0x308A	; 0x80308a <pxDelayedTaskList>
     db2:	90 91 8b 30 	lds	r25, 0x308B	; 0x80308b <pxDelayedTaskList+0x1>
     db6:	20 91 88 30 	lds	r18, 0x3088	; 0x803088 <pxOverflowDelayedTaskList>
     dba:	30 91 89 30 	lds	r19, 0x3089	; 0x803089 <pxOverflowDelayedTaskList+0x1>
     dbe:	20 93 8a 30 	sts	0x308A, r18	; 0x80308a <pxDelayedTaskList>
     dc2:	30 93 8b 30 	sts	0x308B, r19	; 0x80308b <pxDelayedTaskList+0x1>
     dc6:	80 93 88 30 	sts	0x3088, r24	; 0x803088 <pxOverflowDelayedTaskList>
     dca:	90 93 89 30 	sts	0x3089, r25	; 0x803089 <pxOverflowDelayedTaskList+0x1>
     dce:	80 91 6e 30 	lds	r24, 0x306E	; 0x80306e <xNumOfOverflows>
     dd2:	8f 5f       	subi	r24, 0xFF	; 255
     dd4:	80 93 6e 30 	sts	0x306E, r24	; 0x80306e <xNumOfOverflows>
     dd8:	0e 94 05 05 	call	0xa0a	; 0xa0a <prvResetNextTaskUnblockTime>
     ddc:	80 91 6b 30 	lds	r24, 0x306B	; 0x80306b <xNextTaskUnblockTime>
     de0:	90 91 6c 30 	lds	r25, 0x306C	; 0x80306c <xNextTaskUnblockTime+0x1>
     de4:	e8 16       	cp	r14, r24
     de6:	f9 06       	cpc	r15, r25
     de8:	10 f4       	brcc	.+4      	; 0xdee <xTaskIncrementTick+0x72>
     dea:	d1 2c       	mov	r13, r1
     dec:	52 c0       	rjmp	.+164    	; 0xe92 <xTaskIncrementTick+0x116>
     dee:	d1 2c       	mov	r13, r1
     df0:	e0 91 8a 30 	lds	r30, 0x308A	; 0x80308a <pxDelayedTaskList>
     df4:	f0 91 8b 30 	lds	r31, 0x308B	; 0x80308b <pxDelayedTaskList+0x1>
     df8:	80 81       	ld	r24, Z
     dfa:	81 11       	cpse	r24, r1
     dfc:	07 c0       	rjmp	.+14     	; 0xe0c <xTaskIncrementTick+0x90>
     dfe:	8f ef       	ldi	r24, 0xFF	; 255
     e00:	9f ef       	ldi	r25, 0xFF	; 255
     e02:	80 93 6b 30 	sts	0x306B, r24	; 0x80306b <xNextTaskUnblockTime>
     e06:	90 93 6c 30 	sts	0x306C, r25	; 0x80306c <xNextTaskUnblockTime+0x1>
     e0a:	43 c0       	rjmp	.+134    	; 0xe92 <xTaskIncrementTick+0x116>
     e0c:	e0 91 8a 30 	lds	r30, 0x308A	; 0x80308a <pxDelayedTaskList>
     e10:	f0 91 8b 30 	lds	r31, 0x308B	; 0x80308b <pxDelayedTaskList+0x1>
     e14:	05 80       	ldd	r0, Z+5	; 0x05
     e16:	f6 81       	ldd	r31, Z+6	; 0x06
     e18:	e0 2d       	mov	r30, r0
     e1a:	c6 81       	ldd	r28, Z+6	; 0x06
     e1c:	d7 81       	ldd	r29, Z+7	; 0x07
     e1e:	8a 81       	ldd	r24, Y+2	; 0x02
     e20:	9b 81       	ldd	r25, Y+3	; 0x03
     e22:	e8 16       	cp	r14, r24
     e24:	f9 06       	cpc	r15, r25
     e26:	28 f4       	brcc	.+10     	; 0xe32 <xTaskIncrementTick+0xb6>
     e28:	80 93 6b 30 	sts	0x306B, r24	; 0x80306b <xNextTaskUnblockTime>
     e2c:	90 93 6c 30 	sts	0x306C, r25	; 0x80306c <xNextTaskUnblockTime+0x1>
     e30:	30 c0       	rjmp	.+96     	; 0xe92 <xTaskIncrementTick+0x116>
     e32:	8e 01       	movw	r16, r28
     e34:	0e 5f       	subi	r16, 0xFE	; 254
     e36:	1f 4f       	sbci	r17, 0xFF	; 255
     e38:	c8 01       	movw	r24, r16
     e3a:	0e 94 00 01 	call	0x200	; 0x200 <uxListRemove>
     e3e:	8c 89       	ldd	r24, Y+20	; 0x14
     e40:	9d 89       	ldd	r25, Y+21	; 0x15
     e42:	89 2b       	or	r24, r25
     e44:	21 f0       	breq	.+8      	; 0xe4e <xTaskIncrementTick+0xd2>
     e46:	ce 01       	movw	r24, r28
     e48:	0c 96       	adiw	r24, 0x0c	; 12
     e4a:	0e 94 00 01 	call	0x200	; 0x200 <uxListRemove>
     e4e:	8e 89       	ldd	r24, Y+22	; 0x16
     e50:	90 91 72 30 	lds	r25, 0x3072	; 0x803072 <uxTopReadyPriority>
     e54:	98 17       	cp	r25, r24
     e56:	10 f4       	brcc	.+4      	; 0xe5c <xTaskIncrementTick+0xe0>
     e58:	80 93 72 30 	sts	0x3072, r24	; 0x803072 <uxTopReadyPriority>
     e5c:	90 e0       	ldi	r25, 0x00	; 0
     e5e:	9c 01       	movw	r18, r24
     e60:	22 0f       	add	r18, r18
     e62:	33 1f       	adc	r19, r19
     e64:	22 0f       	add	r18, r18
     e66:	33 1f       	adc	r19, r19
     e68:	22 0f       	add	r18, r18
     e6a:	33 1f       	adc	r19, r19
     e6c:	82 0f       	add	r24, r18
     e6e:	93 1f       	adc	r25, r19
     e70:	b8 01       	movw	r22, r16
     e72:	82 56       	subi	r24, 0x62	; 98
     e74:	9f 4c       	sbci	r25, 0xCF	; 207
     e76:	0e 94 ae 00 	call	0x15c	; 0x15c <vListInsertEnd>
     e7a:	e0 91 c2 30 	lds	r30, 0x30C2	; 0x8030c2 <pxCurrentTCB>
     e7e:	f0 91 c3 30 	lds	r31, 0x30C3	; 0x8030c3 <pxCurrentTCB+0x1>
     e82:	9e 89       	ldd	r25, Y+22	; 0x16
     e84:	86 89       	ldd	r24, Z+22	; 0x16
     e86:	98 17       	cp	r25, r24
     e88:	08 f4       	brcc	.+2      	; 0xe8c <xTaskIncrementTick+0x110>
     e8a:	b2 cf       	rjmp	.-156    	; 0xdf0 <xTaskIncrementTick+0x74>
     e8c:	dd 24       	eor	r13, r13
     e8e:	d3 94       	inc	r13
     e90:	af cf       	rjmp	.-162    	; 0xdf0 <xTaskIncrementTick+0x74>
     e92:	e0 91 c2 30 	lds	r30, 0x30C2	; 0x8030c2 <pxCurrentTCB>
     e96:	f0 91 c3 30 	lds	r31, 0x30C3	; 0x8030c3 <pxCurrentTCB+0x1>
     e9a:	86 89       	ldd	r24, Z+22	; 0x16
     e9c:	90 e0       	ldi	r25, 0x00	; 0
     e9e:	fc 01       	movw	r30, r24
     ea0:	ee 0f       	add	r30, r30
     ea2:	ff 1f       	adc	r31, r31
     ea4:	ee 0f       	add	r30, r30
     ea6:	ff 1f       	adc	r31, r31
     ea8:	ee 0f       	add	r30, r30
     eaa:	ff 1f       	adc	r31, r31
     eac:	8e 0f       	add	r24, r30
     eae:	9f 1f       	adc	r25, r31
     eb0:	fc 01       	movw	r30, r24
     eb2:	e2 56       	subi	r30, 0x62	; 98
     eb4:	ff 4c       	sbci	r31, 0xCF	; 207
     eb6:	80 81       	ld	r24, Z
     eb8:	82 30       	cpi	r24, 0x02	; 2
     eba:	48 f0       	brcs	.+18     	; 0xece <xTaskIncrementTick+0x152>
     ebc:	dd 24       	eor	r13, r13
     ebe:	d3 94       	inc	r13
     ec0:	06 c0       	rjmp	.+12     	; 0xece <xTaskIncrementTick+0x152>
     ec2:	80 91 70 30 	lds	r24, 0x3070	; 0x803070 <uxPendedTicks>
     ec6:	8f 5f       	subi	r24, 0xFF	; 255
     ec8:	80 93 70 30 	sts	0x3070, r24	; 0x803070 <uxPendedTicks>
     ecc:	d1 2c       	mov	r13, r1
     ece:	80 91 6f 30 	lds	r24, 0x306F	; 0x80306f <xYieldPending>
     ed2:	88 23       	and	r24, r24
     ed4:	11 f0       	breq	.+4      	; 0xeda <xTaskIncrementTick+0x15e>
     ed6:	dd 24       	eor	r13, r13
     ed8:	d3 94       	inc	r13
     eda:	8d 2d       	mov	r24, r13
     edc:	df 91       	pop	r29
     ede:	cf 91       	pop	r28
     ee0:	1f 91       	pop	r17
     ee2:	0f 91       	pop	r16
     ee4:	ff 90       	pop	r15
     ee6:	ef 90       	pop	r14
     ee8:	df 90       	pop	r13
     eea:	08 95       	ret

00000eec <xTaskResumeAll>:
     eec:	df 92       	push	r13
     eee:	ef 92       	push	r14
     ef0:	ff 92       	push	r15
     ef2:	0f 93       	push	r16
     ef4:	1f 93       	push	r17
     ef6:	cf 93       	push	r28
     ef8:	df 93       	push	r29
     efa:	0f b6       	in	r0, 0x3f	; 63
     efc:	f8 94       	cli
     efe:	0f 92       	push	r0
     f00:	80 91 68 30 	lds	r24, 0x3068	; 0x803068 <uxSchedulerSuspended>
     f04:	81 50       	subi	r24, 0x01	; 1
     f06:	80 93 68 30 	sts	0x3068, r24	; 0x803068 <uxSchedulerSuspended>
     f0a:	80 91 68 30 	lds	r24, 0x3068	; 0x803068 <uxSchedulerSuspended>
     f0e:	81 11       	cpse	r24, r1
     f10:	5f c0       	rjmp	.+190    	; 0xfd0 <xTaskResumeAll+0xe4>
     f12:	80 91 75 30 	lds	r24, 0x3075	; 0x803075 <uxCurrentNumberOfTasks>
     f16:	81 11       	cpse	r24, r1
     f18:	33 c0       	rjmp	.+102    	; 0xf80 <xTaskResumeAll+0x94>
     f1a:	5d c0       	rjmp	.+186    	; 0xfd6 <xTaskResumeAll+0xea>
     f1c:	d7 01       	movw	r26, r14
     f1e:	15 96       	adiw	r26, 0x05	; 5
     f20:	ed 91       	ld	r30, X+
     f22:	fc 91       	ld	r31, X
     f24:	16 97       	sbiw	r26, 0x06	; 6
     f26:	c6 81       	ldd	r28, Z+6	; 0x06
     f28:	d7 81       	ldd	r29, Z+7	; 0x07
     f2a:	ce 01       	movw	r24, r28
     f2c:	0c 96       	adiw	r24, 0x0c	; 12
     f2e:	0e 94 00 01 	call	0x200	; 0x200 <uxListRemove>
     f32:	8e 01       	movw	r16, r28
     f34:	0e 5f       	subi	r16, 0xFE	; 254
     f36:	1f 4f       	sbci	r17, 0xFF	; 255
     f38:	c8 01       	movw	r24, r16
     f3a:	0e 94 00 01 	call	0x200	; 0x200 <uxListRemove>
     f3e:	8e 89       	ldd	r24, Y+22	; 0x16
     f40:	90 91 72 30 	lds	r25, 0x3072	; 0x803072 <uxTopReadyPriority>
     f44:	98 17       	cp	r25, r24
     f46:	10 f4       	brcc	.+4      	; 0xf4c <xTaskResumeAll+0x60>
     f48:	80 93 72 30 	sts	0x3072, r24	; 0x803072 <uxTopReadyPriority>
     f4c:	90 e0       	ldi	r25, 0x00	; 0
     f4e:	9c 01       	movw	r18, r24
     f50:	22 0f       	add	r18, r18
     f52:	33 1f       	adc	r19, r19
     f54:	22 0f       	add	r18, r18
     f56:	33 1f       	adc	r19, r19
     f58:	22 0f       	add	r18, r18
     f5a:	33 1f       	adc	r19, r19
     f5c:	82 0f       	add	r24, r18
     f5e:	93 1f       	adc	r25, r19
     f60:	b8 01       	movw	r22, r16
     f62:	82 56       	subi	r24, 0x62	; 98
     f64:	9f 4c       	sbci	r25, 0xCF	; 207
     f66:	0e 94 ae 00 	call	0x15c	; 0x15c <vListInsertEnd>
     f6a:	e0 91 c2 30 	lds	r30, 0x30C2	; 0x8030c2 <pxCurrentTCB>
     f6e:	f0 91 c3 30 	lds	r31, 0x30C3	; 0x8030c3 <pxCurrentTCB+0x1>
     f72:	9e 89       	ldd	r25, Y+22	; 0x16
     f74:	86 89       	ldd	r24, Z+22	; 0x16
     f76:	98 17       	cp	r25, r24
     f78:	68 f0       	brcs	.+26     	; 0xf94 <xTaskResumeAll+0xa8>
     f7a:	d0 92 6f 30 	sts	0x306F, r13	; 0x80306f <xYieldPending>
     f7e:	0a c0       	rjmp	.+20     	; 0xf94 <xTaskResumeAll+0xa8>
     f80:	c0 e0       	ldi	r28, 0x00	; 0
     f82:	d0 e0       	ldi	r29, 0x00	; 0
     f84:	0f 2e       	mov	r0, r31
     f86:	ff e7       	ldi	r31, 0x7F	; 127
     f88:	ef 2e       	mov	r14, r31
     f8a:	f0 e3       	ldi	r31, 0x30	; 48
     f8c:	ff 2e       	mov	r15, r31
     f8e:	f0 2d       	mov	r31, r0
     f90:	dd 24       	eor	r13, r13
     f92:	d3 94       	inc	r13
     f94:	f7 01       	movw	r30, r14
     f96:	80 81       	ld	r24, Z
     f98:	81 11       	cpse	r24, r1
     f9a:	c0 cf       	rjmp	.-128    	; 0xf1c <xTaskResumeAll+0x30>
     f9c:	cd 2b       	or	r28, r29
     f9e:	11 f0       	breq	.+4      	; 0xfa4 <xTaskResumeAll+0xb8>
     fa0:	0e 94 05 05 	call	0xa0a	; 0xa0a <prvResetNextTaskUnblockTime>
     fa4:	c0 91 70 30 	lds	r28, 0x3070	; 0x803070 <uxPendedTicks>
     fa8:	cc 23       	and	r28, r28
     faa:	51 f0       	breq	.+20     	; 0xfc0 <xTaskResumeAll+0xd4>
     fac:	d1 e0       	ldi	r29, 0x01	; 1
     fae:	0e 94 be 06 	call	0xd7c	; 0xd7c <xTaskIncrementTick>
     fb2:	81 11       	cpse	r24, r1
     fb4:	d0 93 6f 30 	sts	0x306F, r29	; 0x80306f <xYieldPending>
     fb8:	c1 50       	subi	r28, 0x01	; 1
     fba:	c9 f7       	brne	.-14     	; 0xfae <xTaskResumeAll+0xc2>
     fbc:	10 92 70 30 	sts	0x3070, r1	; 0x803070 <uxPendedTicks>
     fc0:	80 91 6f 30 	lds	r24, 0x306F	; 0x80306f <xYieldPending>
     fc4:	88 23       	and	r24, r24
     fc6:	31 f0       	breq	.+12     	; 0xfd4 <xTaskResumeAll+0xe8>
     fc8:	0e 94 6d 01 	call	0x2da	; 0x2da <vPortYield>
     fcc:	81 e0       	ldi	r24, 0x01	; 1
     fce:	03 c0       	rjmp	.+6      	; 0xfd6 <xTaskResumeAll+0xea>
     fd0:	80 e0       	ldi	r24, 0x00	; 0
     fd2:	01 c0       	rjmp	.+2      	; 0xfd6 <xTaskResumeAll+0xea>
     fd4:	80 e0       	ldi	r24, 0x00	; 0
     fd6:	0f 90       	pop	r0
     fd8:	0f be       	out	0x3f, r0	; 63
     fda:	df 91       	pop	r29
     fdc:	cf 91       	pop	r28
     fde:	1f 91       	pop	r17
     fe0:	0f 91       	pop	r16
     fe2:	ff 90       	pop	r15
     fe4:	ef 90       	pop	r14
     fe6:	df 90       	pop	r13
     fe8:	08 95       	ret

00000fea <vTaskDelay>:
     fea:	cf 93       	push	r28
     fec:	df 93       	push	r29
     fee:	ec 01       	movw	r28, r24
     ff0:	89 2b       	or	r24, r25
     ff2:	51 f0       	breq	.+20     	; 0x1008 <vTaskDelay+0x1e>
     ff4:	0e 94 b8 06 	call	0xd70	; 0xd70 <vTaskSuspendAll>
     ff8:	60 e0       	ldi	r22, 0x00	; 0
     ffa:	ce 01       	movw	r24, r28
     ffc:	0e 94 2c 05 	call	0xa58	; 0xa58 <prvAddCurrentTaskToDelayedList>
    1000:	0e 94 76 07 	call	0xeec	; 0xeec <xTaskResumeAll>
    1004:	81 11       	cpse	r24, r1
    1006:	02 c0       	rjmp	.+4      	; 0x100c <vTaskDelay+0x22>
    1008:	0e 94 6d 01 	call	0x2da	; 0x2da <vPortYield>
    100c:	df 91       	pop	r29
    100e:	cf 91       	pop	r28
    1010:	08 95       	ret

00001012 <vTaskSwitchContext>:
    1012:	80 91 68 30 	lds	r24, 0x3068	; 0x803068 <uxSchedulerSuspended>
    1016:	88 23       	and	r24, r24
    1018:	21 f0       	breq	.+8      	; 0x1022 <vTaskSwitchContext+0x10>
    101a:	81 e0       	ldi	r24, 0x01	; 1
    101c:	80 93 6f 30 	sts	0x306F, r24	; 0x80306f <xYieldPending>
    1020:	08 95       	ret
    1022:	10 92 6f 30 	sts	0x306F, r1	; 0x80306f <xYieldPending>
    1026:	20 91 72 30 	lds	r18, 0x3072	; 0x803072 <uxTopReadyPriority>
    102a:	82 2f       	mov	r24, r18
    102c:	90 e0       	ldi	r25, 0x00	; 0
    102e:	fc 01       	movw	r30, r24
    1030:	ee 0f       	add	r30, r30
    1032:	ff 1f       	adc	r31, r31
    1034:	ee 0f       	add	r30, r30
    1036:	ff 1f       	adc	r31, r31
    1038:	ee 0f       	add	r30, r30
    103a:	ff 1f       	adc	r31, r31
    103c:	e8 0f       	add	r30, r24
    103e:	f9 1f       	adc	r31, r25
    1040:	e2 56       	subi	r30, 0x62	; 98
    1042:	ff 4c       	sbci	r31, 0xCF	; 207
    1044:	30 81       	ld	r19, Z
    1046:	31 11       	cpse	r19, r1
    1048:	11 c0       	rjmp	.+34     	; 0x106c <vTaskSwitchContext+0x5a>
    104a:	21 50       	subi	r18, 0x01	; 1
    104c:	82 2f       	mov	r24, r18
    104e:	90 e0       	ldi	r25, 0x00	; 0
    1050:	fc 01       	movw	r30, r24
    1052:	ee 0f       	add	r30, r30
    1054:	ff 1f       	adc	r31, r31
    1056:	ee 0f       	add	r30, r30
    1058:	ff 1f       	adc	r31, r31
    105a:	ee 0f       	add	r30, r30
    105c:	ff 1f       	adc	r31, r31
    105e:	e8 0f       	add	r30, r24
    1060:	f9 1f       	adc	r31, r25
    1062:	e2 56       	subi	r30, 0x62	; 98
    1064:	ff 4c       	sbci	r31, 0xCF	; 207
    1066:	30 81       	ld	r19, Z
    1068:	33 23       	and	r19, r19
    106a:	79 f3       	breq	.-34     	; 0x104a <vTaskSwitchContext+0x38>
    106c:	ac 01       	movw	r20, r24
    106e:	44 0f       	add	r20, r20
    1070:	55 1f       	adc	r21, r21
    1072:	44 0f       	add	r20, r20
    1074:	55 1f       	adc	r21, r21
    1076:	44 0f       	add	r20, r20
    1078:	55 1f       	adc	r21, r21
    107a:	48 0f       	add	r20, r24
    107c:	59 1f       	adc	r21, r25
    107e:	da 01       	movw	r26, r20
    1080:	a2 56       	subi	r26, 0x62	; 98
    1082:	bf 4c       	sbci	r27, 0xCF	; 207
    1084:	11 96       	adiw	r26, 0x01	; 1
    1086:	ed 91       	ld	r30, X+
    1088:	fc 91       	ld	r31, X
    108a:	12 97       	sbiw	r26, 0x02	; 2
    108c:	02 80       	ldd	r0, Z+2	; 0x02
    108e:	f3 81       	ldd	r31, Z+3	; 0x03
    1090:	e0 2d       	mov	r30, r0
    1092:	11 96       	adiw	r26, 0x01	; 1
    1094:	ed 93       	st	X+, r30
    1096:	fc 93       	st	X, r31
    1098:	12 97       	sbiw	r26, 0x02	; 2
    109a:	4f 55       	subi	r20, 0x5F	; 95
    109c:	5f 4c       	sbci	r21, 0xCF	; 207
    109e:	e4 17       	cp	r30, r20
    10a0:	f5 07       	cpc	r31, r21
    10a2:	29 f4       	brne	.+10     	; 0x10ae <vTaskSwitchContext+0x9c>
    10a4:	42 81       	ldd	r20, Z+2	; 0x02
    10a6:	53 81       	ldd	r21, Z+3	; 0x03
    10a8:	fd 01       	movw	r30, r26
    10aa:	41 83       	std	Z+1, r20	; 0x01
    10ac:	52 83       	std	Z+2, r21	; 0x02
    10ae:	fc 01       	movw	r30, r24
    10b0:	ee 0f       	add	r30, r30
    10b2:	ff 1f       	adc	r31, r31
    10b4:	ee 0f       	add	r30, r30
    10b6:	ff 1f       	adc	r31, r31
    10b8:	ee 0f       	add	r30, r30
    10ba:	ff 1f       	adc	r31, r31
    10bc:	8e 0f       	add	r24, r30
    10be:	9f 1f       	adc	r25, r31
    10c0:	fc 01       	movw	r30, r24
    10c2:	e2 56       	subi	r30, 0x62	; 98
    10c4:	ff 4c       	sbci	r31, 0xCF	; 207
    10c6:	01 80       	ldd	r0, Z+1	; 0x01
    10c8:	f2 81       	ldd	r31, Z+2	; 0x02
    10ca:	e0 2d       	mov	r30, r0
    10cc:	86 81       	ldd	r24, Z+6	; 0x06
    10ce:	97 81       	ldd	r25, Z+7	; 0x07
    10d0:	80 93 c2 30 	sts	0x30C2, r24	; 0x8030c2 <pxCurrentTCB>
    10d4:	90 93 c3 30 	sts	0x30C3, r25	; 0x8030c3 <pxCurrentTCB+0x1>
    10d8:	20 93 72 30 	sts	0x3072, r18	; 0x803072 <uxTopReadyPriority>
    10dc:	08 95       	ret

000010de <vTaskPlaceOnEventList>:
    10de:	cf 93       	push	r28
    10e0:	df 93       	push	r29
    10e2:	eb 01       	movw	r28, r22
    10e4:	60 91 c2 30 	lds	r22, 0x30C2	; 0x8030c2 <pxCurrentTCB>
    10e8:	70 91 c3 30 	lds	r23, 0x30C3	; 0x8030c3 <pxCurrentTCB+0x1>
    10ec:	64 5f       	subi	r22, 0xF4	; 244
    10ee:	7f 4f       	sbci	r23, 0xFF	; 255
    10f0:	0e 94 cf 00 	call	0x19e	; 0x19e <vListInsert>
    10f4:	61 e0       	ldi	r22, 0x01	; 1
    10f6:	ce 01       	movw	r24, r28
    10f8:	0e 94 2c 05 	call	0xa58	; 0xa58 <prvAddCurrentTaskToDelayedList>
    10fc:	df 91       	pop	r29
    10fe:	cf 91       	pop	r28
    1100:	08 95       	ret

00001102 <xTaskRemoveFromEventList>:
    1102:	0f 93       	push	r16
    1104:	1f 93       	push	r17
    1106:	cf 93       	push	r28
    1108:	df 93       	push	r29
    110a:	dc 01       	movw	r26, r24
    110c:	15 96       	adiw	r26, 0x05	; 5
    110e:	ed 91       	ld	r30, X+
    1110:	fc 91       	ld	r31, X
    1112:	16 97       	sbiw	r26, 0x06	; 6
    1114:	c6 81       	ldd	r28, Z+6	; 0x06
    1116:	d7 81       	ldd	r29, Z+7	; 0x07
    1118:	8e 01       	movw	r16, r28
    111a:	04 5f       	subi	r16, 0xF4	; 244
    111c:	1f 4f       	sbci	r17, 0xFF	; 255
    111e:	c8 01       	movw	r24, r16
    1120:	0e 94 00 01 	call	0x200	; 0x200 <uxListRemove>
    1124:	80 91 68 30 	lds	r24, 0x3068	; 0x803068 <uxSchedulerSuspended>
    1128:	81 11       	cpse	r24, r1
    112a:	1c c0       	rjmp	.+56     	; 0x1164 <xTaskRemoveFromEventList+0x62>
    112c:	0a 50       	subi	r16, 0x0A	; 10
    112e:	11 09       	sbc	r17, r1
    1130:	c8 01       	movw	r24, r16
    1132:	0e 94 00 01 	call	0x200	; 0x200 <uxListRemove>
    1136:	8e 89       	ldd	r24, Y+22	; 0x16
    1138:	90 91 72 30 	lds	r25, 0x3072	; 0x803072 <uxTopReadyPriority>
    113c:	98 17       	cp	r25, r24
    113e:	10 f4       	brcc	.+4      	; 0x1144 <xTaskRemoveFromEventList+0x42>
    1140:	80 93 72 30 	sts	0x3072, r24	; 0x803072 <uxTopReadyPriority>
    1144:	90 e0       	ldi	r25, 0x00	; 0
    1146:	9c 01       	movw	r18, r24
    1148:	22 0f       	add	r18, r18
    114a:	33 1f       	adc	r19, r19
    114c:	22 0f       	add	r18, r18
    114e:	33 1f       	adc	r19, r19
    1150:	22 0f       	add	r18, r18
    1152:	33 1f       	adc	r19, r19
    1154:	82 0f       	add	r24, r18
    1156:	93 1f       	adc	r25, r19
    1158:	b8 01       	movw	r22, r16
    115a:	82 56       	subi	r24, 0x62	; 98
    115c:	9f 4c       	sbci	r25, 0xCF	; 207
    115e:	0e 94 ae 00 	call	0x15c	; 0x15c <vListInsertEnd>
    1162:	05 c0       	rjmp	.+10     	; 0x116e <xTaskRemoveFromEventList+0x6c>
    1164:	b8 01       	movw	r22, r16
    1166:	8f e7       	ldi	r24, 0x7F	; 127
    1168:	90 e3       	ldi	r25, 0x30	; 48
    116a:	0e 94 ae 00 	call	0x15c	; 0x15c <vListInsertEnd>
    116e:	e0 91 c2 30 	lds	r30, 0x30C2	; 0x8030c2 <pxCurrentTCB>
    1172:	f0 91 c3 30 	lds	r31, 0x30C3	; 0x8030c3 <pxCurrentTCB+0x1>
    1176:	9e 89       	ldd	r25, Y+22	; 0x16
    1178:	86 89       	ldd	r24, Z+22	; 0x16
    117a:	89 17       	cp	r24, r25
    117c:	20 f4       	brcc	.+8      	; 0x1186 <xTaskRemoveFromEventList+0x84>
    117e:	81 e0       	ldi	r24, 0x01	; 1
    1180:	80 93 6f 30 	sts	0x306F, r24	; 0x80306f <xYieldPending>
    1184:	01 c0       	rjmp	.+2      	; 0x1188 <xTaskRemoveFromEventList+0x86>
    1186:	80 e0       	ldi	r24, 0x00	; 0
    1188:	df 91       	pop	r29
    118a:	cf 91       	pop	r28
    118c:	1f 91       	pop	r17
    118e:	0f 91       	pop	r16
    1190:	08 95       	ret

00001192 <vTaskInternalSetTimeOutState>:
    1192:	20 91 6e 30 	lds	r18, 0x306E	; 0x80306e <xNumOfOverflows>
    1196:	fc 01       	movw	r30, r24
    1198:	20 83       	st	Z, r18
    119a:	20 91 73 30 	lds	r18, 0x3073	; 0x803073 <xTickCount>
    119e:	30 91 74 30 	lds	r19, 0x3074	; 0x803074 <xTickCount+0x1>
    11a2:	21 83       	std	Z+1, r18	; 0x01
    11a4:	32 83       	std	Z+2, r19	; 0x02
    11a6:	08 95       	ret

000011a8 <xTaskCheckForTimeOut>:
    11a8:	cf 93       	push	r28
    11aa:	df 93       	push	r29
    11ac:	0f b6       	in	r0, 0x3f	; 63
    11ae:	f8 94       	cli
    11b0:	0f 92       	push	r0
    11b2:	20 91 73 30 	lds	r18, 0x3073	; 0x803073 <xTickCount>
    11b6:	30 91 74 30 	lds	r19, 0x3074	; 0x803074 <xTickCount+0x1>
    11ba:	db 01       	movw	r26, r22
    11bc:	4d 91       	ld	r20, X+
    11be:	5c 91       	ld	r21, X
    11c0:	4f 3f       	cpi	r20, 0xFF	; 255
    11c2:	bf ef       	ldi	r27, 0xFF	; 255
    11c4:	5b 07       	cpc	r21, r27
    11c6:	f1 f0       	breq	.+60     	; 0x1204 <xTaskCheckForTimeOut+0x5c>
    11c8:	ec 01       	movw	r28, r24
    11ca:	e9 81       	ldd	r30, Y+1	; 0x01
    11cc:	fa 81       	ldd	r31, Y+2	; 0x02
    11ce:	a0 91 6e 30 	lds	r26, 0x306E	; 0x80306e <xNumOfOverflows>
    11d2:	b8 81       	ld	r27, Y
    11d4:	ba 17       	cp	r27, r26
    11d6:	19 f0       	breq	.+6      	; 0x11de <xTaskCheckForTimeOut+0x36>
    11d8:	2e 17       	cp	r18, r30
    11da:	3f 07       	cpc	r19, r31
    11dc:	a8 f4       	brcc	.+42     	; 0x1208 <xTaskCheckForTimeOut+0x60>
    11de:	2e 1b       	sub	r18, r30
    11e0:	3f 0b       	sbc	r19, r31
    11e2:	24 17       	cp	r18, r20
    11e4:	35 07       	cpc	r19, r21
    11e6:	48 f4       	brcc	.+18     	; 0x11fa <xTaskCheckForTimeOut+0x52>
    11e8:	fb 01       	movw	r30, r22
    11ea:	42 1b       	sub	r20, r18
    11ec:	53 0b       	sbc	r21, r19
    11ee:	40 83       	st	Z, r20
    11f0:	51 83       	std	Z+1, r21	; 0x01
    11f2:	0e 94 c9 08 	call	0x1192	; 0x1192 <vTaskInternalSetTimeOutState>
    11f6:	80 e0       	ldi	r24, 0x00	; 0
    11f8:	08 c0       	rjmp	.+16     	; 0x120a <xTaskCheckForTimeOut+0x62>
    11fa:	fb 01       	movw	r30, r22
    11fc:	10 82       	st	Z, r1
    11fe:	11 82       	std	Z+1, r1	; 0x01
    1200:	81 e0       	ldi	r24, 0x01	; 1
    1202:	03 c0       	rjmp	.+6      	; 0x120a <xTaskCheckForTimeOut+0x62>
    1204:	80 e0       	ldi	r24, 0x00	; 0
    1206:	01 c0       	rjmp	.+2      	; 0x120a <xTaskCheckForTimeOut+0x62>
    1208:	81 e0       	ldi	r24, 0x01	; 1
    120a:	0f 90       	pop	r0
    120c:	0f be       	out	0x3f, r0	; 63
    120e:	df 91       	pop	r29
    1210:	cf 91       	pop	r28
    1212:	08 95       	ret

00001214 <vTaskMissedYield>:
    1214:	81 e0       	ldi	r24, 0x01	; 1
    1216:	80 93 6f 30 	sts	0x306F, r24	; 0x80306f <xYieldPending>
    121a:	08 95       	ret

0000121c <xTaskPriorityDisinherit>:
    121c:	0f 93       	push	r16
    121e:	1f 93       	push	r17
    1220:	cf 93       	push	r28
    1222:	df 93       	push	r29
    1224:	fc 01       	movw	r30, r24
    1226:	89 2b       	or	r24, r25
    1228:	79 f1       	breq	.+94     	; 0x1288 <xTaskPriorityDisinherit+0x6c>
    122a:	82 a1       	ldd	r24, Z+34	; 0x22
    122c:	81 50       	subi	r24, 0x01	; 1
    122e:	82 a3       	std	Z+34, r24	; 0x22
    1230:	26 89       	ldd	r18, Z+22	; 0x16
    1232:	91 a1       	ldd	r25, Z+33	; 0x21
    1234:	29 17       	cp	r18, r25
    1236:	51 f1       	breq	.+84     	; 0x128c <xTaskPriorityDisinherit+0x70>
    1238:	81 11       	cpse	r24, r1
    123a:	2a c0       	rjmp	.+84     	; 0x1290 <xTaskPriorityDisinherit+0x74>
    123c:	ef 01       	movw	r28, r30
    123e:	8f 01       	movw	r16, r30
    1240:	0e 5f       	subi	r16, 0xFE	; 254
    1242:	1f 4f       	sbci	r17, 0xFF	; 255
    1244:	c8 01       	movw	r24, r16
    1246:	0e 94 00 01 	call	0x200	; 0x200 <uxListRemove>
    124a:	89 a1       	ldd	r24, Y+33	; 0x21
    124c:	8e 8b       	std	Y+22, r24	; 0x16
    124e:	24 e0       	ldi	r18, 0x04	; 4
    1250:	30 e0       	ldi	r19, 0x00	; 0
    1252:	28 1b       	sub	r18, r24
    1254:	31 09       	sbc	r19, r1
    1256:	2c 87       	std	Y+12, r18	; 0x0c
    1258:	3d 87       	std	Y+13, r19	; 0x0d
    125a:	90 91 72 30 	lds	r25, 0x3072	; 0x803072 <uxTopReadyPriority>
    125e:	98 17       	cp	r25, r24
    1260:	10 f4       	brcc	.+4      	; 0x1266 <xTaskPriorityDisinherit+0x4a>
    1262:	80 93 72 30 	sts	0x3072, r24	; 0x803072 <uxTopReadyPriority>
    1266:	90 e0       	ldi	r25, 0x00	; 0
    1268:	9c 01       	movw	r18, r24
    126a:	22 0f       	add	r18, r18
    126c:	33 1f       	adc	r19, r19
    126e:	22 0f       	add	r18, r18
    1270:	33 1f       	adc	r19, r19
    1272:	22 0f       	add	r18, r18
    1274:	33 1f       	adc	r19, r19
    1276:	82 0f       	add	r24, r18
    1278:	93 1f       	adc	r25, r19
    127a:	b8 01       	movw	r22, r16
    127c:	82 56       	subi	r24, 0x62	; 98
    127e:	9f 4c       	sbci	r25, 0xCF	; 207
    1280:	0e 94 ae 00 	call	0x15c	; 0x15c <vListInsertEnd>
    1284:	81 e0       	ldi	r24, 0x01	; 1
    1286:	05 c0       	rjmp	.+10     	; 0x1292 <xTaskPriorityDisinherit+0x76>
    1288:	80 e0       	ldi	r24, 0x00	; 0
    128a:	03 c0       	rjmp	.+6      	; 0x1292 <xTaskPriorityDisinherit+0x76>
    128c:	80 e0       	ldi	r24, 0x00	; 0
    128e:	01 c0       	rjmp	.+2      	; 0x1292 <xTaskPriorityDisinherit+0x76>
    1290:	80 e0       	ldi	r24, 0x00	; 0
    1292:	df 91       	pop	r29
    1294:	cf 91       	pop	r28
    1296:	1f 91       	pop	r17
    1298:	0f 91       	pop	r16
    129a:	08 95       	ret

0000129c <vSenderTask>:
	vTaskStartScheduler();
	return 0;
}

void vSenderTask(void *pvParams)
{
    129c:	cf 93       	push	r28
    129e:	df 93       	push	r29
    12a0:	00 d0       	rcall	.+0      	; 0x12a2 <vSenderTask+0x6>
    12a2:	cd b7       	in	r28, 0x3d	; 61
    12a4:	de b7       	in	r29, 0x3e	; 62
    12a6:	89 83       	std	Y+1, r24	; 0x01
    12a8:	9a 83       	std	Y+2, r25	; 0x02
	for (;;)
	{
		if (strlen((char*)pvParams)>0)
    12aa:	e9 81       	ldd	r30, Y+1	; 0x01
    12ac:	fa 81       	ldd	r31, Y+2	; 0x02
    12ae:	80 81       	ld	r24, Z
    12b0:	88 23       	and	r24, r24
    12b2:	61 f0       	breq	.+24     	; 0x12cc <vSenderTask+0x30>
		{
			xQueueSend(xPrintQueue,(void *)&pvParams,0);
    12b4:	20 e0       	ldi	r18, 0x00	; 0
    12b6:	40 e0       	ldi	r20, 0x00	; 0
    12b8:	50 e0       	ldi	r21, 0x00	; 0
    12ba:	be 01       	movw	r22, r28
    12bc:	6f 5f       	subi	r22, 0xFF	; 255
    12be:	7f 4f       	sbci	r23, 0xFF	; 255
    12c0:	80 91 ed 30 	lds	r24, 0x30ED	; 0x8030ed <xPrintQueue>
    12c4:	90 91 ee 30 	lds	r25, 0x30EE	; 0x8030ee <xPrintQueue+0x1>
    12c8:	0e 94 9b 03 	call	0x736	; 0x736 <xQueueGenericSend>
		}
		vTaskDelay(pdMS_TO_TICKS(1000));
    12cc:	88 ee       	ldi	r24, 0xE8	; 232
    12ce:	93 e0       	ldi	r25, 0x03	; 3
    12d0:	0e 94 f5 07 	call	0xfea	; 0xfea <vTaskDelay>
	}
    12d4:	ea cf       	rjmp	.-44     	; 0x12aa <vSenderTask+0xe>

000012d6 <vSenderTask2>:
}

void vSenderTask2(void *pvParams)
{
    12d6:	cf 93       	push	r28
    12d8:	df 93       	push	r29
    12da:	00 d0       	rcall	.+0      	; 0x12dc <vSenderTask2+0x6>
    12dc:	cd b7       	in	r28, 0x3d	; 61
    12de:	de b7       	in	r29, 0x3e	; 62
    12e0:	89 83       	std	Y+1, r24	; 0x01
    12e2:	9a 83       	std	Y+2, r25	; 0x02
	for (;;)
	{
		if (strlen((char*)pvParams)>0)
    12e4:	e9 81       	ldd	r30, Y+1	; 0x01
    12e6:	fa 81       	ldd	r31, Y+2	; 0x02
    12e8:	80 81       	ld	r24, Z
    12ea:	88 23       	and	r24, r24
    12ec:	61 f0       	breq	.+24     	; 0x1306 <vSenderTask2+0x30>
		{
			xQueueSend(xPrintQueue,(void *)&pvParams,0);
    12ee:	20 e0       	ldi	r18, 0x00	; 0
    12f0:	40 e0       	ldi	r20, 0x00	; 0
    12f2:	50 e0       	ldi	r21, 0x00	; 0
    12f4:	be 01       	movw	r22, r28
    12f6:	6f 5f       	subi	r22, 0xFF	; 255
    12f8:	7f 4f       	sbci	r23, 0xFF	; 255
    12fa:	80 91 ed 30 	lds	r24, 0x30ED	; 0x8030ed <xPrintQueue>
    12fe:	90 91 ee 30 	lds	r25, 0x30EE	; 0x8030ee <xPrintQueue+0x1>
    1302:	0e 94 9b 03 	call	0x736	; 0x736 <xQueueGenericSend>
		}
		vTaskDelay(pdMS_TO_TICKS(500));
    1306:	84 ef       	ldi	r24, 0xF4	; 244
    1308:	91 e0       	ldi	r25, 0x01	; 1
    130a:	0e 94 f5 07 	call	0xfea	; 0xfea <vTaskDelay>
	}
    130e:	ea cf       	rjmp	.-44     	; 0x12e4 <vSenderTask2+0xe>

00001310 <main>:
char msg2[] = "This is the Message two\r\n";
char *ptr = msg;
extern char command[10];

int main(void)
{
    1310:	ef 92       	push	r14
    1312:	ff 92       	push	r15
    1314:	0f 93       	push	r16
	atmel_start_init();
    1316:	0e 94 67 00 	call	0xce	; 0xce <atmel_start_init>
	
	xPrintQueue = xQueueCreate(5,2);
    131a:	40 e0       	ldi	r20, 0x00	; 0
    131c:	62 e0       	ldi	r22, 0x02	; 2
    131e:	85 e0       	ldi	r24, 0x05	; 5
    1320:	0e 94 6e 03 	call	0x6dc	; 0x6dc <xQueueGenericCreate>
    1324:	80 93 ed 30 	sts	0x30ED, r24	; 0x8030ed <xPrintQueue>
    1328:	90 93 ee 30 	sts	0x30EE, r25	; 0x8030ee <xPrintQueue+0x1>
	xCommandQueue = xQueueCreate(5,2);
    132c:	40 e0       	ldi	r20, 0x00	; 0
    132e:	62 e0       	ldi	r22, 0x02	; 2
    1330:	85 e0       	ldi	r24, 0x05	; 5
    1332:	0e 94 6e 03 	call	0x6dc	; 0x6dc <xQueueGenericCreate>
    1336:	80 93 eb 30 	sts	0x30EB, r24	; 0x8030eb <xCommandQueue>
    133a:	90 93 ec 30 	sts	0x30EC, r25	; 0x8030ec <xCommandQueue+0x1>
	/* Task Registration and creation */
	xTaskCreate(vSenderTask, "sender", configMINIMAL_STACK_SIZE, (void *)msg, 1, NULL);
    133e:	e1 2c       	mov	r14, r1
    1340:	f1 2c       	mov	r15, r1
    1342:	01 e0       	ldi	r16, 0x01	; 1
    1344:	2a e1       	ldi	r18, 0x1A	; 26
    1346:	38 e2       	ldi	r19, 0x28	; 40
    1348:	43 e7       	ldi	r20, 0x73	; 115
    134a:	50 e0       	ldi	r21, 0x00	; 0
    134c:	63 e8       	ldi	r22, 0x83	; 131
    134e:	7c e5       	ldi	r23, 0x5C	; 92
    1350:	8e e4       	ldi	r24, 0x4E	; 78
    1352:	99 e0       	ldi	r25, 0x09	; 9
    1354:	0e 94 84 05 	call	0xb08	; 0xb08 <xTaskCreate>
	xTaskCreate(vSenderTask2, "sender2", configMINIMAL_STACK_SIZE, (void *)msg2, 1, NULL);
    1358:	20 e0       	ldi	r18, 0x00	; 0
    135a:	38 e2       	ldi	r19, 0x28	; 40
    135c:	43 e7       	ldi	r20, 0x73	; 115
    135e:	50 e0       	ldi	r21, 0x00	; 0
    1360:	6a e8       	ldi	r22, 0x8A	; 138
    1362:	7c e5       	ldi	r23, 0x5C	; 92
    1364:	8b e6       	ldi	r24, 0x6B	; 107
    1366:	99 e0       	ldi	r25, 0x09	; 9
    1368:	0e 94 84 05 	call	0xb08	; 0xb08 <xTaskCreate>
	xTaskCreate(vReceiverTask, "receiver", configMINIMAL_STACK_SIZE, NULL, 2, NULL);
    136c:	02 e0       	ldi	r16, 0x02	; 2
    136e:	20 e0       	ldi	r18, 0x00	; 0
    1370:	30 e0       	ldi	r19, 0x00	; 0
    1372:	43 e7       	ldi	r20, 0x73	; 115
    1374:	50 e0       	ldi	r21, 0x00	; 0
    1376:	66 e9       	ldi	r22, 0x96	; 150
    1378:	7c e5       	ldi	r23, 0x5C	; 92
    137a:	84 ee       	ldi	r24, 0xE4	; 228
    137c:	99 e0       	ldi	r25, 0x09	; 9
    137e:	0e 94 84 05 	call	0xb08	; 0xb08 <xTaskCreate>
	xTaskCreate(vCommandReceiverTask, "cmd receiver", configMINIMAL_STACK_SIZE, NULL, 2, NULL);
    1382:	20 e0       	ldi	r18, 0x00	; 0
    1384:	30 e0       	ldi	r19, 0x00	; 0
    1386:	43 e7       	ldi	r20, 0x73	; 115
    1388:	50 e0       	ldi	r21, 0x00	; 0
    138a:	62 e9       	ldi	r22, 0x92	; 146
    138c:	7c e5       	ldi	r23, 0x5C	; 92
    138e:	8a e6       	ldi	r24, 0x6A	; 106
    1390:	90 e0       	ldi	r25, 0x00	; 0
    1392:	0e 94 84 05 	call	0xb08	; 0xb08 <xTaskCreate>
	
	vTaskStartScheduler();
    1396:	0e 94 8e 06 	call	0xd1c	; 0xd1c <vTaskStartScheduler>
	return 0;
}
    139a:	80 e0       	ldi	r24, 0x00	; 0
    139c:	90 e0       	ldi	r25, 0x00	; 0
    139e:	0f 91       	pop	r16
    13a0:	ff 90       	pop	r15
    13a2:	ef 90       	pop	r14
    13a4:	08 95       	ret

000013a6 <vPrintString>:
		}
	}
}

void vPrintString(void *pvParams)
{
    13a6:	cf 93       	push	r28
    13a8:	df 93       	push	r29
    13aa:	c8 2f       	mov	r28, r24
    13ac:	d9 2f       	mov	r29, r25
	vTaskSuspendAll();
    13ae:	0e 94 b8 06 	call	0xd70	; 0xd70 <vTaskSuspendAll>
	printf((const char *)pvParams);
    13b2:	df 93       	push	r29
    13b4:	cf 93       	push	r28
    13b6:	0e 94 50 0b 	call	0x16a0	; 0x16a0 <printf>
	xTaskResumeAll();
    13ba:	0e 94 76 07 	call	0xeec	; 0xeec <xTaskResumeAll>
}
    13be:	0f 90       	pop	r0
    13c0:	0f 90       	pop	r0
    13c2:	df 91       	pop	r29
    13c4:	cf 91       	pop	r28
    13c6:	08 95       	ret

000013c8 <vReceiverTask>:
		vTaskDelay(pdMS_TO_TICKS(500));
	}
}

void vReceiverTask(void *pvParams)
{
    13c8:	cf 93       	push	r28
    13ca:	df 93       	push	r29
    13cc:	00 d0       	rcall	.+0      	; 0x13ce <vReceiverTask+0x6>
    13ce:	cd b7       	in	r28, 0x3d	; 61
    13d0:	de b7       	in	r29, 0x3e	; 62
	char *ptr=NULL;
    13d2:	19 82       	std	Y+1, r1	; 0x01
    13d4:	1a 82       	std	Y+2, r1	; 0x02
	for (;;)
	{
		if( xQueueReceive(xPrintQueue,(void *)&ptr,100) == pdPASS )
    13d6:	44 e6       	ldi	r20, 0x64	; 100
    13d8:	50 e0       	ldi	r21, 0x00	; 0
    13da:	be 01       	movw	r22, r28
    13dc:	6f 5f       	subi	r22, 0xFF	; 255
    13de:	7f 4f       	sbci	r23, 0xFF	; 255
    13e0:	80 91 ed 30 	lds	r24, 0x30ED	; 0x8030ed <xPrintQueue>
    13e4:	90 91 ee 30 	lds	r25, 0x30EE	; 0x8030ee <xPrintQueue+0x1>
    13e8:	0e 94 71 04 	call	0x8e2	; 0x8e2 <xQueueReceive>
    13ec:	81 30       	cpi	r24, 0x01	; 1
    13ee:	99 f7       	brne	.-26     	; 0x13d6 <vReceiverTask+0xe>
		{
			vPrintString((void *)ptr);
    13f0:	89 81       	ldd	r24, Y+1	; 0x01
    13f2:	9a 81       	ldd	r25, Y+2	; 0x02
    13f4:	0e 94 d3 09 	call	0x13a6	; 0x13a6 <vPrintString>
    13f8:	ee cf       	rjmp	.-36     	; 0x13d6 <vReceiverTask+0xe>

000013fa <BOD_init>:
    13fa:	82 e0       	ldi	r24, 0x02	; 2
    13fc:	80 93 89 00 	sts	0x0089, r24	; 0x800089 <__TEXT_REGION_LENGTH__+0x700089>
    1400:	80 e0       	ldi	r24, 0x00	; 0
    1402:	08 95       	ret

00001404 <CLKCTRL_init>:
    1404:	41 e0       	ldi	r20, 0x01	; 1
    1406:	68 ed       	ldi	r22, 0xD8	; 216
    1408:	81 e6       	ldi	r24, 0x61	; 97
    140a:	90 e0       	ldi	r25, 0x00	; 0
    140c:	0e 94 63 0a 	call	0x14c6	; 0x14c6 <protected_write_io>
    1410:	80 e0       	ldi	r24, 0x00	; 0
    1412:	08 95       	ret

00001414 <CPUINT_init>:
    1414:	80 e0       	ldi	r24, 0x00	; 0
    1416:	08 95       	ret

00001418 <mcu_init>:
#ifdef __cplusplus
extern "C" {
#endif

void mcu_init(void)
{
    1418:	e0 e1       	ldi	r30, 0x10	; 16
    141a:	f4 e0       	ldi	r31, 0x04	; 4
	 * peripheral if used */

	/* Set all pins to low power mode */

	for (uint8_t i = 0; i < 8; i++) {
		*((uint8_t *)&PORTA + 0x10 + i) |= 1 << PORT_PULLUPEN_bp;
    141c:	80 81       	ld	r24, Z
    141e:	88 60       	ori	r24, 0x08	; 8
    1420:	81 93       	st	Z+, r24
	 * disables all peripherals to save power. Driver shall enable
	 * peripheral if used */

	/* Set all pins to low power mode */

	for (uint8_t i = 0; i < 8; i++) {
    1422:	e8 31       	cpi	r30, 0x18	; 24
    1424:	84 e0       	ldi	r24, 0x04	; 4
    1426:	f8 07       	cpc	r31, r24
    1428:	c9 f7       	brne	.-14     	; 0x141c <mcu_init+0x4>
    142a:	e0 e3       	ldi	r30, 0x30	; 48
    142c:	f4 e0       	ldi	r31, 0x04	; 4
		*((uint8_t *)&PORTA + 0x10 + i) |= 1 << PORT_PULLUPEN_bp;
	}

	for (uint8_t i = 0; i < 8; i++) {
		*((uint8_t *)&PORTB + 0x10 + i) |= 1 << PORT_PULLUPEN_bp;
    142e:	80 81       	ld	r24, Z
    1430:	88 60       	ori	r24, 0x08	; 8
    1432:	81 93       	st	Z+, r24

	for (uint8_t i = 0; i < 8; i++) {
		*((uint8_t *)&PORTA + 0x10 + i) |= 1 << PORT_PULLUPEN_bp;
	}

	for (uint8_t i = 0; i < 8; i++) {
    1434:	e8 33       	cpi	r30, 0x38	; 56
    1436:	84 e0       	ldi	r24, 0x04	; 4
    1438:	f8 07       	cpc	r31, r24
    143a:	c9 f7       	brne	.-14     	; 0x142e <mcu_init+0x16>
    143c:	e0 e5       	ldi	r30, 0x50	; 80
    143e:	f4 e0       	ldi	r31, 0x04	; 4
		*((uint8_t *)&PORTB + 0x10 + i) |= 1 << PORT_PULLUPEN_bp;
	}

	for (uint8_t i = 0; i < 8; i++) {
		*((uint8_t *)&PORTC + 0x10 + i) |= 1 << PORT_PULLUPEN_bp;
    1440:	80 81       	ld	r24, Z
    1442:	88 60       	ori	r24, 0x08	; 8
    1444:	81 93       	st	Z+, r24

	for (uint8_t i = 0; i < 8; i++) {
		*((uint8_t *)&PORTB + 0x10 + i) |= 1 << PORT_PULLUPEN_bp;
	}

	for (uint8_t i = 0; i < 8; i++) {
    1446:	e8 35       	cpi	r30, 0x58	; 88
    1448:	84 e0       	ldi	r24, 0x04	; 4
    144a:	f8 07       	cpc	r31, r24
    144c:	c9 f7       	brne	.-14     	; 0x1440 <mcu_init+0x28>
    144e:	e0 e7       	ldi	r30, 0x70	; 112
    1450:	f4 e0       	ldi	r31, 0x04	; 4
		*((uint8_t *)&PORTC + 0x10 + i) |= 1 << PORT_PULLUPEN_bp;
	}

	for (uint8_t i = 0; i < 8; i++) {
		*((uint8_t *)&PORTD + 0x10 + i) |= 1 << PORT_PULLUPEN_bp;
    1452:	80 81       	ld	r24, Z
    1454:	88 60       	ori	r24, 0x08	; 8
    1456:	81 93       	st	Z+, r24

	for (uint8_t i = 0; i < 8; i++) {
		*((uint8_t *)&PORTC + 0x10 + i) |= 1 << PORT_PULLUPEN_bp;
	}

	for (uint8_t i = 0; i < 8; i++) {
    1458:	e8 37       	cpi	r30, 0x78	; 120
    145a:	84 e0       	ldi	r24, 0x04	; 4
    145c:	f8 07       	cpc	r31, r24
    145e:	c9 f7       	brne	.-14     	; 0x1452 <mcu_init+0x3a>
    1460:	e0 e9       	ldi	r30, 0x90	; 144
    1462:	f4 e0       	ldi	r31, 0x04	; 4
		*((uint8_t *)&PORTD + 0x10 + i) |= 1 << PORT_PULLUPEN_bp;
	}

	for (uint8_t i = 0; i < 8; i++) {
		*((uint8_t *)&PORTE + 0x10 + i) |= 1 << PORT_PULLUPEN_bp;
    1464:	80 81       	ld	r24, Z
    1466:	88 60       	ori	r24, 0x08	; 8
    1468:	81 93       	st	Z+, r24

	for (uint8_t i = 0; i < 8; i++) {
		*((uint8_t *)&PORTD + 0x10 + i) |= 1 << PORT_PULLUPEN_bp;
	}

	for (uint8_t i = 0; i < 8; i++) {
    146a:	e8 39       	cpi	r30, 0x98	; 152
    146c:	84 e0       	ldi	r24, 0x04	; 4
    146e:	f8 07       	cpc	r31, r24
    1470:	c9 f7       	brne	.-14     	; 0x1464 <mcu_init+0x4c>
    1472:	e0 eb       	ldi	r30, 0xB0	; 176
    1474:	f4 e0       	ldi	r31, 0x04	; 4
		*((uint8_t *)&PORTE + 0x10 + i) |= 1 << PORT_PULLUPEN_bp;
	}

	for (uint8_t i = 0; i < 8; i++) {
		*((uint8_t *)&PORTF + 0x10 + i) |= 1 << PORT_PULLUPEN_bp;
    1476:	80 81       	ld	r24, Z
    1478:	88 60       	ori	r24, 0x08	; 8
    147a:	81 93       	st	Z+, r24

	for (uint8_t i = 0; i < 8; i++) {
		*((uint8_t *)&PORTE + 0x10 + i) |= 1 << PORT_PULLUPEN_bp;
	}

	for (uint8_t i = 0; i < 8; i++) {
    147c:	e8 3b       	cpi	r30, 0xB8	; 184
    147e:	84 e0       	ldi	r24, 0x04	; 4
    1480:	f8 07       	cpc	r31, r24
    1482:	c9 f7       	brne	.-14     	; 0x1476 <mcu_init+0x5e>
		*((uint8_t *)&PORTF + 0x10 + i) |= 1 << PORT_PULLUPEN_bp;
	}
}
    1484:	08 95       	ret

00001486 <USART_0_initialization>:
 */
static inline void PORTF_set_pin_dir(const uint8_t pin, const enum port_dir dir)
{
	switch (dir) {
	case PORT_DIR_IN:
		VPORTF.DIR &= ~(1 << pin);
    1486:	a1 98       	cbi	0x14, 1	; 20
	volatile uint8_t *port_pin_ctrl = ((uint8_t *)&PORTF + 0x10 + pin);

	if (pull_mode == PORT_PULL_UP) {
		*port_pin_ctrl |= PORT_PULLUPEN_bm;
	} else if (pull_mode == PORT_PULL_OFF) {
		*port_pin_ctrl &= ~PORT_PULLUPEN_bm;
    1488:	e1 eb       	ldi	r30, 0xB1	; 177
    148a:	f4 e0       	ldi	r31, 0x04	; 4
    148c:	80 81       	ld	r24, Z
    148e:	87 7f       	andi	r24, 0xF7	; 247
    1490:	80 83       	st	Z, r24
	switch (dir) {
	case PORT_DIR_IN:
		VPORTF.DIR &= ~(1 << pin);
		break;
	case PORT_DIR_OUT:
		VPORTF.DIR |= (1 << pin);
    1492:	a0 9a       	sbi	0x14, 0	; 20
static inline void PORTF_set_pin_level(const uint8_t pin, const bool level)
{
	if (level == true) {
		VPORTF.OUT |= (1 << pin);
	} else {
		VPORTF.OUT &= ~(1 << pin);
    1494:	a8 98       	cbi	0x15, 0	; 21
	    // <id> pad_initial_level
	    // <false"> Low
	    // <true"> High
	    false);

	USART_0_init();
    1496:	0e 94 20 0b 	call	0x1640	; 0x1640 <USART_0_init>
    149a:	08 95       	ret

0000149c <system_init>:
/**
 * \brief System initialization
 */
void system_init()
{
	mcu_init();
    149c:	0e 94 0c 0a 	call	0x1418	; 0x1418 <mcu_init>
	switch (dir) {
	case PORT_DIR_IN:
		VPORTD.DIR &= ~(1 << pin);
		break;
	case PORT_DIR_OUT:
		VPORTD.DIR |= (1 << pin);
    14a0:	60 9a       	sbi	0x0c, 0	; 12
 *                  false = Pin level set to "low" state
 */
static inline void PORTD_set_pin_level(const uint8_t pin, const bool level)
{
	if (level == true) {
		VPORTD.OUT |= (1 << pin);
    14a2:	68 9a       	sbi	0x0d, 0	; 13
	switch (dir) {
	case PORT_DIR_IN:
		VPORTD.DIR &= ~(1 << pin);
		break;
	case PORT_DIR_OUT:
		VPORTD.DIR |= (1 << pin);
    14a4:	61 9a       	sbi	0x0c, 1	; 12
 *                  false = Pin level set to "low" state
 */
static inline void PORTD_set_pin_level(const uint8_t pin, const bool level)
{
	if (level == true) {
		VPORTD.OUT |= (1 << pin);
    14a6:	69 9a       	sbi	0x0d, 1	; 13
	switch (dir) {
	case PORT_DIR_IN:
		VPORTD.DIR &= ~(1 << pin);
		break;
	case PORT_DIR_OUT:
		VPORTD.DIR |= (1 << pin);
    14a8:	62 9a       	sbi	0x0c, 2	; 12
 *                  false = Pin level set to "low" state
 */
static inline void PORTD_set_pin_level(const uint8_t pin, const bool level)
{
	if (level == true) {
		VPORTD.OUT |= (1 << pin);
    14aa:	6a 9a       	sbi	0x0d, 2	; 13
	switch (dir) {
	case PORT_DIR_IN:
		VPORTD.DIR &= ~(1 << pin);
		break;
	case PORT_DIR_OUT:
		VPORTD.DIR |= (1 << pin);
    14ac:	63 9a       	sbi	0x0c, 3	; 12
 *                  false = Pin level set to "low" state
 */
static inline void PORTD_set_pin_level(const uint8_t pin, const bool level)
{
	if (level == true) {
		VPORTD.OUT |= (1 << pin);
    14ae:	6b 9a       	sbi	0x0d, 3	; 13
	    // <id> pad_initial_level
	    // <false"> Low
	    // <true"> High
	    true);

	CLKCTRL_init();
    14b0:	0e 94 02 0a 	call	0x1404	; 0x1404 <CLKCTRL_init>

	USART_0_initialization();
    14b4:	0e 94 43 0a 	call	0x1486	; 0x1486 <USART_0_initialization>

	CPUINT_init();
    14b8:	0e 94 0a 0a 	call	0x1414	; 0x1414 <CPUINT_init>

	SLPCTRL_init();
    14bc:	0e 94 67 0a 	call	0x14ce	; 0x14ce <SLPCTRL_init>

	BOD_init();
    14c0:	0e 94 fd 09 	call	0x13fa	; 0x13fa <BOD_init>
    14c4:	08 95       	ret

000014c6 <protected_write_io>:
    14c6:	fc 01       	movw	r30, r24
    14c8:	64 bf       	out	0x34, r22	; 52
    14ca:	40 83       	st	Z, r20
    14cc:	08 95       	ret

000014ce <SLPCTRL_init>:
    14ce:	80 e0       	ldi	r24, 0x00	; 0
    14d0:	08 95       	ret

000014d2 <USART_0_default_udre_isr_cb>:
	USART_0_rx_elements--;
	EXIT_CRITICAL(R);

	/* Return data */
	return USART_0_rxbuf[tmptail];
}
    14d2:	80 91 c5 30 	lds	r24, 0x30C5	; 0x8030c5 <USART_0_tx_elements>
    14d6:	88 23       	and	r24, r24
    14d8:	89 f0       	breq	.+34     	; 0x14fc <USART_0_default_udre_isr_cb+0x2a>
    14da:	e0 91 c6 30 	lds	r30, 0x30C6	; 0x8030c6 <USART_0_tx_tail>
    14de:	ef 5f       	subi	r30, 0xFF	; 255
    14e0:	ef 71       	andi	r30, 0x1F	; 31
    14e2:	e0 93 c6 30 	sts	0x30C6, r30	; 0x8030c6 <USART_0_tx_tail>
    14e6:	f0 e0       	ldi	r31, 0x00	; 0
    14e8:	e8 53       	subi	r30, 0x38	; 56
    14ea:	ff 4c       	sbci	r31, 0xCF	; 207
    14ec:	80 81       	ld	r24, Z
    14ee:	80 93 42 08 	sts	0x0842, r24	; 0x800842 <__TEXT_REGION_LENGTH__+0x700842>
    14f2:	80 91 c5 30 	lds	r24, 0x30C5	; 0x8030c5 <USART_0_tx_elements>
    14f6:	81 50       	subi	r24, 0x01	; 1
    14f8:	80 93 c5 30 	sts	0x30C5, r24	; 0x8030c5 <USART_0_tx_elements>
    14fc:	80 91 c5 30 	lds	r24, 0x30C5	; 0x8030c5 <USART_0_tx_elements>
    1500:	81 11       	cpse	r24, r1
    1502:	05 c0       	rjmp	.+10     	; 0x150e <USART_0_default_udre_isr_cb+0x3c>
    1504:	e0 e4       	ldi	r30, 0x40	; 64
    1506:	f8 e0       	ldi	r31, 0x08	; 8
    1508:	85 81       	ldd	r24, Z+5	; 0x05
    150a:	8f 7d       	andi	r24, 0xDF	; 223
    150c:	85 83       	std	Z+5, r24	; 0x05
    150e:	08 95       	ret

00001510 <USART_0_default_rx_isr_cb>:
    1510:	80 91 40 08 	lds	r24, 0x0840	; 0x800840 <__TEXT_REGION_LENGTH__+0x700840>
    1514:	e0 91 c4 30 	lds	r30, 0x30C4	; 0x8030c4 <index.4408>
    1518:	91 e0       	ldi	r25, 0x01	; 1
    151a:	9e 0f       	add	r25, r30
    151c:	90 93 c4 30 	sts	0x30C4, r25	; 0x8030c4 <index.4408>
    1520:	f0 e0       	ldi	r31, 0x00	; 0
    1522:	ee 5c       	subi	r30, 0xCE	; 206
    1524:	f7 4d       	sbci	r31, 0xD7	; 215
    1526:	80 83       	st	Z, r24
    1528:	8a 30       	cpi	r24, 0x0A	; 10
    152a:	99 f4       	brne	.+38     	; 0x1552 <USART_0_default_rx_isr_cb+0x42>
    152c:	e9 2f       	mov	r30, r25
    152e:	f0 e0       	ldi	r31, 0x00	; 0
    1530:	e0 5d       	subi	r30, 0xD0	; 208
    1532:	f7 4d       	sbci	r31, 0xD7	; 215
    1534:	10 82       	st	Z, r1
    1536:	20 e0       	ldi	r18, 0x00	; 0
    1538:	40 e0       	ldi	r20, 0x00	; 0
    153a:	50 e0       	ldi	r21, 0x00	; 0
    153c:	60 e3       	ldi	r22, 0x30	; 48
    153e:	78 e2       	ldi	r23, 0x28	; 40
    1540:	80 91 eb 30 	lds	r24, 0x30EB	; 0x8030eb <xCommandQueue>
    1544:	90 91 ec 30 	lds	r25, 0x30EC	; 0x8030ec <xCommandQueue+0x1>
    1548:	0e 94 37 04 	call	0x86e	; 0x86e <xQueueGenericSendFromISR>
    154c:	71 9a       	sbi	0x0e, 1	; 14
    154e:	10 92 c4 30 	sts	0x30C4, r1	; 0x8030c4 <index.4408>
    1552:	08 95       	ret

00001554 <__vector_31>:
    1554:	1f 92       	push	r1
    1556:	0f 92       	push	r0
    1558:	0f b6       	in	r0, 0x3f	; 63
    155a:	0f 92       	push	r0
    155c:	11 24       	eor	r1, r1
    155e:	2f 93       	push	r18
    1560:	3f 93       	push	r19
    1562:	4f 93       	push	r20
    1564:	5f 93       	push	r21
    1566:	6f 93       	push	r22
    1568:	7f 93       	push	r23
    156a:	8f 93       	push	r24
    156c:	9f 93       	push	r25
    156e:	af 93       	push	r26
    1570:	bf 93       	push	r27
    1572:	ef 93       	push	r30
    1574:	ff 93       	push	r31
    1576:	e0 91 54 28 	lds	r30, 0x2854	; 0x802854 <USART_0_rx_isr_cb>
    157a:	f0 91 55 28 	lds	r31, 0x2855	; 0x802855 <USART_0_rx_isr_cb+0x1>
    157e:	30 97       	sbiw	r30, 0x00	; 0
    1580:	09 f0       	breq	.+2      	; 0x1584 <__vector_31+0x30>
    1582:	09 95       	icall
    1584:	ff 91       	pop	r31
    1586:	ef 91       	pop	r30
    1588:	bf 91       	pop	r27
    158a:	af 91       	pop	r26
    158c:	9f 91       	pop	r25
    158e:	8f 91       	pop	r24
    1590:	7f 91       	pop	r23
    1592:	6f 91       	pop	r22
    1594:	5f 91       	pop	r21
    1596:	4f 91       	pop	r20
    1598:	3f 91       	pop	r19
    159a:	2f 91       	pop	r18
    159c:	0f 90       	pop	r0
    159e:	0f be       	out	0x3f, r0	; 63
    15a0:	0f 90       	pop	r0
    15a2:	1f 90       	pop	r1
    15a4:	18 95       	reti

000015a6 <__vector_32>:
    15a6:	1f 92       	push	r1
    15a8:	0f 92       	push	r0
    15aa:	0f b6       	in	r0, 0x3f	; 63
    15ac:	0f 92       	push	r0
    15ae:	11 24       	eor	r1, r1
    15b0:	2f 93       	push	r18
    15b2:	3f 93       	push	r19
    15b4:	4f 93       	push	r20
    15b6:	5f 93       	push	r21
    15b8:	6f 93       	push	r22
    15ba:	7f 93       	push	r23
    15bc:	8f 93       	push	r24
    15be:	9f 93       	push	r25
    15c0:	af 93       	push	r26
    15c2:	bf 93       	push	r27
    15c4:	ef 93       	push	r30
    15c6:	ff 93       	push	r31
    15c8:	e0 91 52 28 	lds	r30, 0x2852	; 0x802852 <USART_0_udre_isr_cb>
    15cc:	f0 91 53 28 	lds	r31, 0x2853	; 0x802853 <USART_0_udre_isr_cb+0x1>
    15d0:	30 97       	sbiw	r30, 0x00	; 0
    15d2:	09 f0       	breq	.+2      	; 0x15d6 <__vector_32+0x30>
    15d4:	09 95       	icall
    15d6:	ff 91       	pop	r31
    15d8:	ef 91       	pop	r30
    15da:	bf 91       	pop	r27
    15dc:	af 91       	pop	r26
    15de:	9f 91       	pop	r25
    15e0:	8f 91       	pop	r24
    15e2:	7f 91       	pop	r23
    15e4:	6f 91       	pop	r22
    15e6:	5f 91       	pop	r21
    15e8:	4f 91       	pop	r20
    15ea:	3f 91       	pop	r19
    15ec:	2f 91       	pop	r18
    15ee:	0f 90       	pop	r0
    15f0:	0f be       	out	0x3f, r0	; 63
    15f2:	0f 90       	pop	r0
    15f4:	1f 90       	pop	r1
    15f6:	18 95       	reti

000015f8 <USART_0_write>:
void USART_0_write(const uint8_t data)
{
	uint8_t tmphead;

	/* Calculate buffer index */
	tmphead = (USART_0_tx_head + 1) & USART_0_TX_BUFFER_MASK;
    15f8:	20 91 c7 30 	lds	r18, 0x30C7	; 0x8030c7 <USART_0_tx_head>
    15fc:	2f 5f       	subi	r18, 0xFF	; 255
    15fe:	2f 71       	andi	r18, 0x1F	; 31
	/* Wait for free space in buffer */
	while (USART_0_tx_elements == USART_0_TX_BUFFER_SIZE)
    1600:	90 91 c5 30 	lds	r25, 0x30C5	; 0x8030c5 <USART_0_tx_elements>
    1604:	90 32       	cpi	r25, 0x20	; 32
    1606:	e1 f3       	breq	.-8      	; 0x1600 <USART_0_write+0x8>
		;
	/* Store data in buffer */
	USART_0_txbuf[tmphead] = data;
    1608:	e2 2f       	mov	r30, r18
    160a:	f0 e0       	ldi	r31, 0x00	; 0
    160c:	e8 53       	subi	r30, 0x38	; 56
    160e:	ff 4c       	sbci	r31, 0xCF	; 207
    1610:	80 83       	st	Z, r24
	/* Store new index */
	USART_0_tx_head = tmphead;
    1612:	20 93 c7 30 	sts	0x30C7, r18	; 0x8030c7 <USART_0_tx_head>
	ENTER_CRITICAL(W);
    1616:	0f b6       	in	r0, 0x3f	; 63
    1618:	f8 94       	cli
    161a:	0f 92       	push	r0
	USART_0_tx_elements++;
    161c:	80 91 c5 30 	lds	r24, 0x30C5	; 0x8030c5 <USART_0_tx_elements>
    1620:	8f 5f       	subi	r24, 0xFF	; 255
    1622:	80 93 c5 30 	sts	0x30C5, r24	; 0x8030c5 <USART_0_tx_elements>
	EXIT_CRITICAL(W);
    1626:	0f 90       	pop	r0
    1628:	0f be       	out	0x3f, r0	; 63
	/* Enable UDRE interrupt */
	USART2.CTRLA |= (1 << USART_DREIE_bp);
    162a:	e0 e4       	ldi	r30, 0x40	; 64
    162c:	f8 e0       	ldi	r31, 0x08	; 8
    162e:	85 81       	ldd	r24, Z+5	; 0x05
    1630:	80 62       	ori	r24, 0x20	; 32
    1632:	85 83       	std	Z+5, r24	; 0x05
    1634:	08 95       	ret

00001636 <USART_0_printCHAR>:

#if defined(__GNUC__)

int USART_0_printCHAR(char character, FILE *stream)
{
	USART_0_write(character);
    1636:	0e 94 fc 0a 	call	0x15f8	; 0x15f8 <USART_0_write>
	return 0;
}
    163a:	80 e0       	ldi	r24, 0x00	; 0
    163c:	90 e0       	ldi	r25, 0x00	; 0
    163e:	08 95       	ret

00001640 <USART_0_init>:
 * \retval 1 the USART init was not successful
 */
int8_t USART_0_init()
{

	USART2.BAUD = (uint16_t)USART2_BAUD_RATE(9600); /* set baud rate register */
    1640:	e0 e4       	ldi	r30, 0x40	; 64
    1642:	f8 e0       	ldi	r31, 0x08	; 8
    1644:	87 e4       	ldi	r24, 0x47	; 71
    1646:	90 e1       	ldi	r25, 0x10	; 16
    1648:	80 87       	std	Z+8, r24	; 0x08
    164a:	91 87       	std	Z+9, r25	; 0x09

	USART2.CTRLA = 0 << USART_ABEIE_bp /* Auto-baud Error Interrupt Enable: disabled */
    164c:	80 e8       	ldi	r24, 0x80	; 128
    164e:	85 83       	std	Z+5, r24	; 0x05
			| USART_RS485_OFF_gc /* RS485 Mode disabled */
			| 1 << USART_RXCIE_bp /* Receive Complete Interrupt Enable: disabled */
			| 0 << USART_RXSIE_bp /* Receiver Start Frame Interrupt Enable: disabled */
			| 0 << USART_TXCIE_bp; /* Transmit Complete Interrupt Enable: disabled */

	USART2.CTRLB = 0 << USART_MPCM_bp       /* Multi-processor Communication Mode: disabled */
    1650:	80 ec       	ldi	r24, 0xC0	; 192
    1652:	86 83       	std	Z+6, r24	; 0x06
	uint8_t x;

	/* Initialize ringbuffers */
	x = 0;

	USART_0_rx_tail     = x;
    1654:	10 92 e9 30 	sts	0x30E9, r1	; 0x8030e9 <USART_0_rx_tail>
	USART_0_rx_head     = x;
    1658:	10 92 ea 30 	sts	0x30EA, r1	; 0x8030ea <USART_0_rx_head>
	USART_0_rx_elements = x;
    165c:	10 92 e8 30 	sts	0x30E8, r1	; 0x8030e8 <USART_0_rx_elements>
	USART_0_tx_tail     = x;
    1660:	10 92 c6 30 	sts	0x30C6, r1	; 0x8030c6 <USART_0_tx_tail>
	USART_0_tx_head     = x;
    1664:	10 92 c7 30 	sts	0x30C7, r1	; 0x8030c7 <USART_0_tx_head>
	USART_0_tx_elements = x;
    1668:	10 92 c5 30 	sts	0x30C5, r1	; 0x8030c5 <USART_0_tx_elements>

#if defined(__GNUC__)
	stdout = &USART_0_stream;
    166c:	86 e5       	ldi	r24, 0x56	; 86
    166e:	98 e2       	ldi	r25, 0x28	; 40
    1670:	80 93 f1 30 	sts	0x30F1, r24	; 0x8030f1 <__iob+0x2>
    1674:	90 93 f2 30 	sts	0x30F2, r25	; 0x8030f2 <__iob+0x3>
#endif

	return 0;
}
    1678:	80 e0       	ldi	r24, 0x00	; 0
    167a:	08 95       	ret

0000167c <memcpy>:
    167c:	fb 01       	movw	r30, r22
    167e:	dc 01       	movw	r26, r24
    1680:	02 c0       	rjmp	.+4      	; 0x1686 <memcpy+0xa>
    1682:	01 90       	ld	r0, Z+
    1684:	0d 92       	st	X+, r0
    1686:	41 50       	subi	r20, 0x01	; 1
    1688:	50 40       	sbci	r21, 0x00	; 0
    168a:	d8 f7       	brcc	.-10     	; 0x1682 <memcpy+0x6>
    168c:	08 95       	ret

0000168e <strcmp>:
    168e:	fb 01       	movw	r30, r22
    1690:	dc 01       	movw	r26, r24
    1692:	8d 91       	ld	r24, X+
    1694:	01 90       	ld	r0, Z+
    1696:	80 19       	sub	r24, r0
    1698:	01 10       	cpse	r0, r1
    169a:	d9 f3       	breq	.-10     	; 0x1692 <strcmp+0x4>
    169c:	99 0b       	sbc	r25, r25
    169e:	08 95       	ret

000016a0 <printf>:
    16a0:	a0 e0       	ldi	r26, 0x00	; 0
    16a2:	b0 e0       	ldi	r27, 0x00	; 0
    16a4:	e6 e5       	ldi	r30, 0x56	; 86
    16a6:	fb e0       	ldi	r31, 0x0B	; 11
    16a8:	0c 94 07 0e 	jmp	0x1c0e	; 0x1c0e <__prologue_saves__+0x20>
    16ac:	ae 01       	movw	r20, r28
    16ae:	4b 5f       	subi	r20, 0xFB	; 251
    16b0:	5f 4f       	sbci	r21, 0xFF	; 255
    16b2:	fa 01       	movw	r30, r20
    16b4:	61 91       	ld	r22, Z+
    16b6:	71 91       	ld	r23, Z+
    16b8:	af 01       	movw	r20, r30
    16ba:	80 91 f1 30 	lds	r24, 0x30F1	; 0x8030f1 <__iob+0x2>
    16be:	90 91 f2 30 	lds	r25, 0x30F2	; 0x8030f2 <__iob+0x3>
    16c2:	0e 94 66 0b 	call	0x16cc	; 0x16cc <vfprintf>
    16c6:	e2 e0       	ldi	r30, 0x02	; 2
    16c8:	0c 94 20 0e 	jmp	0x1c40	; 0x1c40 <__epilogue_restores__+0x20>

000016cc <vfprintf>:
    16cc:	ab e0       	ldi	r26, 0x0B	; 11
    16ce:	b0 e0       	ldi	r27, 0x00	; 0
    16d0:	ec e6       	ldi	r30, 0x6C	; 108
    16d2:	fb e0       	ldi	r31, 0x0B	; 11
    16d4:	0c 94 f7 0d 	jmp	0x1bee	; 0x1bee <__prologue_saves__>
    16d8:	6c 01       	movw	r12, r24
    16da:	7b 01       	movw	r14, r22
    16dc:	8a 01       	movw	r16, r20
    16de:	fc 01       	movw	r30, r24
    16e0:	16 82       	std	Z+6, r1	; 0x06
    16e2:	17 82       	std	Z+7, r1	; 0x07
    16e4:	83 81       	ldd	r24, Z+3	; 0x03
    16e6:	81 ff       	sbrs	r24, 1
    16e8:	cc c1       	rjmp	.+920    	; 0x1a82 <vfprintf+0x3b6>
    16ea:	ce 01       	movw	r24, r28
    16ec:	01 96       	adiw	r24, 0x01	; 1
    16ee:	3c 01       	movw	r6, r24
    16f0:	f6 01       	movw	r30, r12
    16f2:	93 81       	ldd	r25, Z+3	; 0x03
    16f4:	f7 01       	movw	r30, r14
    16f6:	93 fd       	sbrc	r25, 3
    16f8:	85 91       	lpm	r24, Z+
    16fa:	93 ff       	sbrs	r25, 3
    16fc:	81 91       	ld	r24, Z+
    16fe:	7f 01       	movw	r14, r30
    1700:	88 23       	and	r24, r24
    1702:	09 f4       	brne	.+2      	; 0x1706 <vfprintf+0x3a>
    1704:	ba c1       	rjmp	.+884    	; 0x1a7a <vfprintf+0x3ae>
    1706:	85 32       	cpi	r24, 0x25	; 37
    1708:	39 f4       	brne	.+14     	; 0x1718 <vfprintf+0x4c>
    170a:	93 fd       	sbrc	r25, 3
    170c:	85 91       	lpm	r24, Z+
    170e:	93 ff       	sbrs	r25, 3
    1710:	81 91       	ld	r24, Z+
    1712:	7f 01       	movw	r14, r30
    1714:	85 32       	cpi	r24, 0x25	; 37
    1716:	29 f4       	brne	.+10     	; 0x1722 <vfprintf+0x56>
    1718:	b6 01       	movw	r22, r12
    171a:	90 e0       	ldi	r25, 0x00	; 0
    171c:	0e 94 5d 0d 	call	0x1aba	; 0x1aba <fputc>
    1720:	e7 cf       	rjmp	.-50     	; 0x16f0 <vfprintf+0x24>
    1722:	91 2c       	mov	r9, r1
    1724:	21 2c       	mov	r2, r1
    1726:	31 2c       	mov	r3, r1
    1728:	ff e1       	ldi	r31, 0x1F	; 31
    172a:	f3 15       	cp	r31, r3
    172c:	d8 f0       	brcs	.+54     	; 0x1764 <vfprintf+0x98>
    172e:	8b 32       	cpi	r24, 0x2B	; 43
    1730:	79 f0       	breq	.+30     	; 0x1750 <vfprintf+0x84>
    1732:	38 f4       	brcc	.+14     	; 0x1742 <vfprintf+0x76>
    1734:	80 32       	cpi	r24, 0x20	; 32
    1736:	79 f0       	breq	.+30     	; 0x1756 <vfprintf+0x8a>
    1738:	83 32       	cpi	r24, 0x23	; 35
    173a:	a1 f4       	brne	.+40     	; 0x1764 <vfprintf+0x98>
    173c:	23 2d       	mov	r18, r3
    173e:	20 61       	ori	r18, 0x10	; 16
    1740:	1d c0       	rjmp	.+58     	; 0x177c <vfprintf+0xb0>
    1742:	8d 32       	cpi	r24, 0x2D	; 45
    1744:	61 f0       	breq	.+24     	; 0x175e <vfprintf+0x92>
    1746:	80 33       	cpi	r24, 0x30	; 48
    1748:	69 f4       	brne	.+26     	; 0x1764 <vfprintf+0x98>
    174a:	23 2d       	mov	r18, r3
    174c:	21 60       	ori	r18, 0x01	; 1
    174e:	16 c0       	rjmp	.+44     	; 0x177c <vfprintf+0xb0>
    1750:	83 2d       	mov	r24, r3
    1752:	82 60       	ori	r24, 0x02	; 2
    1754:	38 2e       	mov	r3, r24
    1756:	e3 2d       	mov	r30, r3
    1758:	e4 60       	ori	r30, 0x04	; 4
    175a:	3e 2e       	mov	r3, r30
    175c:	2a c0       	rjmp	.+84     	; 0x17b2 <vfprintf+0xe6>
    175e:	f3 2d       	mov	r31, r3
    1760:	f8 60       	ori	r31, 0x08	; 8
    1762:	1d c0       	rjmp	.+58     	; 0x179e <vfprintf+0xd2>
    1764:	37 fc       	sbrc	r3, 7
    1766:	2d c0       	rjmp	.+90     	; 0x17c2 <vfprintf+0xf6>
    1768:	20 ed       	ldi	r18, 0xD0	; 208
    176a:	28 0f       	add	r18, r24
    176c:	2a 30       	cpi	r18, 0x0A	; 10
    176e:	40 f0       	brcs	.+16     	; 0x1780 <vfprintf+0xb4>
    1770:	8e 32       	cpi	r24, 0x2E	; 46
    1772:	b9 f4       	brne	.+46     	; 0x17a2 <vfprintf+0xd6>
    1774:	36 fc       	sbrc	r3, 6
    1776:	81 c1       	rjmp	.+770    	; 0x1a7a <vfprintf+0x3ae>
    1778:	23 2d       	mov	r18, r3
    177a:	20 64       	ori	r18, 0x40	; 64
    177c:	32 2e       	mov	r3, r18
    177e:	19 c0       	rjmp	.+50     	; 0x17b2 <vfprintf+0xe6>
    1780:	36 fe       	sbrs	r3, 6
    1782:	06 c0       	rjmp	.+12     	; 0x1790 <vfprintf+0xc4>
    1784:	8a e0       	ldi	r24, 0x0A	; 10
    1786:	98 9e       	mul	r9, r24
    1788:	20 0d       	add	r18, r0
    178a:	11 24       	eor	r1, r1
    178c:	92 2e       	mov	r9, r18
    178e:	11 c0       	rjmp	.+34     	; 0x17b2 <vfprintf+0xe6>
    1790:	ea e0       	ldi	r30, 0x0A	; 10
    1792:	2e 9e       	mul	r2, r30
    1794:	20 0d       	add	r18, r0
    1796:	11 24       	eor	r1, r1
    1798:	22 2e       	mov	r2, r18
    179a:	f3 2d       	mov	r31, r3
    179c:	f0 62       	ori	r31, 0x20	; 32
    179e:	3f 2e       	mov	r3, r31
    17a0:	08 c0       	rjmp	.+16     	; 0x17b2 <vfprintf+0xe6>
    17a2:	8c 36       	cpi	r24, 0x6C	; 108
    17a4:	21 f4       	brne	.+8      	; 0x17ae <vfprintf+0xe2>
    17a6:	83 2d       	mov	r24, r3
    17a8:	80 68       	ori	r24, 0x80	; 128
    17aa:	38 2e       	mov	r3, r24
    17ac:	02 c0       	rjmp	.+4      	; 0x17b2 <vfprintf+0xe6>
    17ae:	88 36       	cpi	r24, 0x68	; 104
    17b0:	41 f4       	brne	.+16     	; 0x17c2 <vfprintf+0xf6>
    17b2:	f7 01       	movw	r30, r14
    17b4:	93 fd       	sbrc	r25, 3
    17b6:	85 91       	lpm	r24, Z+
    17b8:	93 ff       	sbrs	r25, 3
    17ba:	81 91       	ld	r24, Z+
    17bc:	7f 01       	movw	r14, r30
    17be:	81 11       	cpse	r24, r1
    17c0:	b3 cf       	rjmp	.-154    	; 0x1728 <vfprintf+0x5c>
    17c2:	98 2f       	mov	r25, r24
    17c4:	9f 7d       	andi	r25, 0xDF	; 223
    17c6:	95 54       	subi	r25, 0x45	; 69
    17c8:	93 30       	cpi	r25, 0x03	; 3
    17ca:	28 f4       	brcc	.+10     	; 0x17d6 <vfprintf+0x10a>
    17cc:	0c 5f       	subi	r16, 0xFC	; 252
    17ce:	1f 4f       	sbci	r17, 0xFF	; 255
    17d0:	9f e3       	ldi	r25, 0x3F	; 63
    17d2:	99 83       	std	Y+1, r25	; 0x01
    17d4:	0d c0       	rjmp	.+26     	; 0x17f0 <vfprintf+0x124>
    17d6:	83 36       	cpi	r24, 0x63	; 99
    17d8:	31 f0       	breq	.+12     	; 0x17e6 <vfprintf+0x11a>
    17da:	83 37       	cpi	r24, 0x73	; 115
    17dc:	71 f0       	breq	.+28     	; 0x17fa <vfprintf+0x12e>
    17de:	83 35       	cpi	r24, 0x53	; 83
    17e0:	09 f0       	breq	.+2      	; 0x17e4 <vfprintf+0x118>
    17e2:	59 c0       	rjmp	.+178    	; 0x1896 <vfprintf+0x1ca>
    17e4:	21 c0       	rjmp	.+66     	; 0x1828 <vfprintf+0x15c>
    17e6:	f8 01       	movw	r30, r16
    17e8:	80 81       	ld	r24, Z
    17ea:	89 83       	std	Y+1, r24	; 0x01
    17ec:	0e 5f       	subi	r16, 0xFE	; 254
    17ee:	1f 4f       	sbci	r17, 0xFF	; 255
    17f0:	88 24       	eor	r8, r8
    17f2:	83 94       	inc	r8
    17f4:	91 2c       	mov	r9, r1
    17f6:	53 01       	movw	r10, r6
    17f8:	13 c0       	rjmp	.+38     	; 0x1820 <vfprintf+0x154>
    17fa:	28 01       	movw	r4, r16
    17fc:	f2 e0       	ldi	r31, 0x02	; 2
    17fe:	4f 0e       	add	r4, r31
    1800:	51 1c       	adc	r5, r1
    1802:	f8 01       	movw	r30, r16
    1804:	a0 80       	ld	r10, Z
    1806:	b1 80       	ldd	r11, Z+1	; 0x01
    1808:	36 fe       	sbrs	r3, 6
    180a:	03 c0       	rjmp	.+6      	; 0x1812 <vfprintf+0x146>
    180c:	69 2d       	mov	r22, r9
    180e:	70 e0       	ldi	r23, 0x00	; 0
    1810:	02 c0       	rjmp	.+4      	; 0x1816 <vfprintf+0x14a>
    1812:	6f ef       	ldi	r22, 0xFF	; 255
    1814:	7f ef       	ldi	r23, 0xFF	; 255
    1816:	c5 01       	movw	r24, r10
    1818:	0e 94 52 0d 	call	0x1aa4	; 0x1aa4 <strnlen>
    181c:	4c 01       	movw	r8, r24
    181e:	82 01       	movw	r16, r4
    1820:	f3 2d       	mov	r31, r3
    1822:	ff 77       	andi	r31, 0x7F	; 127
    1824:	3f 2e       	mov	r3, r31
    1826:	16 c0       	rjmp	.+44     	; 0x1854 <vfprintf+0x188>
    1828:	28 01       	movw	r4, r16
    182a:	22 e0       	ldi	r18, 0x02	; 2
    182c:	42 0e       	add	r4, r18
    182e:	51 1c       	adc	r5, r1
    1830:	f8 01       	movw	r30, r16
    1832:	a0 80       	ld	r10, Z
    1834:	b1 80       	ldd	r11, Z+1	; 0x01
    1836:	36 fe       	sbrs	r3, 6
    1838:	03 c0       	rjmp	.+6      	; 0x1840 <vfprintf+0x174>
    183a:	69 2d       	mov	r22, r9
    183c:	70 e0       	ldi	r23, 0x00	; 0
    183e:	02 c0       	rjmp	.+4      	; 0x1844 <vfprintf+0x178>
    1840:	6f ef       	ldi	r22, 0xFF	; 255
    1842:	7f ef       	ldi	r23, 0xFF	; 255
    1844:	c5 01       	movw	r24, r10
    1846:	0e 94 47 0d 	call	0x1a8e	; 0x1a8e <strnlen_P>
    184a:	4c 01       	movw	r8, r24
    184c:	f3 2d       	mov	r31, r3
    184e:	f0 68       	ori	r31, 0x80	; 128
    1850:	3f 2e       	mov	r3, r31
    1852:	82 01       	movw	r16, r4
    1854:	33 fc       	sbrc	r3, 3
    1856:	1b c0       	rjmp	.+54     	; 0x188e <vfprintf+0x1c2>
    1858:	82 2d       	mov	r24, r2
    185a:	90 e0       	ldi	r25, 0x00	; 0
    185c:	88 16       	cp	r8, r24
    185e:	99 06       	cpc	r9, r25
    1860:	b0 f4       	brcc	.+44     	; 0x188e <vfprintf+0x1c2>
    1862:	b6 01       	movw	r22, r12
    1864:	80 e2       	ldi	r24, 0x20	; 32
    1866:	90 e0       	ldi	r25, 0x00	; 0
    1868:	0e 94 5d 0d 	call	0x1aba	; 0x1aba <fputc>
    186c:	2a 94       	dec	r2
    186e:	f4 cf       	rjmp	.-24     	; 0x1858 <vfprintf+0x18c>
    1870:	f5 01       	movw	r30, r10
    1872:	37 fc       	sbrc	r3, 7
    1874:	85 91       	lpm	r24, Z+
    1876:	37 fe       	sbrs	r3, 7
    1878:	81 91       	ld	r24, Z+
    187a:	5f 01       	movw	r10, r30
    187c:	b6 01       	movw	r22, r12
    187e:	90 e0       	ldi	r25, 0x00	; 0
    1880:	0e 94 5d 0d 	call	0x1aba	; 0x1aba <fputc>
    1884:	21 10       	cpse	r2, r1
    1886:	2a 94       	dec	r2
    1888:	21 e0       	ldi	r18, 0x01	; 1
    188a:	82 1a       	sub	r8, r18
    188c:	91 08       	sbc	r9, r1
    188e:	81 14       	cp	r8, r1
    1890:	91 04       	cpc	r9, r1
    1892:	71 f7       	brne	.-36     	; 0x1870 <vfprintf+0x1a4>
    1894:	e8 c0       	rjmp	.+464    	; 0x1a66 <vfprintf+0x39a>
    1896:	84 36       	cpi	r24, 0x64	; 100
    1898:	11 f0       	breq	.+4      	; 0x189e <vfprintf+0x1d2>
    189a:	89 36       	cpi	r24, 0x69	; 105
    189c:	41 f5       	brne	.+80     	; 0x18ee <vfprintf+0x222>
    189e:	f8 01       	movw	r30, r16
    18a0:	37 fe       	sbrs	r3, 7
    18a2:	07 c0       	rjmp	.+14     	; 0x18b2 <vfprintf+0x1e6>
    18a4:	60 81       	ld	r22, Z
    18a6:	71 81       	ldd	r23, Z+1	; 0x01
    18a8:	82 81       	ldd	r24, Z+2	; 0x02
    18aa:	93 81       	ldd	r25, Z+3	; 0x03
    18ac:	0c 5f       	subi	r16, 0xFC	; 252
    18ae:	1f 4f       	sbci	r17, 0xFF	; 255
    18b0:	08 c0       	rjmp	.+16     	; 0x18c2 <vfprintf+0x1f6>
    18b2:	60 81       	ld	r22, Z
    18b4:	71 81       	ldd	r23, Z+1	; 0x01
    18b6:	07 2e       	mov	r0, r23
    18b8:	00 0c       	add	r0, r0
    18ba:	88 0b       	sbc	r24, r24
    18bc:	99 0b       	sbc	r25, r25
    18be:	0e 5f       	subi	r16, 0xFE	; 254
    18c0:	1f 4f       	sbci	r17, 0xFF	; 255
    18c2:	f3 2d       	mov	r31, r3
    18c4:	ff 76       	andi	r31, 0x6F	; 111
    18c6:	3f 2e       	mov	r3, r31
    18c8:	97 ff       	sbrs	r25, 7
    18ca:	09 c0       	rjmp	.+18     	; 0x18de <vfprintf+0x212>
    18cc:	90 95       	com	r25
    18ce:	80 95       	com	r24
    18d0:	70 95       	com	r23
    18d2:	61 95       	neg	r22
    18d4:	7f 4f       	sbci	r23, 0xFF	; 255
    18d6:	8f 4f       	sbci	r24, 0xFF	; 255
    18d8:	9f 4f       	sbci	r25, 0xFF	; 255
    18da:	f0 68       	ori	r31, 0x80	; 128
    18dc:	3f 2e       	mov	r3, r31
    18de:	2a e0       	ldi	r18, 0x0A	; 10
    18e0:	30 e0       	ldi	r19, 0x00	; 0
    18e2:	a3 01       	movw	r20, r6
    18e4:	0e 94 99 0d 	call	0x1b32	; 0x1b32 <__ultoa_invert>
    18e8:	88 2e       	mov	r8, r24
    18ea:	86 18       	sub	r8, r6
    18ec:	45 c0       	rjmp	.+138    	; 0x1978 <vfprintf+0x2ac>
    18ee:	85 37       	cpi	r24, 0x75	; 117
    18f0:	31 f4       	brne	.+12     	; 0x18fe <vfprintf+0x232>
    18f2:	23 2d       	mov	r18, r3
    18f4:	2f 7e       	andi	r18, 0xEF	; 239
    18f6:	b2 2e       	mov	r11, r18
    18f8:	2a e0       	ldi	r18, 0x0A	; 10
    18fa:	30 e0       	ldi	r19, 0x00	; 0
    18fc:	25 c0       	rjmp	.+74     	; 0x1948 <vfprintf+0x27c>
    18fe:	93 2d       	mov	r25, r3
    1900:	99 7f       	andi	r25, 0xF9	; 249
    1902:	b9 2e       	mov	r11, r25
    1904:	8f 36       	cpi	r24, 0x6F	; 111
    1906:	c1 f0       	breq	.+48     	; 0x1938 <vfprintf+0x26c>
    1908:	18 f4       	brcc	.+6      	; 0x1910 <vfprintf+0x244>
    190a:	88 35       	cpi	r24, 0x58	; 88
    190c:	79 f0       	breq	.+30     	; 0x192c <vfprintf+0x260>
    190e:	b5 c0       	rjmp	.+362    	; 0x1a7a <vfprintf+0x3ae>
    1910:	80 37       	cpi	r24, 0x70	; 112
    1912:	19 f0       	breq	.+6      	; 0x191a <vfprintf+0x24e>
    1914:	88 37       	cpi	r24, 0x78	; 120
    1916:	21 f0       	breq	.+8      	; 0x1920 <vfprintf+0x254>
    1918:	b0 c0       	rjmp	.+352    	; 0x1a7a <vfprintf+0x3ae>
    191a:	e9 2f       	mov	r30, r25
    191c:	e0 61       	ori	r30, 0x10	; 16
    191e:	be 2e       	mov	r11, r30
    1920:	b4 fe       	sbrs	r11, 4
    1922:	0d c0       	rjmp	.+26     	; 0x193e <vfprintf+0x272>
    1924:	fb 2d       	mov	r31, r11
    1926:	f4 60       	ori	r31, 0x04	; 4
    1928:	bf 2e       	mov	r11, r31
    192a:	09 c0       	rjmp	.+18     	; 0x193e <vfprintf+0x272>
    192c:	34 fe       	sbrs	r3, 4
    192e:	0a c0       	rjmp	.+20     	; 0x1944 <vfprintf+0x278>
    1930:	29 2f       	mov	r18, r25
    1932:	26 60       	ori	r18, 0x06	; 6
    1934:	b2 2e       	mov	r11, r18
    1936:	06 c0       	rjmp	.+12     	; 0x1944 <vfprintf+0x278>
    1938:	28 e0       	ldi	r18, 0x08	; 8
    193a:	30 e0       	ldi	r19, 0x00	; 0
    193c:	05 c0       	rjmp	.+10     	; 0x1948 <vfprintf+0x27c>
    193e:	20 e1       	ldi	r18, 0x10	; 16
    1940:	30 e0       	ldi	r19, 0x00	; 0
    1942:	02 c0       	rjmp	.+4      	; 0x1948 <vfprintf+0x27c>
    1944:	20 e1       	ldi	r18, 0x10	; 16
    1946:	32 e0       	ldi	r19, 0x02	; 2
    1948:	f8 01       	movw	r30, r16
    194a:	b7 fe       	sbrs	r11, 7
    194c:	07 c0       	rjmp	.+14     	; 0x195c <vfprintf+0x290>
    194e:	60 81       	ld	r22, Z
    1950:	71 81       	ldd	r23, Z+1	; 0x01
    1952:	82 81       	ldd	r24, Z+2	; 0x02
    1954:	93 81       	ldd	r25, Z+3	; 0x03
    1956:	0c 5f       	subi	r16, 0xFC	; 252
    1958:	1f 4f       	sbci	r17, 0xFF	; 255
    195a:	06 c0       	rjmp	.+12     	; 0x1968 <vfprintf+0x29c>
    195c:	60 81       	ld	r22, Z
    195e:	71 81       	ldd	r23, Z+1	; 0x01
    1960:	80 e0       	ldi	r24, 0x00	; 0
    1962:	90 e0       	ldi	r25, 0x00	; 0
    1964:	0e 5f       	subi	r16, 0xFE	; 254
    1966:	1f 4f       	sbci	r17, 0xFF	; 255
    1968:	a3 01       	movw	r20, r6
    196a:	0e 94 99 0d 	call	0x1b32	; 0x1b32 <__ultoa_invert>
    196e:	88 2e       	mov	r8, r24
    1970:	86 18       	sub	r8, r6
    1972:	fb 2d       	mov	r31, r11
    1974:	ff 77       	andi	r31, 0x7F	; 127
    1976:	3f 2e       	mov	r3, r31
    1978:	36 fe       	sbrs	r3, 6
    197a:	0d c0       	rjmp	.+26     	; 0x1996 <vfprintf+0x2ca>
    197c:	23 2d       	mov	r18, r3
    197e:	2e 7f       	andi	r18, 0xFE	; 254
    1980:	a2 2e       	mov	r10, r18
    1982:	89 14       	cp	r8, r9
    1984:	58 f4       	brcc	.+22     	; 0x199c <vfprintf+0x2d0>
    1986:	34 fe       	sbrs	r3, 4
    1988:	0b c0       	rjmp	.+22     	; 0x19a0 <vfprintf+0x2d4>
    198a:	32 fc       	sbrc	r3, 2
    198c:	09 c0       	rjmp	.+18     	; 0x19a0 <vfprintf+0x2d4>
    198e:	83 2d       	mov	r24, r3
    1990:	8e 7e       	andi	r24, 0xEE	; 238
    1992:	a8 2e       	mov	r10, r24
    1994:	05 c0       	rjmp	.+10     	; 0x19a0 <vfprintf+0x2d4>
    1996:	b8 2c       	mov	r11, r8
    1998:	a3 2c       	mov	r10, r3
    199a:	03 c0       	rjmp	.+6      	; 0x19a2 <vfprintf+0x2d6>
    199c:	b8 2c       	mov	r11, r8
    199e:	01 c0       	rjmp	.+2      	; 0x19a2 <vfprintf+0x2d6>
    19a0:	b9 2c       	mov	r11, r9
    19a2:	a4 fe       	sbrs	r10, 4
    19a4:	0f c0       	rjmp	.+30     	; 0x19c4 <vfprintf+0x2f8>
    19a6:	fe 01       	movw	r30, r28
    19a8:	e8 0d       	add	r30, r8
    19aa:	f1 1d       	adc	r31, r1
    19ac:	80 81       	ld	r24, Z
    19ae:	80 33       	cpi	r24, 0x30	; 48
    19b0:	21 f4       	brne	.+8      	; 0x19ba <vfprintf+0x2ee>
    19b2:	9a 2d       	mov	r25, r10
    19b4:	99 7e       	andi	r25, 0xE9	; 233
    19b6:	a9 2e       	mov	r10, r25
    19b8:	09 c0       	rjmp	.+18     	; 0x19cc <vfprintf+0x300>
    19ba:	a2 fe       	sbrs	r10, 2
    19bc:	06 c0       	rjmp	.+12     	; 0x19ca <vfprintf+0x2fe>
    19be:	b3 94       	inc	r11
    19c0:	b3 94       	inc	r11
    19c2:	04 c0       	rjmp	.+8      	; 0x19cc <vfprintf+0x300>
    19c4:	8a 2d       	mov	r24, r10
    19c6:	86 78       	andi	r24, 0x86	; 134
    19c8:	09 f0       	breq	.+2      	; 0x19cc <vfprintf+0x300>
    19ca:	b3 94       	inc	r11
    19cc:	a3 fc       	sbrc	r10, 3
    19ce:	11 c0       	rjmp	.+34     	; 0x19f2 <vfprintf+0x326>
    19d0:	a0 fe       	sbrs	r10, 0
    19d2:	06 c0       	rjmp	.+12     	; 0x19e0 <vfprintf+0x314>
    19d4:	b2 14       	cp	r11, r2
    19d6:	88 f4       	brcc	.+34     	; 0x19fa <vfprintf+0x32e>
    19d8:	28 0c       	add	r2, r8
    19da:	92 2c       	mov	r9, r2
    19dc:	9b 18       	sub	r9, r11
    19de:	0e c0       	rjmp	.+28     	; 0x19fc <vfprintf+0x330>
    19e0:	b2 14       	cp	r11, r2
    19e2:	60 f4       	brcc	.+24     	; 0x19fc <vfprintf+0x330>
    19e4:	b6 01       	movw	r22, r12
    19e6:	80 e2       	ldi	r24, 0x20	; 32
    19e8:	90 e0       	ldi	r25, 0x00	; 0
    19ea:	0e 94 5d 0d 	call	0x1aba	; 0x1aba <fputc>
    19ee:	b3 94       	inc	r11
    19f0:	f7 cf       	rjmp	.-18     	; 0x19e0 <vfprintf+0x314>
    19f2:	b2 14       	cp	r11, r2
    19f4:	18 f4       	brcc	.+6      	; 0x19fc <vfprintf+0x330>
    19f6:	2b 18       	sub	r2, r11
    19f8:	02 c0       	rjmp	.+4      	; 0x19fe <vfprintf+0x332>
    19fa:	98 2c       	mov	r9, r8
    19fc:	21 2c       	mov	r2, r1
    19fe:	a4 fe       	sbrs	r10, 4
    1a00:	10 c0       	rjmp	.+32     	; 0x1a22 <vfprintf+0x356>
    1a02:	b6 01       	movw	r22, r12
    1a04:	80 e3       	ldi	r24, 0x30	; 48
    1a06:	90 e0       	ldi	r25, 0x00	; 0
    1a08:	0e 94 5d 0d 	call	0x1aba	; 0x1aba <fputc>
    1a0c:	a2 fe       	sbrs	r10, 2
    1a0e:	17 c0       	rjmp	.+46     	; 0x1a3e <vfprintf+0x372>
    1a10:	a1 fc       	sbrc	r10, 1
    1a12:	03 c0       	rjmp	.+6      	; 0x1a1a <vfprintf+0x34e>
    1a14:	88 e7       	ldi	r24, 0x78	; 120
    1a16:	90 e0       	ldi	r25, 0x00	; 0
    1a18:	02 c0       	rjmp	.+4      	; 0x1a1e <vfprintf+0x352>
    1a1a:	88 e5       	ldi	r24, 0x58	; 88
    1a1c:	90 e0       	ldi	r25, 0x00	; 0
    1a1e:	b6 01       	movw	r22, r12
    1a20:	0c c0       	rjmp	.+24     	; 0x1a3a <vfprintf+0x36e>
    1a22:	8a 2d       	mov	r24, r10
    1a24:	86 78       	andi	r24, 0x86	; 134
    1a26:	59 f0       	breq	.+22     	; 0x1a3e <vfprintf+0x372>
    1a28:	a1 fe       	sbrs	r10, 1
    1a2a:	02 c0       	rjmp	.+4      	; 0x1a30 <vfprintf+0x364>
    1a2c:	8b e2       	ldi	r24, 0x2B	; 43
    1a2e:	01 c0       	rjmp	.+2      	; 0x1a32 <vfprintf+0x366>
    1a30:	80 e2       	ldi	r24, 0x20	; 32
    1a32:	a7 fc       	sbrc	r10, 7
    1a34:	8d e2       	ldi	r24, 0x2D	; 45
    1a36:	b6 01       	movw	r22, r12
    1a38:	90 e0       	ldi	r25, 0x00	; 0
    1a3a:	0e 94 5d 0d 	call	0x1aba	; 0x1aba <fputc>
    1a3e:	89 14       	cp	r8, r9
    1a40:	38 f4       	brcc	.+14     	; 0x1a50 <vfprintf+0x384>
    1a42:	b6 01       	movw	r22, r12
    1a44:	80 e3       	ldi	r24, 0x30	; 48
    1a46:	90 e0       	ldi	r25, 0x00	; 0
    1a48:	0e 94 5d 0d 	call	0x1aba	; 0x1aba <fputc>
    1a4c:	9a 94       	dec	r9
    1a4e:	f7 cf       	rjmp	.-18     	; 0x1a3e <vfprintf+0x372>
    1a50:	8a 94       	dec	r8
    1a52:	f3 01       	movw	r30, r6
    1a54:	e8 0d       	add	r30, r8
    1a56:	f1 1d       	adc	r31, r1
    1a58:	80 81       	ld	r24, Z
    1a5a:	b6 01       	movw	r22, r12
    1a5c:	90 e0       	ldi	r25, 0x00	; 0
    1a5e:	0e 94 5d 0d 	call	0x1aba	; 0x1aba <fputc>
    1a62:	81 10       	cpse	r8, r1
    1a64:	f5 cf       	rjmp	.-22     	; 0x1a50 <vfprintf+0x384>
    1a66:	22 20       	and	r2, r2
    1a68:	09 f4       	brne	.+2      	; 0x1a6c <vfprintf+0x3a0>
    1a6a:	42 ce       	rjmp	.-892    	; 0x16f0 <vfprintf+0x24>
    1a6c:	b6 01       	movw	r22, r12
    1a6e:	80 e2       	ldi	r24, 0x20	; 32
    1a70:	90 e0       	ldi	r25, 0x00	; 0
    1a72:	0e 94 5d 0d 	call	0x1aba	; 0x1aba <fputc>
    1a76:	2a 94       	dec	r2
    1a78:	f6 cf       	rjmp	.-20     	; 0x1a66 <vfprintf+0x39a>
    1a7a:	f6 01       	movw	r30, r12
    1a7c:	86 81       	ldd	r24, Z+6	; 0x06
    1a7e:	97 81       	ldd	r25, Z+7	; 0x07
    1a80:	02 c0       	rjmp	.+4      	; 0x1a86 <vfprintf+0x3ba>
    1a82:	8f ef       	ldi	r24, 0xFF	; 255
    1a84:	9f ef       	ldi	r25, 0xFF	; 255
    1a86:	2b 96       	adiw	r28, 0x0b	; 11
    1a88:	e2 e1       	ldi	r30, 0x12	; 18
    1a8a:	0c 94 10 0e 	jmp	0x1c20	; 0x1c20 <__epilogue_restores__>

00001a8e <strnlen_P>:
    1a8e:	fc 01       	movw	r30, r24
    1a90:	05 90       	lpm	r0, Z+
    1a92:	61 50       	subi	r22, 0x01	; 1
    1a94:	70 40       	sbci	r23, 0x00	; 0
    1a96:	01 10       	cpse	r0, r1
    1a98:	d8 f7       	brcc	.-10     	; 0x1a90 <strnlen_P+0x2>
    1a9a:	80 95       	com	r24
    1a9c:	90 95       	com	r25
    1a9e:	8e 0f       	add	r24, r30
    1aa0:	9f 1f       	adc	r25, r31
    1aa2:	08 95       	ret

00001aa4 <strnlen>:
    1aa4:	fc 01       	movw	r30, r24
    1aa6:	61 50       	subi	r22, 0x01	; 1
    1aa8:	70 40       	sbci	r23, 0x00	; 0
    1aaa:	01 90       	ld	r0, Z+
    1aac:	01 10       	cpse	r0, r1
    1aae:	d8 f7       	brcc	.-10     	; 0x1aa6 <strnlen+0x2>
    1ab0:	80 95       	com	r24
    1ab2:	90 95       	com	r25
    1ab4:	8e 0f       	add	r24, r30
    1ab6:	9f 1f       	adc	r25, r31
    1ab8:	08 95       	ret

00001aba <fputc>:
    1aba:	0f 93       	push	r16
    1abc:	1f 93       	push	r17
    1abe:	cf 93       	push	r28
    1ac0:	df 93       	push	r29
    1ac2:	fb 01       	movw	r30, r22
    1ac4:	23 81       	ldd	r18, Z+3	; 0x03
    1ac6:	21 fd       	sbrc	r18, 1
    1ac8:	03 c0       	rjmp	.+6      	; 0x1ad0 <fputc+0x16>
    1aca:	8f ef       	ldi	r24, 0xFF	; 255
    1acc:	9f ef       	ldi	r25, 0xFF	; 255
    1ace:	2c c0       	rjmp	.+88     	; 0x1b28 <fputc+0x6e>
    1ad0:	22 ff       	sbrs	r18, 2
    1ad2:	16 c0       	rjmp	.+44     	; 0x1b00 <fputc+0x46>
    1ad4:	46 81       	ldd	r20, Z+6	; 0x06
    1ad6:	57 81       	ldd	r21, Z+7	; 0x07
    1ad8:	24 81       	ldd	r18, Z+4	; 0x04
    1ada:	35 81       	ldd	r19, Z+5	; 0x05
    1adc:	42 17       	cp	r20, r18
    1ade:	53 07       	cpc	r21, r19
    1ae0:	44 f4       	brge	.+16     	; 0x1af2 <fputc+0x38>
    1ae2:	a0 81       	ld	r26, Z
    1ae4:	b1 81       	ldd	r27, Z+1	; 0x01
    1ae6:	9d 01       	movw	r18, r26
    1ae8:	2f 5f       	subi	r18, 0xFF	; 255
    1aea:	3f 4f       	sbci	r19, 0xFF	; 255
    1aec:	20 83       	st	Z, r18
    1aee:	31 83       	std	Z+1, r19	; 0x01
    1af0:	8c 93       	st	X, r24
    1af2:	26 81       	ldd	r18, Z+6	; 0x06
    1af4:	37 81       	ldd	r19, Z+7	; 0x07
    1af6:	2f 5f       	subi	r18, 0xFF	; 255
    1af8:	3f 4f       	sbci	r19, 0xFF	; 255
    1afa:	26 83       	std	Z+6, r18	; 0x06
    1afc:	37 83       	std	Z+7, r19	; 0x07
    1afe:	14 c0       	rjmp	.+40     	; 0x1b28 <fputc+0x6e>
    1b00:	8b 01       	movw	r16, r22
    1b02:	ec 01       	movw	r28, r24
    1b04:	fb 01       	movw	r30, r22
    1b06:	00 84       	ldd	r0, Z+8	; 0x08
    1b08:	f1 85       	ldd	r31, Z+9	; 0x09
    1b0a:	e0 2d       	mov	r30, r0
    1b0c:	09 95       	icall
    1b0e:	89 2b       	or	r24, r25
    1b10:	e1 f6       	brne	.-72     	; 0x1aca <fputc+0x10>
    1b12:	d8 01       	movw	r26, r16
    1b14:	16 96       	adiw	r26, 0x06	; 6
    1b16:	8d 91       	ld	r24, X+
    1b18:	9c 91       	ld	r25, X
    1b1a:	17 97       	sbiw	r26, 0x07	; 7
    1b1c:	01 96       	adiw	r24, 0x01	; 1
    1b1e:	16 96       	adiw	r26, 0x06	; 6
    1b20:	8d 93       	st	X+, r24
    1b22:	9c 93       	st	X, r25
    1b24:	17 97       	sbiw	r26, 0x07	; 7
    1b26:	ce 01       	movw	r24, r28
    1b28:	df 91       	pop	r29
    1b2a:	cf 91       	pop	r28
    1b2c:	1f 91       	pop	r17
    1b2e:	0f 91       	pop	r16
    1b30:	08 95       	ret

00001b32 <__ultoa_invert>:
    1b32:	fa 01       	movw	r30, r20
    1b34:	aa 27       	eor	r26, r26
    1b36:	28 30       	cpi	r18, 0x08	; 8
    1b38:	51 f1       	breq	.+84     	; 0x1b8e <__ultoa_invert+0x5c>
    1b3a:	20 31       	cpi	r18, 0x10	; 16
    1b3c:	81 f1       	breq	.+96     	; 0x1b9e <__ultoa_invert+0x6c>
    1b3e:	e8 94       	clt
    1b40:	6f 93       	push	r22
    1b42:	6e 7f       	andi	r22, 0xFE	; 254
    1b44:	6e 5f       	subi	r22, 0xFE	; 254
    1b46:	7f 4f       	sbci	r23, 0xFF	; 255
    1b48:	8f 4f       	sbci	r24, 0xFF	; 255
    1b4a:	9f 4f       	sbci	r25, 0xFF	; 255
    1b4c:	af 4f       	sbci	r26, 0xFF	; 255
    1b4e:	b1 e0       	ldi	r27, 0x01	; 1
    1b50:	3e d0       	rcall	.+124    	; 0x1bce <__ultoa_invert+0x9c>
    1b52:	b4 e0       	ldi	r27, 0x04	; 4
    1b54:	3c d0       	rcall	.+120    	; 0x1bce <__ultoa_invert+0x9c>
    1b56:	67 0f       	add	r22, r23
    1b58:	78 1f       	adc	r23, r24
    1b5a:	89 1f       	adc	r24, r25
    1b5c:	9a 1f       	adc	r25, r26
    1b5e:	a1 1d       	adc	r26, r1
    1b60:	68 0f       	add	r22, r24
    1b62:	79 1f       	adc	r23, r25
    1b64:	8a 1f       	adc	r24, r26
    1b66:	91 1d       	adc	r25, r1
    1b68:	a1 1d       	adc	r26, r1
    1b6a:	6a 0f       	add	r22, r26
    1b6c:	71 1d       	adc	r23, r1
    1b6e:	81 1d       	adc	r24, r1
    1b70:	91 1d       	adc	r25, r1
    1b72:	a1 1d       	adc	r26, r1
    1b74:	20 d0       	rcall	.+64     	; 0x1bb6 <__ultoa_invert+0x84>
    1b76:	09 f4       	brne	.+2      	; 0x1b7a <__ultoa_invert+0x48>
    1b78:	68 94       	set
    1b7a:	3f 91       	pop	r19
    1b7c:	2a e0       	ldi	r18, 0x0A	; 10
    1b7e:	26 9f       	mul	r18, r22
    1b80:	11 24       	eor	r1, r1
    1b82:	30 19       	sub	r19, r0
    1b84:	30 5d       	subi	r19, 0xD0	; 208
    1b86:	31 93       	st	Z+, r19
    1b88:	de f6       	brtc	.-74     	; 0x1b40 <__ultoa_invert+0xe>
    1b8a:	cf 01       	movw	r24, r30
    1b8c:	08 95       	ret
    1b8e:	46 2f       	mov	r20, r22
    1b90:	47 70       	andi	r20, 0x07	; 7
    1b92:	40 5d       	subi	r20, 0xD0	; 208
    1b94:	41 93       	st	Z+, r20
    1b96:	b3 e0       	ldi	r27, 0x03	; 3
    1b98:	0f d0       	rcall	.+30     	; 0x1bb8 <__ultoa_invert+0x86>
    1b9a:	c9 f7       	brne	.-14     	; 0x1b8e <__ultoa_invert+0x5c>
    1b9c:	f6 cf       	rjmp	.-20     	; 0x1b8a <__ultoa_invert+0x58>
    1b9e:	46 2f       	mov	r20, r22
    1ba0:	4f 70       	andi	r20, 0x0F	; 15
    1ba2:	40 5d       	subi	r20, 0xD0	; 208
    1ba4:	4a 33       	cpi	r20, 0x3A	; 58
    1ba6:	18 f0       	brcs	.+6      	; 0x1bae <__ultoa_invert+0x7c>
    1ba8:	49 5d       	subi	r20, 0xD9	; 217
    1baa:	31 fd       	sbrc	r19, 1
    1bac:	40 52       	subi	r20, 0x20	; 32
    1bae:	41 93       	st	Z+, r20
    1bb0:	02 d0       	rcall	.+4      	; 0x1bb6 <__ultoa_invert+0x84>
    1bb2:	a9 f7       	brne	.-22     	; 0x1b9e <__ultoa_invert+0x6c>
    1bb4:	ea cf       	rjmp	.-44     	; 0x1b8a <__ultoa_invert+0x58>
    1bb6:	b4 e0       	ldi	r27, 0x04	; 4
    1bb8:	a6 95       	lsr	r26
    1bba:	97 95       	ror	r25
    1bbc:	87 95       	ror	r24
    1bbe:	77 95       	ror	r23
    1bc0:	67 95       	ror	r22
    1bc2:	ba 95       	dec	r27
    1bc4:	c9 f7       	brne	.-14     	; 0x1bb8 <__ultoa_invert+0x86>
    1bc6:	00 97       	sbiw	r24, 0x00	; 0
    1bc8:	61 05       	cpc	r22, r1
    1bca:	71 05       	cpc	r23, r1
    1bcc:	08 95       	ret
    1bce:	9b 01       	movw	r18, r22
    1bd0:	ac 01       	movw	r20, r24
    1bd2:	0a 2e       	mov	r0, r26
    1bd4:	06 94       	lsr	r0
    1bd6:	57 95       	ror	r21
    1bd8:	47 95       	ror	r20
    1bda:	37 95       	ror	r19
    1bdc:	27 95       	ror	r18
    1bde:	ba 95       	dec	r27
    1be0:	c9 f7       	brne	.-14     	; 0x1bd4 <__ultoa_invert+0xa2>
    1be2:	62 0f       	add	r22, r18
    1be4:	73 1f       	adc	r23, r19
    1be6:	84 1f       	adc	r24, r20
    1be8:	95 1f       	adc	r25, r21
    1bea:	a0 1d       	adc	r26, r0
    1bec:	08 95       	ret

00001bee <__prologue_saves__>:
    1bee:	2f 92       	push	r2
    1bf0:	3f 92       	push	r3
    1bf2:	4f 92       	push	r4
    1bf4:	5f 92       	push	r5
    1bf6:	6f 92       	push	r6
    1bf8:	7f 92       	push	r7
    1bfa:	8f 92       	push	r8
    1bfc:	9f 92       	push	r9
    1bfe:	af 92       	push	r10
    1c00:	bf 92       	push	r11
    1c02:	cf 92       	push	r12
    1c04:	df 92       	push	r13
    1c06:	ef 92       	push	r14
    1c08:	ff 92       	push	r15
    1c0a:	0f 93       	push	r16
    1c0c:	1f 93       	push	r17
    1c0e:	cf 93       	push	r28
    1c10:	df 93       	push	r29
    1c12:	cd b7       	in	r28, 0x3d	; 61
    1c14:	de b7       	in	r29, 0x3e	; 62
    1c16:	ca 1b       	sub	r28, r26
    1c18:	db 0b       	sbc	r29, r27
    1c1a:	cd bf       	out	0x3d, r28	; 61
    1c1c:	de bf       	out	0x3e, r29	; 62
    1c1e:	09 94       	ijmp

00001c20 <__epilogue_restores__>:
    1c20:	2a 88       	ldd	r2, Y+18	; 0x12
    1c22:	39 88       	ldd	r3, Y+17	; 0x11
    1c24:	48 88       	ldd	r4, Y+16	; 0x10
    1c26:	5f 84       	ldd	r5, Y+15	; 0x0f
    1c28:	6e 84       	ldd	r6, Y+14	; 0x0e
    1c2a:	7d 84       	ldd	r7, Y+13	; 0x0d
    1c2c:	8c 84       	ldd	r8, Y+12	; 0x0c
    1c2e:	9b 84       	ldd	r9, Y+11	; 0x0b
    1c30:	aa 84       	ldd	r10, Y+10	; 0x0a
    1c32:	b9 84       	ldd	r11, Y+9	; 0x09
    1c34:	c8 84       	ldd	r12, Y+8	; 0x08
    1c36:	df 80       	ldd	r13, Y+7	; 0x07
    1c38:	ee 80       	ldd	r14, Y+6	; 0x06
    1c3a:	fd 80       	ldd	r15, Y+5	; 0x05
    1c3c:	0c 81       	ldd	r16, Y+4	; 0x04
    1c3e:	1b 81       	ldd	r17, Y+3	; 0x03
    1c40:	aa 81       	ldd	r26, Y+2	; 0x02
    1c42:	b9 81       	ldd	r27, Y+1	; 0x01
    1c44:	ce 0f       	add	r28, r30
    1c46:	d1 1d       	adc	r29, r1
    1c48:	cd bf       	out	0x3d, r28	; 61
    1c4a:	de bf       	out	0x3e, r29	; 62
    1c4c:	ed 01       	movw	r28, r26
    1c4e:	08 95       	ret

00001c50 <_exit>:
    1c50:	f8 94       	cli

00001c52 <__stop_program>:
    1c52:	ff cf       	rjmp	.-2      	; 0x1c52 <__stop_program>
