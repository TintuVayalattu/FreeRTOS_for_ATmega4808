
FreeRTOS4LEDsAVRIoTBoardSTARTcompatible.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000028  00802800  00001b1a  00001bce  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00001b00  00000000  00000000  000000b4  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       0000001a  00005b00  00001b00  00001bb4  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .bss          000008d8  00802828  00802828  00001bf6  2**0
                  ALLOC
  4 .comment      0000008c  00000000  00000000  00001bf6  2**0
                  CONTENTS, READONLY
  5 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00001c84  2**2
                  CONTENTS, READONLY
  6 .debug_aranges 00000498  00000000  00000000  00001cc8  2**3
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_info   00007710  00000000  00000000  00002160  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 000032a3  00000000  00000000  00009870  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_line   00002e43  00000000  00000000  0000cb13  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_frame  00000c40  00000000  00000000  0000f958  2**2
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_str    00002bf9  00000000  00000000  00010598  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_loc    00003fe3  00000000  00000000  00013191  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_ranges 00000450  00000000  00000000  00017174  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 48 00 	jmp	0x90	; 0x90 <__ctors_end>
       4:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
       8:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
       c:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      10:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      14:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      18:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      1c:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      20:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      24:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      28:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      2c:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      30:	0c 94 f0 01 	jmp	0x3e0	; 0x3e0 <__vector_12>
      34:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      38:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      3c:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      40:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      44:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      48:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      4c:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      50:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      54:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      58:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      5c:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      60:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      64:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      68:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      6c:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      70:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      74:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      78:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      7c:	0c 94 09 0a 	jmp	0x1412	; 0x1412 <__vector_31>
      80:	0c 94 32 0a 	jmp	0x1464	; 0x1464 <__vector_32>
      84:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      88:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      8c:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>

00000090 <__ctors_end>:
      90:	11 24       	eor	r1, r1
      92:	1f be       	out	0x3f, r1	; 63
      94:	cf ef       	ldi	r28, 0xFF	; 255
      96:	cd bf       	out	0x3d, r28	; 61
      98:	df e3       	ldi	r29, 0x3F	; 63
      9a:	de bf       	out	0x3e, r29	; 62

0000009c <__do_copy_data>:
      9c:	18 e2       	ldi	r17, 0x28	; 40
      9e:	a0 e0       	ldi	r26, 0x00	; 0
      a0:	b8 e2       	ldi	r27, 0x28	; 40
      a2:	ea e1       	ldi	r30, 0x1A	; 26
      a4:	fb e1       	ldi	r31, 0x1B	; 27
      a6:	02 c0       	rjmp	.+4      	; 0xac <__do_copy_data+0x10>
      a8:	05 90       	lpm	r0, Z+
      aa:	0d 92       	st	X+, r0
      ac:	a8 32       	cpi	r26, 0x28	; 40
      ae:	b1 07       	cpc	r27, r17
      b0:	d9 f7       	brne	.-10     	; 0xa8 <__do_copy_data+0xc>

000000b2 <__do_clear_bss>:
      b2:	21 e3       	ldi	r18, 0x31	; 49
      b4:	a8 e2       	ldi	r26, 0x28	; 40
      b6:	b8 e2       	ldi	r27, 0x28	; 40
      b8:	01 c0       	rjmp	.+2      	; 0xbc <.do_clear_bss_start>

000000ba <.do_clear_bss_loop>:
      ba:	1d 92       	st	X+, r1

000000bc <.do_clear_bss_start>:
      bc:	a0 30       	cpi	r26, 0x00	; 0
      be:	b2 07       	cpc	r27, r18
      c0:	e1 f7       	brne	.-8      	; 0xba <.do_clear_bss_loop>
      c2:	0e 94 ff 08 	call	0x11fe	; 0x11fe <main>
      c6:	0c 94 7e 0d 	jmp	0x1afc	; 0x1afc <_exit>

000000ca <__bad_interrupt>:
      ca:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000ce <atmel_start_init>:
/**
 * Initializes MCU, drivers and middleware in the project
 **/
void atmel_start_init(void)
{
	system_init();
      ce:	0e 94 a3 09 	call	0x1346	; 0x1346 <system_init>
      d2:	08 95       	ret

000000d4 <vListInitialise>:
      d4:	fc 01       	movw	r30, r24
      d6:	03 96       	adiw	r24, 0x03	; 3
      d8:	81 83       	std	Z+1, r24	; 0x01
      da:	92 83       	std	Z+2, r25	; 0x02
      dc:	2f ef       	ldi	r18, 0xFF	; 255
      de:	3f ef       	ldi	r19, 0xFF	; 255
      e0:	23 83       	std	Z+3, r18	; 0x03
      e2:	34 83       	std	Z+4, r19	; 0x04
      e4:	85 83       	std	Z+5, r24	; 0x05
      e6:	96 83       	std	Z+6, r25	; 0x06
      e8:	87 83       	std	Z+7, r24	; 0x07
      ea:	90 87       	std	Z+8, r25	; 0x08
      ec:	10 82       	st	Z, r1
      ee:	08 95       	ret

000000f0 <vListInitialiseItem>:
      f0:	fc 01       	movw	r30, r24
      f2:	10 86       	std	Z+8, r1	; 0x08
      f4:	11 86       	std	Z+9, r1	; 0x09
      f6:	08 95       	ret

000000f8 <vListInsertEnd>:
      f8:	cf 93       	push	r28
      fa:	df 93       	push	r29
      fc:	9c 01       	movw	r18, r24
      fe:	fb 01       	movw	r30, r22
     100:	dc 01       	movw	r26, r24
     102:	11 96       	adiw	r26, 0x01	; 1
     104:	cd 91       	ld	r28, X+
     106:	dc 91       	ld	r29, X
     108:	12 97       	sbiw	r26, 0x02	; 2
     10a:	c2 83       	std	Z+2, r28	; 0x02
     10c:	d3 83       	std	Z+3, r29	; 0x03
     10e:	8c 81       	ldd	r24, Y+4	; 0x04
     110:	9d 81       	ldd	r25, Y+5	; 0x05
     112:	84 83       	std	Z+4, r24	; 0x04
     114:	95 83       	std	Z+5, r25	; 0x05
     116:	8c 81       	ldd	r24, Y+4	; 0x04
     118:	9d 81       	ldd	r25, Y+5	; 0x05
     11a:	dc 01       	movw	r26, r24
     11c:	12 96       	adiw	r26, 0x02	; 2
     11e:	6d 93       	st	X+, r22
     120:	7c 93       	st	X, r23
     122:	13 97       	sbiw	r26, 0x03	; 3
     124:	6c 83       	std	Y+4, r22	; 0x04
     126:	7d 83       	std	Y+5, r23	; 0x05
     128:	20 87       	std	Z+8, r18	; 0x08
     12a:	31 87       	std	Z+9, r19	; 0x09
     12c:	f9 01       	movw	r30, r18
     12e:	80 81       	ld	r24, Z
     130:	8f 5f       	subi	r24, 0xFF	; 255
     132:	80 83       	st	Z, r24
     134:	df 91       	pop	r29
     136:	cf 91       	pop	r28
     138:	08 95       	ret

0000013a <vListInsert>:
     13a:	cf 93       	push	r28
     13c:	df 93       	push	r29
     13e:	eb 01       	movw	r28, r22
     140:	48 81       	ld	r20, Y
     142:	59 81       	ldd	r21, Y+1	; 0x01
     144:	4f 3f       	cpi	r20, 0xFF	; 255
     146:	2f ef       	ldi	r18, 0xFF	; 255
     148:	52 07       	cpc	r21, r18
     14a:	21 f4       	brne	.+8      	; 0x154 <vListInsert+0x1a>
     14c:	fc 01       	movw	r30, r24
     14e:	a7 81       	ldd	r26, Z+7	; 0x07
     150:	b0 85       	ldd	r27, Z+8	; 0x08
     152:	0d c0       	rjmp	.+26     	; 0x16e <vListInsert+0x34>
     154:	dc 01       	movw	r26, r24
     156:	13 96       	adiw	r26, 0x03	; 3
     158:	01 c0       	rjmp	.+2      	; 0x15c <vListInsert+0x22>
     15a:	df 01       	movw	r26, r30
     15c:	12 96       	adiw	r26, 0x02	; 2
     15e:	ed 91       	ld	r30, X+
     160:	fc 91       	ld	r31, X
     162:	13 97       	sbiw	r26, 0x03	; 3
     164:	20 81       	ld	r18, Z
     166:	31 81       	ldd	r19, Z+1	; 0x01
     168:	42 17       	cp	r20, r18
     16a:	53 07       	cpc	r21, r19
     16c:	b0 f7       	brcc	.-20     	; 0x15a <vListInsert+0x20>
     16e:	12 96       	adiw	r26, 0x02	; 2
     170:	ed 91       	ld	r30, X+
     172:	fc 91       	ld	r31, X
     174:	13 97       	sbiw	r26, 0x03	; 3
     176:	ea 83       	std	Y+2, r30	; 0x02
     178:	fb 83       	std	Y+3, r31	; 0x03
     17a:	c4 83       	std	Z+4, r28	; 0x04
     17c:	d5 83       	std	Z+5, r29	; 0x05
     17e:	ac 83       	std	Y+4, r26	; 0x04
     180:	bd 83       	std	Y+5, r27	; 0x05
     182:	12 96       	adiw	r26, 0x02	; 2
     184:	cd 93       	st	X+, r28
     186:	dc 93       	st	X, r29
     188:	13 97       	sbiw	r26, 0x03	; 3
     18a:	88 87       	std	Y+8, r24	; 0x08
     18c:	99 87       	std	Y+9, r25	; 0x09
     18e:	fc 01       	movw	r30, r24
     190:	20 81       	ld	r18, Z
     192:	2f 5f       	subi	r18, 0xFF	; 255
     194:	20 83       	st	Z, r18
     196:	df 91       	pop	r29
     198:	cf 91       	pop	r28
     19a:	08 95       	ret

0000019c <uxListRemove>:
     19c:	cf 93       	push	r28
     19e:	df 93       	push	r29
     1a0:	fc 01       	movw	r30, r24
     1a2:	a0 85       	ldd	r26, Z+8	; 0x08
     1a4:	b1 85       	ldd	r27, Z+9	; 0x09
     1a6:	c2 81       	ldd	r28, Z+2	; 0x02
     1a8:	d3 81       	ldd	r29, Z+3	; 0x03
     1aa:	84 81       	ldd	r24, Z+4	; 0x04
     1ac:	95 81       	ldd	r25, Z+5	; 0x05
     1ae:	8c 83       	std	Y+4, r24	; 0x04
     1b0:	9d 83       	std	Y+5, r25	; 0x05
     1b2:	c4 81       	ldd	r28, Z+4	; 0x04
     1b4:	d5 81       	ldd	r29, Z+5	; 0x05
     1b6:	82 81       	ldd	r24, Z+2	; 0x02
     1b8:	93 81       	ldd	r25, Z+3	; 0x03
     1ba:	8a 83       	std	Y+2, r24	; 0x02
     1bc:	9b 83       	std	Y+3, r25	; 0x03
     1be:	11 96       	adiw	r26, 0x01	; 1
     1c0:	8d 91       	ld	r24, X+
     1c2:	9c 91       	ld	r25, X
     1c4:	12 97       	sbiw	r26, 0x02	; 2
     1c6:	e8 17       	cp	r30, r24
     1c8:	f9 07       	cpc	r31, r25
     1ca:	31 f4       	brne	.+12     	; 0x1d8 <uxListRemove+0x3c>
     1cc:	84 81       	ldd	r24, Z+4	; 0x04
     1ce:	95 81       	ldd	r25, Z+5	; 0x05
     1d0:	11 96       	adiw	r26, 0x01	; 1
     1d2:	8d 93       	st	X+, r24
     1d4:	9c 93       	st	X, r25
     1d6:	12 97       	sbiw	r26, 0x02	; 2
     1d8:	10 86       	std	Z+8, r1	; 0x08
     1da:	11 86       	std	Z+9, r1	; 0x09
     1dc:	8c 91       	ld	r24, X
     1de:	81 50       	subi	r24, 0x01	; 1
     1e0:	8c 93       	st	X, r24
     1e2:	8c 91       	ld	r24, X
     1e4:	df 91       	pop	r29
     1e6:	cf 91       	pop	r28
     1e8:	08 95       	ret

000001ea <pxPortInitialiseStack>:
     1ea:	fc 01       	movw	r30, r24
     1ec:	60 83       	st	Z, r22
     1ee:	31 97       	sbiw	r30, 0x01	; 1
     1f0:	70 83       	st	Z, r23
     1f2:	31 97       	sbiw	r30, 0x01	; 1
     1f4:	10 82       	st	Z, r1
     1f6:	31 97       	sbiw	r30, 0x01	; 1
     1f8:	20 e8       	ldi	r18, 0x80	; 128
     1fa:	20 83       	st	Z, r18
     1fc:	31 97       	sbiw	r30, 0x01	; 1
     1fe:	10 82       	st	Z, r1
     200:	77 97       	sbiw	r30, 0x17	; 23
     202:	40 83       	st	Z, r20
     204:	31 97       	sbiw	r30, 0x01	; 1
     206:	50 83       	st	Z, r21
     208:	83 97       	sbiw	r24, 0x23	; 35
     20a:	08 95       	ret

0000020c <xPortStartScheduler>:
     20c:	e0 e8       	ldi	r30, 0x80	; 128
     20e:	fa e0       	ldi	r31, 0x0A	; 10
     210:	80 e1       	ldi	r24, 0x10	; 16
     212:	97 e2       	ldi	r25, 0x27	; 39
     214:	84 87       	std	Z+12, r24	; 0x0c
     216:	95 87       	std	Z+13, r25	; 0x0d
     218:	81 e0       	ldi	r24, 0x01	; 1
     21a:	85 83       	std	Z+5, r24	; 0x05
     21c:	80 83       	st	Z, r24
     21e:	a0 91 86 30 	lds	r26, 0x3086	; 0x803086 <pxCurrentTCB>
     222:	b0 91 87 30 	lds	r27, 0x3087	; 0x803087 <pxCurrentTCB+0x1>
     226:	cd 91       	ld	r28, X+
     228:	cd bf       	out	0x3d, r28	; 61
     22a:	dd 91       	ld	r29, X+
     22c:	de bf       	out	0x3e, r29	; 62
     22e:	ff 91       	pop	r31
     230:	ef 91       	pop	r30
     232:	df 91       	pop	r29
     234:	cf 91       	pop	r28
     236:	bf 91       	pop	r27
     238:	af 91       	pop	r26
     23a:	9f 91       	pop	r25
     23c:	8f 91       	pop	r24
     23e:	7f 91       	pop	r23
     240:	6f 91       	pop	r22
     242:	5f 91       	pop	r21
     244:	4f 91       	pop	r20
     246:	3f 91       	pop	r19
     248:	2f 91       	pop	r18
     24a:	1f 91       	pop	r17
     24c:	0f 91       	pop	r16
     24e:	ff 90       	pop	r15
     250:	ef 90       	pop	r14
     252:	df 90       	pop	r13
     254:	cf 90       	pop	r12
     256:	bf 90       	pop	r11
     258:	af 90       	pop	r10
     25a:	9f 90       	pop	r9
     25c:	8f 90       	pop	r8
     25e:	7f 90       	pop	r7
     260:	6f 90       	pop	r6
     262:	5f 90       	pop	r5
     264:	4f 90       	pop	r4
     266:	3f 90       	pop	r3
     268:	2f 90       	pop	r2
     26a:	1f 90       	pop	r1
     26c:	0f 90       	pop	r0
     26e:	0f be       	out	0x3f, r0	; 63
     270:	0f 90       	pop	r0
     272:	08 95       	ret
     274:	08 95       	ret

00000276 <vPortYield>:
     276:	0f 92       	push	r0
     278:	0f b6       	in	r0, 0x3f	; 63
     27a:	f8 94       	cli
     27c:	0f 92       	push	r0
     27e:	1f 92       	push	r1
     280:	11 24       	eor	r1, r1
     282:	2f 92       	push	r2
     284:	3f 92       	push	r3
     286:	4f 92       	push	r4
     288:	5f 92       	push	r5
     28a:	6f 92       	push	r6
     28c:	7f 92       	push	r7
     28e:	8f 92       	push	r8
     290:	9f 92       	push	r9
     292:	af 92       	push	r10
     294:	bf 92       	push	r11
     296:	cf 92       	push	r12
     298:	df 92       	push	r13
     29a:	ef 92       	push	r14
     29c:	ff 92       	push	r15
     29e:	0f 93       	push	r16
     2a0:	1f 93       	push	r17
     2a2:	2f 93       	push	r18
     2a4:	3f 93       	push	r19
     2a6:	4f 93       	push	r20
     2a8:	5f 93       	push	r21
     2aa:	6f 93       	push	r22
     2ac:	7f 93       	push	r23
     2ae:	8f 93       	push	r24
     2b0:	9f 93       	push	r25
     2b2:	af 93       	push	r26
     2b4:	bf 93       	push	r27
     2b6:	cf 93       	push	r28
     2b8:	df 93       	push	r29
     2ba:	ef 93       	push	r30
     2bc:	ff 93       	push	r31
     2be:	a0 91 86 30 	lds	r26, 0x3086	; 0x803086 <pxCurrentTCB>
     2c2:	b0 91 87 30 	lds	r27, 0x3087	; 0x803087 <pxCurrentTCB+0x1>
     2c6:	0d b6       	in	r0, 0x3d	; 61
     2c8:	0d 92       	st	X+, r0
     2ca:	0e b6       	in	r0, 0x3e	; 62
     2cc:	0d 92       	st	X+, r0
     2ce:	0e 94 9d 07 	call	0xf3a	; 0xf3a <vTaskSwitchContext>
     2d2:	a0 91 86 30 	lds	r26, 0x3086	; 0x803086 <pxCurrentTCB>
     2d6:	b0 91 87 30 	lds	r27, 0x3087	; 0x803087 <pxCurrentTCB+0x1>
     2da:	cd 91       	ld	r28, X+
     2dc:	cd bf       	out	0x3d, r28	; 61
     2de:	dd 91       	ld	r29, X+
     2e0:	de bf       	out	0x3e, r29	; 62
     2e2:	ff 91       	pop	r31
     2e4:	ef 91       	pop	r30
     2e6:	df 91       	pop	r29
     2e8:	cf 91       	pop	r28
     2ea:	bf 91       	pop	r27
     2ec:	af 91       	pop	r26
     2ee:	9f 91       	pop	r25
     2f0:	8f 91       	pop	r24
     2f2:	7f 91       	pop	r23
     2f4:	6f 91       	pop	r22
     2f6:	5f 91       	pop	r21
     2f8:	4f 91       	pop	r20
     2fa:	3f 91       	pop	r19
     2fc:	2f 91       	pop	r18
     2fe:	1f 91       	pop	r17
     300:	0f 91       	pop	r16
     302:	ff 90       	pop	r15
     304:	ef 90       	pop	r14
     306:	df 90       	pop	r13
     308:	cf 90       	pop	r12
     30a:	bf 90       	pop	r11
     30c:	af 90       	pop	r10
     30e:	9f 90       	pop	r9
     310:	8f 90       	pop	r8
     312:	7f 90       	pop	r7
     314:	6f 90       	pop	r6
     316:	5f 90       	pop	r5
     318:	4f 90       	pop	r4
     31a:	3f 90       	pop	r3
     31c:	2f 90       	pop	r2
     31e:	1f 90       	pop	r1
     320:	0f 90       	pop	r0
     322:	0f be       	out	0x3f, r0	; 63
     324:	0f 90       	pop	r0
     326:	08 95       	ret

00000328 <vPortYieldFromTick>:
     328:	0f 92       	push	r0
     32a:	0f b6       	in	r0, 0x3f	; 63
     32c:	f8 94       	cli
     32e:	0f 92       	push	r0
     330:	1f 92       	push	r1
     332:	11 24       	eor	r1, r1
     334:	2f 92       	push	r2
     336:	3f 92       	push	r3
     338:	4f 92       	push	r4
     33a:	5f 92       	push	r5
     33c:	6f 92       	push	r6
     33e:	7f 92       	push	r7
     340:	8f 92       	push	r8
     342:	9f 92       	push	r9
     344:	af 92       	push	r10
     346:	bf 92       	push	r11
     348:	cf 92       	push	r12
     34a:	df 92       	push	r13
     34c:	ef 92       	push	r14
     34e:	ff 92       	push	r15
     350:	0f 93       	push	r16
     352:	1f 93       	push	r17
     354:	2f 93       	push	r18
     356:	3f 93       	push	r19
     358:	4f 93       	push	r20
     35a:	5f 93       	push	r21
     35c:	6f 93       	push	r22
     35e:	7f 93       	push	r23
     360:	8f 93       	push	r24
     362:	9f 93       	push	r25
     364:	af 93       	push	r26
     366:	bf 93       	push	r27
     368:	cf 93       	push	r28
     36a:	df 93       	push	r29
     36c:	ef 93       	push	r30
     36e:	ff 93       	push	r31
     370:	a0 91 86 30 	lds	r26, 0x3086	; 0x803086 <pxCurrentTCB>
     374:	b0 91 87 30 	lds	r27, 0x3087	; 0x803087 <pxCurrentTCB+0x1>
     378:	0d b6       	in	r0, 0x3d	; 61
     37a:	0d 92       	st	X+, r0
     37c:	0e b6       	in	r0, 0x3e	; 62
     37e:	0d 92       	st	X+, r0
     380:	0e 94 52 06 	call	0xca4	; 0xca4 <xTaskIncrementTick>
     384:	81 11       	cpse	r24, r1
     386:	0e 94 9d 07 	call	0xf3a	; 0xf3a <vTaskSwitchContext>
     38a:	a0 91 86 30 	lds	r26, 0x3086	; 0x803086 <pxCurrentTCB>
     38e:	b0 91 87 30 	lds	r27, 0x3087	; 0x803087 <pxCurrentTCB+0x1>
     392:	cd 91       	ld	r28, X+
     394:	cd bf       	out	0x3d, r28	; 61
     396:	dd 91       	ld	r29, X+
     398:	de bf       	out	0x3e, r29	; 62
     39a:	ff 91       	pop	r31
     39c:	ef 91       	pop	r30
     39e:	df 91       	pop	r29
     3a0:	cf 91       	pop	r28
     3a2:	bf 91       	pop	r27
     3a4:	af 91       	pop	r26
     3a6:	9f 91       	pop	r25
     3a8:	8f 91       	pop	r24
     3aa:	7f 91       	pop	r23
     3ac:	6f 91       	pop	r22
     3ae:	5f 91       	pop	r21
     3b0:	4f 91       	pop	r20
     3b2:	3f 91       	pop	r19
     3b4:	2f 91       	pop	r18
     3b6:	1f 91       	pop	r17
     3b8:	0f 91       	pop	r16
     3ba:	ff 90       	pop	r15
     3bc:	ef 90       	pop	r14
     3be:	df 90       	pop	r13
     3c0:	cf 90       	pop	r12
     3c2:	bf 90       	pop	r11
     3c4:	af 90       	pop	r10
     3c6:	9f 90       	pop	r9
     3c8:	8f 90       	pop	r8
     3ca:	7f 90       	pop	r7
     3cc:	6f 90       	pop	r6
     3ce:	5f 90       	pop	r5
     3d0:	4f 90       	pop	r4
     3d2:	3f 90       	pop	r3
     3d4:	2f 90       	pop	r2
     3d6:	1f 90       	pop	r1
     3d8:	0f 90       	pop	r0
     3da:	0f be       	out	0x3f, r0	; 63
     3dc:	0f 90       	pop	r0
     3de:	18 95       	reti

000003e0 <__vector_12>:
     3e0:	0f 93       	push	r16
     3e2:	01 e0       	ldi	r16, 0x01	; 1
     3e4:	00 93 86 0a 	sts	0x0A86, r16	; 0x800a86 <__TEXT_REGION_LENGTH__+0x700a86>
     3e8:	0f 91       	pop	r16
     3ea:	0e 94 94 01 	call	0x328	; 0x328 <vPortYieldFromTick>
     3ee:	18 95       	reti

000003f0 <pvPortMalloc>:
     3f0:	cf 93       	push	r28
     3f2:	df 93       	push	r29
     3f4:	ec 01       	movw	r28, r24
     3f6:	0e 94 4c 06 	call	0xc98	; 0xc98 <vTaskSuspendAll>
     3fa:	80 91 28 28 	lds	r24, 0x2828	; 0x802828 <__data_end>
     3fe:	90 91 29 28 	lds	r25, 0x2829	; 0x802829 <__data_end+0x1>
     402:	89 2b       	or	r24, r25
     404:	31 f4       	brne	.+12     	; 0x412 <__LOCK_REGION_LENGTH__+0x12>
     406:	8d e2       	ldi	r24, 0x2D	; 45
     408:	98 e2       	ldi	r25, 0x28	; 40
     40a:	80 93 28 28 	sts	0x2828, r24	; 0x802828 <__data_end>
     40e:	90 93 29 28 	sts	0x2829, r25	; 0x802829 <__data_end+0x1>
     412:	20 91 2a 28 	lds	r18, 0x282A	; 0x80282a <xNextFreeByte>
     416:	30 91 2b 28 	lds	r19, 0x282B	; 0x80282b <xNextFreeByte+0x1>
     41a:	c9 01       	movw	r24, r18
     41c:	8c 0f       	add	r24, r28
     41e:	9d 1f       	adc	r25, r29
     420:	8f 3f       	cpi	r24, 0xFF	; 255
     422:	47 e0       	ldi	r20, 0x07	; 7
     424:	94 07       	cpc	r25, r20
     426:	70 f4       	brcc	.+28     	; 0x444 <__LOCK_REGION_LENGTH__+0x44>
     428:	28 17       	cp	r18, r24
     42a:	39 07       	cpc	r19, r25
     42c:	70 f4       	brcc	.+28     	; 0x44a <__LOCK_REGION_LENGTH__+0x4a>
     42e:	c0 91 28 28 	lds	r28, 0x2828	; 0x802828 <__data_end>
     432:	d0 91 29 28 	lds	r29, 0x2829	; 0x802829 <__data_end+0x1>
     436:	c2 0f       	add	r28, r18
     438:	d3 1f       	adc	r29, r19
     43a:	80 93 2a 28 	sts	0x282A, r24	; 0x80282a <xNextFreeByte>
     43e:	90 93 2b 28 	sts	0x282B, r25	; 0x80282b <xNextFreeByte+0x1>
     442:	05 c0       	rjmp	.+10     	; 0x44e <__LOCK_REGION_LENGTH__+0x4e>
     444:	c0 e0       	ldi	r28, 0x00	; 0
     446:	d0 e0       	ldi	r29, 0x00	; 0
     448:	02 c0       	rjmp	.+4      	; 0x44e <__LOCK_REGION_LENGTH__+0x4e>
     44a:	c0 e0       	ldi	r28, 0x00	; 0
     44c:	d0 e0       	ldi	r29, 0x00	; 0
     44e:	0e 94 0a 07 	call	0xe14	; 0xe14 <xTaskResumeAll>
     452:	ce 01       	movw	r24, r28
     454:	df 91       	pop	r29
     456:	cf 91       	pop	r28
     458:	08 95       	ret

0000045a <vPortFree>:
     45a:	08 95       	ret

0000045c <prvIsQueueEmpty>:
     45c:	0f b6       	in	r0, 0x3f	; 63
     45e:	f8 94       	cli
     460:	0f 92       	push	r0
     462:	fc 01       	movw	r30, r24
     464:	92 8d       	ldd	r25, Z+26	; 0x1a
     466:	0f 90       	pop	r0
     468:	0f be       	out	0x3f, r0	; 63
     46a:	81 e0       	ldi	r24, 0x01	; 1
     46c:	91 11       	cpse	r25, r1
     46e:	80 e0       	ldi	r24, 0x00	; 0
     470:	08 95       	ret

00000472 <prvCopyDataToQueue>:
     472:	0f 93       	push	r16
     474:	1f 93       	push	r17
     476:	cf 93       	push	r28
     478:	df 93       	push	r29
     47a:	ec 01       	movw	r28, r24
     47c:	04 2f       	mov	r16, r20
     47e:	1a 8d       	ldd	r17, Y+26	; 0x1a
     480:	4c 8d       	ldd	r20, Y+28	; 0x1c
     482:	41 11       	cpse	r20, r1
     484:	0c c0       	rjmp	.+24     	; 0x49e <prvCopyDataToQueue+0x2c>
     486:	88 81       	ld	r24, Y
     488:	99 81       	ldd	r25, Y+1	; 0x01
     48a:	89 2b       	or	r24, r25
     48c:	09 f0       	breq	.+2      	; 0x490 <prvCopyDataToQueue+0x1e>
     48e:	42 c0       	rjmp	.+132    	; 0x514 <prvCopyDataToQueue+0xa2>
     490:	8a 81       	ldd	r24, Y+2	; 0x02
     492:	9b 81       	ldd	r25, Y+3	; 0x03
     494:	0e 94 a2 08 	call	0x1144	; 0x1144 <xTaskPriorityDisinherit>
     498:	1a 82       	std	Y+2, r1	; 0x02
     49a:	1b 82       	std	Y+3, r1	; 0x03
     49c:	42 c0       	rjmp	.+132    	; 0x522 <prvCopyDataToQueue+0xb0>
     49e:	01 11       	cpse	r16, r1
     4a0:	17 c0       	rjmp	.+46     	; 0x4d0 <prvCopyDataToQueue+0x5e>
     4a2:	50 e0       	ldi	r21, 0x00	; 0
     4a4:	8c 81       	ldd	r24, Y+4	; 0x04
     4a6:	9d 81       	ldd	r25, Y+5	; 0x05
     4a8:	0e 94 9d 0a 	call	0x153a	; 0x153a <memcpy>
     4ac:	2c 8d       	ldd	r18, Y+28	; 0x1c
     4ae:	8c 81       	ldd	r24, Y+4	; 0x04
     4b0:	9d 81       	ldd	r25, Y+5	; 0x05
     4b2:	82 0f       	add	r24, r18
     4b4:	91 1d       	adc	r25, r1
     4b6:	8c 83       	std	Y+4, r24	; 0x04
     4b8:	9d 83       	std	Y+5, r25	; 0x05
     4ba:	2a 81       	ldd	r18, Y+2	; 0x02
     4bc:	3b 81       	ldd	r19, Y+3	; 0x03
     4be:	82 17       	cp	r24, r18
     4c0:	93 07       	cpc	r25, r19
     4c2:	50 f1       	brcs	.+84     	; 0x518 <prvCopyDataToQueue+0xa6>
     4c4:	88 81       	ld	r24, Y
     4c6:	99 81       	ldd	r25, Y+1	; 0x01
     4c8:	8c 83       	std	Y+4, r24	; 0x04
     4ca:	9d 83       	std	Y+5, r25	; 0x05
     4cc:	80 e0       	ldi	r24, 0x00	; 0
     4ce:	29 c0       	rjmp	.+82     	; 0x522 <prvCopyDataToQueue+0xb0>
     4d0:	50 e0       	ldi	r21, 0x00	; 0
     4d2:	8e 81       	ldd	r24, Y+6	; 0x06
     4d4:	9f 81       	ldd	r25, Y+7	; 0x07
     4d6:	0e 94 9d 0a 	call	0x153a	; 0x153a <memcpy>
     4da:	8c 8d       	ldd	r24, Y+28	; 0x1c
     4dc:	90 e0       	ldi	r25, 0x00	; 0
     4de:	91 95       	neg	r25
     4e0:	81 95       	neg	r24
     4e2:	91 09       	sbc	r25, r1
     4e4:	2e 81       	ldd	r18, Y+6	; 0x06
     4e6:	3f 81       	ldd	r19, Y+7	; 0x07
     4e8:	28 0f       	add	r18, r24
     4ea:	39 1f       	adc	r19, r25
     4ec:	2e 83       	std	Y+6, r18	; 0x06
     4ee:	3f 83       	std	Y+7, r19	; 0x07
     4f0:	48 81       	ld	r20, Y
     4f2:	59 81       	ldd	r21, Y+1	; 0x01
     4f4:	24 17       	cp	r18, r20
     4f6:	35 07       	cpc	r19, r21
     4f8:	30 f4       	brcc	.+12     	; 0x506 <prvCopyDataToQueue+0x94>
     4fa:	2a 81       	ldd	r18, Y+2	; 0x02
     4fc:	3b 81       	ldd	r19, Y+3	; 0x03
     4fe:	82 0f       	add	r24, r18
     500:	93 1f       	adc	r25, r19
     502:	8e 83       	std	Y+6, r24	; 0x06
     504:	9f 83       	std	Y+7, r25	; 0x07
     506:	02 30       	cpi	r16, 0x02	; 2
     508:	49 f4       	brne	.+18     	; 0x51c <prvCopyDataToQueue+0xaa>
     50a:	11 23       	and	r17, r17
     50c:	49 f0       	breq	.+18     	; 0x520 <prvCopyDataToQueue+0xae>
     50e:	11 50       	subi	r17, 0x01	; 1
     510:	80 e0       	ldi	r24, 0x00	; 0
     512:	07 c0       	rjmp	.+14     	; 0x522 <prvCopyDataToQueue+0xb0>
     514:	80 e0       	ldi	r24, 0x00	; 0
     516:	05 c0       	rjmp	.+10     	; 0x522 <prvCopyDataToQueue+0xb0>
     518:	80 e0       	ldi	r24, 0x00	; 0
     51a:	03 c0       	rjmp	.+6      	; 0x522 <prvCopyDataToQueue+0xb0>
     51c:	80 e0       	ldi	r24, 0x00	; 0
     51e:	01 c0       	rjmp	.+2      	; 0x522 <prvCopyDataToQueue+0xb0>
     520:	80 e0       	ldi	r24, 0x00	; 0
     522:	1f 5f       	subi	r17, 0xFF	; 255
     524:	1a 8f       	std	Y+26, r17	; 0x1a
     526:	df 91       	pop	r29
     528:	cf 91       	pop	r28
     52a:	1f 91       	pop	r17
     52c:	0f 91       	pop	r16
     52e:	08 95       	ret

00000530 <prvCopyDataFromQueue>:
     530:	fc 01       	movw	r30, r24
     532:	44 8d       	ldd	r20, Z+28	; 0x1c
     534:	44 23       	and	r20, r20
     536:	a9 f0       	breq	.+42     	; 0x562 <prvCopyDataFromQueue+0x32>
     538:	50 e0       	ldi	r21, 0x00	; 0
     53a:	26 81       	ldd	r18, Z+6	; 0x06
     53c:	37 81       	ldd	r19, Z+7	; 0x07
     53e:	24 0f       	add	r18, r20
     540:	35 1f       	adc	r19, r21
     542:	26 83       	std	Z+6, r18	; 0x06
     544:	37 83       	std	Z+7, r19	; 0x07
     546:	82 81       	ldd	r24, Z+2	; 0x02
     548:	93 81       	ldd	r25, Z+3	; 0x03
     54a:	28 17       	cp	r18, r24
     54c:	39 07       	cpc	r19, r25
     54e:	20 f0       	brcs	.+8      	; 0x558 <prvCopyDataFromQueue+0x28>
     550:	80 81       	ld	r24, Z
     552:	91 81       	ldd	r25, Z+1	; 0x01
     554:	86 83       	std	Z+6, r24	; 0x06
     556:	97 83       	std	Z+7, r25	; 0x07
     558:	cb 01       	movw	r24, r22
     55a:	66 81       	ldd	r22, Z+6	; 0x06
     55c:	77 81       	ldd	r23, Z+7	; 0x07
     55e:	0e 94 9d 0a 	call	0x153a	; 0x153a <memcpy>
     562:	08 95       	ret

00000564 <prvUnlockQueue>:
     564:	ef 92       	push	r14
     566:	ff 92       	push	r15
     568:	0f 93       	push	r16
     56a:	1f 93       	push	r17
     56c:	cf 93       	push	r28
     56e:	8c 01       	movw	r16, r24
     570:	0f b6       	in	r0, 0x3f	; 63
     572:	f8 94       	cli
     574:	0f 92       	push	r0
     576:	fc 01       	movw	r30, r24
     578:	c6 8d       	ldd	r28, Z+30	; 0x1e
     57a:	1c 16       	cp	r1, r28
     57c:	ac f4       	brge	.+42     	; 0x5a8 <prvUnlockQueue+0x44>
     57e:	81 89       	ldd	r24, Z+17	; 0x11
     580:	81 11       	cpse	r24, r1
     582:	06 c0       	rjmp	.+12     	; 0x590 <prvUnlockQueue+0x2c>
     584:	11 c0       	rjmp	.+34     	; 0x5a8 <prvUnlockQueue+0x44>
     586:	f8 01       	movw	r30, r16
     588:	81 89       	ldd	r24, Z+17	; 0x11
     58a:	81 11       	cpse	r24, r1
     58c:	05 c0       	rjmp	.+10     	; 0x598 <prvUnlockQueue+0x34>
     58e:	0c c0       	rjmp	.+24     	; 0x5a8 <prvUnlockQueue+0x44>
     590:	78 01       	movw	r14, r16
     592:	f1 e1       	ldi	r31, 0x11	; 17
     594:	ef 0e       	add	r14, r31
     596:	f1 1c       	adc	r15, r1
     598:	c7 01       	movw	r24, r14
     59a:	0e 94 15 08 	call	0x102a	; 0x102a <xTaskRemoveFromEventList>
     59e:	81 11       	cpse	r24, r1
     5a0:	0e 94 9e 08 	call	0x113c	; 0x113c <vTaskMissedYield>
     5a4:	c1 50       	subi	r28, 0x01	; 1
     5a6:	79 f7       	brne	.-34     	; 0x586 <prvUnlockQueue+0x22>
     5a8:	8f ef       	ldi	r24, 0xFF	; 255
     5aa:	f8 01       	movw	r30, r16
     5ac:	86 8f       	std	Z+30, r24	; 0x1e
     5ae:	0f 90       	pop	r0
     5b0:	0f be       	out	0x3f, r0	; 63
     5b2:	0f b6       	in	r0, 0x3f	; 63
     5b4:	f8 94       	cli
     5b6:	0f 92       	push	r0
     5b8:	c5 8d       	ldd	r28, Z+29	; 0x1d
     5ba:	1c 16       	cp	r1, r28
     5bc:	ac f4       	brge	.+42     	; 0x5e8 <prvUnlockQueue+0x84>
     5be:	80 85       	ldd	r24, Z+8	; 0x08
     5c0:	81 11       	cpse	r24, r1
     5c2:	06 c0       	rjmp	.+12     	; 0x5d0 <prvUnlockQueue+0x6c>
     5c4:	11 c0       	rjmp	.+34     	; 0x5e8 <prvUnlockQueue+0x84>
     5c6:	f8 01       	movw	r30, r16
     5c8:	80 85       	ldd	r24, Z+8	; 0x08
     5ca:	81 11       	cpse	r24, r1
     5cc:	05 c0       	rjmp	.+10     	; 0x5d8 <prvUnlockQueue+0x74>
     5ce:	0c c0       	rjmp	.+24     	; 0x5e8 <prvUnlockQueue+0x84>
     5d0:	78 01       	movw	r14, r16
     5d2:	f8 e0       	ldi	r31, 0x08	; 8
     5d4:	ef 0e       	add	r14, r31
     5d6:	f1 1c       	adc	r15, r1
     5d8:	c7 01       	movw	r24, r14
     5da:	0e 94 15 08 	call	0x102a	; 0x102a <xTaskRemoveFromEventList>
     5de:	81 11       	cpse	r24, r1
     5e0:	0e 94 9e 08 	call	0x113c	; 0x113c <vTaskMissedYield>
     5e4:	c1 50       	subi	r28, 0x01	; 1
     5e6:	79 f7       	brne	.-34     	; 0x5c6 <prvUnlockQueue+0x62>
     5e8:	8f ef       	ldi	r24, 0xFF	; 255
     5ea:	f8 01       	movw	r30, r16
     5ec:	85 8f       	std	Z+29, r24	; 0x1d
     5ee:	0f 90       	pop	r0
     5f0:	0f be       	out	0x3f, r0	; 63
     5f2:	cf 91       	pop	r28
     5f4:	1f 91       	pop	r17
     5f6:	0f 91       	pop	r16
     5f8:	ff 90       	pop	r15
     5fa:	ef 90       	pop	r14
     5fc:	08 95       	ret

000005fe <xQueueGenericReset>:
     5fe:	cf 93       	push	r28
     600:	df 93       	push	r29
     602:	ec 01       	movw	r28, r24
     604:	0f b6       	in	r0, 0x3f	; 63
     606:	f8 94       	cli
     608:	0f 92       	push	r0
     60a:	48 81       	ld	r20, Y
     60c:	59 81       	ldd	r21, Y+1	; 0x01
     60e:	2c 8d       	ldd	r18, Y+28	; 0x1c
     610:	30 e0       	ldi	r19, 0x00	; 0
     612:	7b 8d       	ldd	r23, Y+27	; 0x1b
     614:	72 9f       	mul	r23, r18
     616:	c0 01       	movw	r24, r0
     618:	73 9f       	mul	r23, r19
     61a:	90 0d       	add	r25, r0
     61c:	11 24       	eor	r1, r1
     61e:	fa 01       	movw	r30, r20
     620:	e8 0f       	add	r30, r24
     622:	f9 1f       	adc	r31, r25
     624:	ea 83       	std	Y+2, r30	; 0x02
     626:	fb 83       	std	Y+3, r31	; 0x03
     628:	1a 8e       	std	Y+26, r1	; 0x1a
     62a:	4c 83       	std	Y+4, r20	; 0x04
     62c:	5d 83       	std	Y+5, r21	; 0x05
     62e:	82 1b       	sub	r24, r18
     630:	93 0b       	sbc	r25, r19
     632:	84 0f       	add	r24, r20
     634:	95 1f       	adc	r25, r21
     636:	8e 83       	std	Y+6, r24	; 0x06
     638:	9f 83       	std	Y+7, r25	; 0x07
     63a:	8f ef       	ldi	r24, 0xFF	; 255
     63c:	8d 8f       	std	Y+29, r24	; 0x1d
     63e:	8e 8f       	std	Y+30, r24	; 0x1e
     640:	61 11       	cpse	r22, r1
     642:	0c c0       	rjmp	.+24     	; 0x65c <xQueueGenericReset+0x5e>
     644:	88 85       	ldd	r24, Y+8	; 0x08
     646:	88 23       	and	r24, r24
     648:	89 f0       	breq	.+34     	; 0x66c <xQueueGenericReset+0x6e>
     64a:	ce 01       	movw	r24, r28
     64c:	08 96       	adiw	r24, 0x08	; 8
     64e:	0e 94 15 08 	call	0x102a	; 0x102a <xTaskRemoveFromEventList>
     652:	88 23       	and	r24, r24
     654:	59 f0       	breq	.+22     	; 0x66c <xQueueGenericReset+0x6e>
     656:	0e 94 3b 01 	call	0x276	; 0x276 <vPortYield>
     65a:	08 c0       	rjmp	.+16     	; 0x66c <xQueueGenericReset+0x6e>
     65c:	ce 01       	movw	r24, r28
     65e:	08 96       	adiw	r24, 0x08	; 8
     660:	0e 94 6a 00 	call	0xd4	; 0xd4 <vListInitialise>
     664:	ce 01       	movw	r24, r28
     666:	41 96       	adiw	r24, 0x11	; 17
     668:	0e 94 6a 00 	call	0xd4	; 0xd4 <vListInitialise>
     66c:	0f 90       	pop	r0
     66e:	0f be       	out	0x3f, r0	; 63
     670:	81 e0       	ldi	r24, 0x01	; 1
     672:	df 91       	pop	r29
     674:	cf 91       	pop	r28
     676:	08 95       	ret

00000678 <xQueueGenericCreate>:
     678:	0f 93       	push	r16
     67a:	1f 93       	push	r17
     67c:	cf 93       	push	r28
     67e:	df 93       	push	r29
     680:	08 2f       	mov	r16, r24
     682:	16 2f       	mov	r17, r22
     684:	66 23       	and	r22, r22
     686:	c1 f0       	breq	.+48     	; 0x6b8 <xQueueGenericCreate+0x40>
     688:	86 9f       	mul	r24, r22
     68a:	c0 01       	movw	r24, r0
     68c:	11 24       	eor	r1, r1
     68e:	4f 96       	adiw	r24, 0x1f	; 31
     690:	0e 94 f8 01 	call	0x3f0	; 0x3f0 <pvPortMalloc>
     694:	ec 01       	movw	r28, r24
     696:	00 97       	sbiw	r24, 0x00	; 0
     698:	41 f4       	brne	.+16     	; 0x6aa <xQueueGenericCreate+0x32>
     69a:	15 c0       	rjmp	.+42     	; 0x6c6 <xQueueGenericCreate+0x4e>
     69c:	0b 8f       	std	Y+27, r16	; 0x1b
     69e:	1c 8f       	std	Y+28, r17	; 0x1c
     6a0:	61 e0       	ldi	r22, 0x01	; 1
     6a2:	ce 01       	movw	r24, r28
     6a4:	0e 94 ff 02 	call	0x5fe	; 0x5fe <xQueueGenericReset>
     6a8:	0e c0       	rjmp	.+28     	; 0x6c6 <xQueueGenericCreate+0x4e>
     6aa:	4f 96       	adiw	r24, 0x1f	; 31
     6ac:	88 83       	st	Y, r24
     6ae:	99 83       	std	Y+1, r25	; 0x01
     6b0:	f5 cf       	rjmp	.-22     	; 0x69c <xQueueGenericCreate+0x24>
     6b2:	c8 83       	st	Y, r28
     6b4:	d9 83       	std	Y+1, r29	; 0x01
     6b6:	f2 cf       	rjmp	.-28     	; 0x69c <xQueueGenericCreate+0x24>
     6b8:	8f e1       	ldi	r24, 0x1F	; 31
     6ba:	90 e0       	ldi	r25, 0x00	; 0
     6bc:	0e 94 f8 01 	call	0x3f0	; 0x3f0 <pvPortMalloc>
     6c0:	ec 01       	movw	r28, r24
     6c2:	89 2b       	or	r24, r25
     6c4:	b1 f7       	brne	.-20     	; 0x6b2 <xQueueGenericCreate+0x3a>
     6c6:	ce 01       	movw	r24, r28
     6c8:	df 91       	pop	r29
     6ca:	cf 91       	pop	r28
     6cc:	1f 91       	pop	r17
     6ce:	0f 91       	pop	r16
     6d0:	08 95       	ret

000006d2 <xQueueGenericSend>:
     6d2:	af 92       	push	r10
     6d4:	bf 92       	push	r11
     6d6:	cf 92       	push	r12
     6d8:	df 92       	push	r13
     6da:	ef 92       	push	r14
     6dc:	ff 92       	push	r15
     6de:	0f 93       	push	r16
     6e0:	1f 93       	push	r17
     6e2:	cf 93       	push	r28
     6e4:	df 93       	push	r29
     6e6:	cd b7       	in	r28, 0x3d	; 61
     6e8:	de b7       	in	r29, 0x3e	; 62
     6ea:	25 97       	sbiw	r28, 0x05	; 5
     6ec:	cd bf       	out	0x3d, r28	; 61
     6ee:	de bf       	out	0x3e, r29	; 62
     6f0:	8c 01       	movw	r16, r24
     6f2:	6b 01       	movw	r12, r22
     6f4:	4c 83       	std	Y+4, r20	; 0x04
     6f6:	5d 83       	std	Y+5, r21	; 0x05
     6f8:	a2 2e       	mov	r10, r18
     6fa:	b1 2c       	mov	r11, r1
     6fc:	7c 01       	movw	r14, r24
     6fe:	88 e0       	ldi	r24, 0x08	; 8
     700:	e8 0e       	add	r14, r24
     702:	f1 1c       	adc	r15, r1
     704:	0f b6       	in	r0, 0x3f	; 63
     706:	f8 94       	cli
     708:	0f 92       	push	r0
     70a:	f8 01       	movw	r30, r16
     70c:	92 8d       	ldd	r25, Z+26	; 0x1a
     70e:	83 8d       	ldd	r24, Z+27	; 0x1b
     710:	98 17       	cp	r25, r24
     712:	18 f0       	brcs	.+6      	; 0x71a <xQueueGenericSend+0x48>
     714:	f2 e0       	ldi	r31, 0x02	; 2
     716:	af 12       	cpse	r10, r31
     718:	19 c0       	rjmp	.+50     	; 0x74c <xQueueGenericSend+0x7a>
     71a:	4a 2d       	mov	r20, r10
     71c:	b6 01       	movw	r22, r12
     71e:	c8 01       	movw	r24, r16
     720:	0e 94 39 02 	call	0x472	; 0x472 <prvCopyDataToQueue>
     724:	f8 01       	movw	r30, r16
     726:	91 89       	ldd	r25, Z+17	; 0x11
     728:	99 23       	and	r25, r25
     72a:	49 f0       	breq	.+18     	; 0x73e <xQueueGenericSend+0x6c>
     72c:	c8 01       	movw	r24, r16
     72e:	41 96       	adiw	r24, 0x11	; 17
     730:	0e 94 15 08 	call	0x102a	; 0x102a <xTaskRemoveFromEventList>
     734:	88 23       	and	r24, r24
     736:	31 f0       	breq	.+12     	; 0x744 <xQueueGenericSend+0x72>
     738:	0e 94 3b 01 	call	0x276	; 0x276 <vPortYield>
     73c:	03 c0       	rjmp	.+6      	; 0x744 <xQueueGenericSend+0x72>
     73e:	81 11       	cpse	r24, r1
     740:	0e 94 3b 01 	call	0x276	; 0x276 <vPortYield>
     744:	0f 90       	pop	r0
     746:	0f be       	out	0x3f, r0	; 63
     748:	81 e0       	ldi	r24, 0x01	; 1
     74a:	51 c0       	rjmp	.+162    	; 0x7ee <xQueueGenericSend+0x11c>
     74c:	8c 81       	ldd	r24, Y+4	; 0x04
     74e:	9d 81       	ldd	r25, Y+5	; 0x05
     750:	89 2b       	or	r24, r25
     752:	21 f4       	brne	.+8      	; 0x75c <xQueueGenericSend+0x8a>
     754:	0f 90       	pop	r0
     756:	0f be       	out	0x3f, r0	; 63
     758:	80 e0       	ldi	r24, 0x00	; 0
     75a:	49 c0       	rjmp	.+146    	; 0x7ee <xQueueGenericSend+0x11c>
     75c:	b1 10       	cpse	r11, r1
     75e:	06 c0       	rjmp	.+12     	; 0x76c <xQueueGenericSend+0x9a>
     760:	ce 01       	movw	r24, r28
     762:	01 96       	adiw	r24, 0x01	; 1
     764:	0e 94 5d 08 	call	0x10ba	; 0x10ba <vTaskInternalSetTimeOutState>
     768:	bb 24       	eor	r11, r11
     76a:	b3 94       	inc	r11
     76c:	0f 90       	pop	r0
     76e:	0f be       	out	0x3f, r0	; 63
     770:	0e 94 4c 06 	call	0xc98	; 0xc98 <vTaskSuspendAll>
     774:	0f b6       	in	r0, 0x3f	; 63
     776:	f8 94       	cli
     778:	0f 92       	push	r0
     77a:	f8 01       	movw	r30, r16
     77c:	85 8d       	ldd	r24, Z+29	; 0x1d
     77e:	8f 3f       	cpi	r24, 0xFF	; 255
     780:	09 f4       	brne	.+2      	; 0x784 <xQueueGenericSend+0xb2>
     782:	15 8e       	std	Z+29, r1	; 0x1d
     784:	f8 01       	movw	r30, r16
     786:	86 8d       	ldd	r24, Z+30	; 0x1e
     788:	8f 3f       	cpi	r24, 0xFF	; 255
     78a:	09 f4       	brne	.+2      	; 0x78e <xQueueGenericSend+0xbc>
     78c:	16 8e       	std	Z+30, r1	; 0x1e
     78e:	0f 90       	pop	r0
     790:	0f be       	out	0x3f, r0	; 63
     792:	be 01       	movw	r22, r28
     794:	6c 5f       	subi	r22, 0xFC	; 252
     796:	7f 4f       	sbci	r23, 0xFF	; 255
     798:	ce 01       	movw	r24, r28
     79a:	01 96       	adiw	r24, 0x01	; 1
     79c:	0e 94 68 08 	call	0x10d0	; 0x10d0 <xTaskCheckForTimeOut>
     7a0:	81 11       	cpse	r24, r1
     7a2:	1f c0       	rjmp	.+62     	; 0x7e2 <xQueueGenericSend+0x110>
     7a4:	0f b6       	in	r0, 0x3f	; 63
     7a6:	f8 94       	cli
     7a8:	0f 92       	push	r0
     7aa:	f8 01       	movw	r30, r16
     7ac:	92 8d       	ldd	r25, Z+26	; 0x1a
     7ae:	0f 90       	pop	r0
     7b0:	0f be       	out	0x3f, r0	; 63
     7b2:	83 8d       	ldd	r24, Z+27	; 0x1b
     7b4:	98 13       	cpse	r25, r24
     7b6:	0f c0       	rjmp	.+30     	; 0x7d6 <xQueueGenericSend+0x104>
     7b8:	6c 81       	ldd	r22, Y+4	; 0x04
     7ba:	7d 81       	ldd	r23, Y+5	; 0x05
     7bc:	c7 01       	movw	r24, r14
     7be:	0e 94 03 08 	call	0x1006	; 0x1006 <vTaskPlaceOnEventList>
     7c2:	c8 01       	movw	r24, r16
     7c4:	0e 94 b2 02 	call	0x564	; 0x564 <prvUnlockQueue>
     7c8:	0e 94 0a 07 	call	0xe14	; 0xe14 <xTaskResumeAll>
     7cc:	81 11       	cpse	r24, r1
     7ce:	9a cf       	rjmp	.-204    	; 0x704 <xQueueGenericSend+0x32>
     7d0:	0e 94 3b 01 	call	0x276	; 0x276 <vPortYield>
     7d4:	97 cf       	rjmp	.-210    	; 0x704 <xQueueGenericSend+0x32>
     7d6:	c8 01       	movw	r24, r16
     7d8:	0e 94 b2 02 	call	0x564	; 0x564 <prvUnlockQueue>
     7dc:	0e 94 0a 07 	call	0xe14	; 0xe14 <xTaskResumeAll>
     7e0:	91 cf       	rjmp	.-222    	; 0x704 <xQueueGenericSend+0x32>
     7e2:	c8 01       	movw	r24, r16
     7e4:	0e 94 b2 02 	call	0x564	; 0x564 <prvUnlockQueue>
     7e8:	0e 94 0a 07 	call	0xe14	; 0xe14 <xTaskResumeAll>
     7ec:	80 e0       	ldi	r24, 0x00	; 0
     7ee:	25 96       	adiw	r28, 0x05	; 5
     7f0:	cd bf       	out	0x3d, r28	; 61
     7f2:	de bf       	out	0x3e, r29	; 62
     7f4:	df 91       	pop	r29
     7f6:	cf 91       	pop	r28
     7f8:	1f 91       	pop	r17
     7fa:	0f 91       	pop	r16
     7fc:	ff 90       	pop	r15
     7fe:	ef 90       	pop	r14
     800:	df 90       	pop	r13
     802:	cf 90       	pop	r12
     804:	bf 90       	pop	r11
     806:	af 90       	pop	r10
     808:	08 95       	ret

0000080a <xQueueReceive>:
     80a:	af 92       	push	r10
     80c:	bf 92       	push	r11
     80e:	cf 92       	push	r12
     810:	df 92       	push	r13
     812:	ef 92       	push	r14
     814:	ff 92       	push	r15
     816:	0f 93       	push	r16
     818:	1f 93       	push	r17
     81a:	cf 93       	push	r28
     81c:	df 93       	push	r29
     81e:	cd b7       	in	r28, 0x3d	; 61
     820:	de b7       	in	r29, 0x3e	; 62
     822:	25 97       	sbiw	r28, 0x05	; 5
     824:	cd bf       	out	0x3d, r28	; 61
     826:	de bf       	out	0x3e, r29	; 62
     828:	8c 01       	movw	r16, r24
     82a:	5b 01       	movw	r10, r22
     82c:	4c 83       	std	Y+4, r20	; 0x04
     82e:	5d 83       	std	Y+5, r21	; 0x05
     830:	e1 2c       	mov	r14, r1
     832:	6c 01       	movw	r12, r24
     834:	81 e1       	ldi	r24, 0x11	; 17
     836:	c8 0e       	add	r12, r24
     838:	d1 1c       	adc	r13, r1
     83a:	0f b6       	in	r0, 0x3f	; 63
     83c:	f8 94       	cli
     83e:	0f 92       	push	r0
     840:	f8 01       	movw	r30, r16
     842:	f2 8c       	ldd	r15, Z+26	; 0x1a
     844:	ff 20       	and	r15, r15
     846:	a9 f0       	breq	.+42     	; 0x872 <xQueueReceive+0x68>
     848:	b5 01       	movw	r22, r10
     84a:	c8 01       	movw	r24, r16
     84c:	0e 94 98 02 	call	0x530	; 0x530 <prvCopyDataFromQueue>
     850:	fa 94       	dec	r15
     852:	f8 01       	movw	r30, r16
     854:	f2 8e       	std	Z+26, r15	; 0x1a
     856:	80 85       	ldd	r24, Z+8	; 0x08
     858:	88 23       	and	r24, r24
     85a:	39 f0       	breq	.+14     	; 0x86a <xQueueReceive+0x60>
     85c:	c8 01       	movw	r24, r16
     85e:	08 96       	adiw	r24, 0x08	; 8
     860:	0e 94 15 08 	call	0x102a	; 0x102a <xTaskRemoveFromEventList>
     864:	81 11       	cpse	r24, r1
     866:	0e 94 3b 01 	call	0x276	; 0x276 <vPortYield>
     86a:	0f 90       	pop	r0
     86c:	0f be       	out	0x3f, r0	; 63
     86e:	81 e0       	ldi	r24, 0x01	; 1
     870:	52 c0       	rjmp	.+164    	; 0x916 <xQueueReceive+0x10c>
     872:	8c 81       	ldd	r24, Y+4	; 0x04
     874:	9d 81       	ldd	r25, Y+5	; 0x05
     876:	89 2b       	or	r24, r25
     878:	21 f4       	brne	.+8      	; 0x882 <xQueueReceive+0x78>
     87a:	0f 90       	pop	r0
     87c:	0f be       	out	0x3f, r0	; 63
     87e:	80 e0       	ldi	r24, 0x00	; 0
     880:	4a c0       	rjmp	.+148    	; 0x916 <xQueueReceive+0x10c>
     882:	e1 10       	cpse	r14, r1
     884:	06 c0       	rjmp	.+12     	; 0x892 <xQueueReceive+0x88>
     886:	ce 01       	movw	r24, r28
     888:	01 96       	adiw	r24, 0x01	; 1
     88a:	0e 94 5d 08 	call	0x10ba	; 0x10ba <vTaskInternalSetTimeOutState>
     88e:	ee 24       	eor	r14, r14
     890:	e3 94       	inc	r14
     892:	0f 90       	pop	r0
     894:	0f be       	out	0x3f, r0	; 63
     896:	0e 94 4c 06 	call	0xc98	; 0xc98 <vTaskSuspendAll>
     89a:	0f b6       	in	r0, 0x3f	; 63
     89c:	f8 94       	cli
     89e:	0f 92       	push	r0
     8a0:	f8 01       	movw	r30, r16
     8a2:	85 8d       	ldd	r24, Z+29	; 0x1d
     8a4:	8f 3f       	cpi	r24, 0xFF	; 255
     8a6:	09 f4       	brne	.+2      	; 0x8aa <xQueueReceive+0xa0>
     8a8:	15 8e       	std	Z+29, r1	; 0x1d
     8aa:	f8 01       	movw	r30, r16
     8ac:	86 8d       	ldd	r24, Z+30	; 0x1e
     8ae:	8f 3f       	cpi	r24, 0xFF	; 255
     8b0:	09 f4       	brne	.+2      	; 0x8b4 <xQueueReceive+0xaa>
     8b2:	16 8e       	std	Z+30, r1	; 0x1e
     8b4:	0f 90       	pop	r0
     8b6:	0f be       	out	0x3f, r0	; 63
     8b8:	be 01       	movw	r22, r28
     8ba:	6c 5f       	subi	r22, 0xFC	; 252
     8bc:	7f 4f       	sbci	r23, 0xFF	; 255
     8be:	ce 01       	movw	r24, r28
     8c0:	01 96       	adiw	r24, 0x01	; 1
     8c2:	0e 94 68 08 	call	0x10d0	; 0x10d0 <xTaskCheckForTimeOut>
     8c6:	81 11       	cpse	r24, r1
     8c8:	1a c0       	rjmp	.+52     	; 0x8fe <xQueueReceive+0xf4>
     8ca:	c8 01       	movw	r24, r16
     8cc:	0e 94 2e 02 	call	0x45c	; 0x45c <prvIsQueueEmpty>
     8d0:	88 23       	and	r24, r24
     8d2:	79 f0       	breq	.+30     	; 0x8f2 <xQueueReceive+0xe8>
     8d4:	6c 81       	ldd	r22, Y+4	; 0x04
     8d6:	7d 81       	ldd	r23, Y+5	; 0x05
     8d8:	c6 01       	movw	r24, r12
     8da:	0e 94 03 08 	call	0x1006	; 0x1006 <vTaskPlaceOnEventList>
     8de:	c8 01       	movw	r24, r16
     8e0:	0e 94 b2 02 	call	0x564	; 0x564 <prvUnlockQueue>
     8e4:	0e 94 0a 07 	call	0xe14	; 0xe14 <xTaskResumeAll>
     8e8:	81 11       	cpse	r24, r1
     8ea:	a7 cf       	rjmp	.-178    	; 0x83a <xQueueReceive+0x30>
     8ec:	0e 94 3b 01 	call	0x276	; 0x276 <vPortYield>
     8f0:	a4 cf       	rjmp	.-184    	; 0x83a <xQueueReceive+0x30>
     8f2:	c8 01       	movw	r24, r16
     8f4:	0e 94 b2 02 	call	0x564	; 0x564 <prvUnlockQueue>
     8f8:	0e 94 0a 07 	call	0xe14	; 0xe14 <xTaskResumeAll>
     8fc:	9e cf       	rjmp	.-196    	; 0x83a <xQueueReceive+0x30>
     8fe:	c8 01       	movw	r24, r16
     900:	0e 94 b2 02 	call	0x564	; 0x564 <prvUnlockQueue>
     904:	0e 94 0a 07 	call	0xe14	; 0xe14 <xTaskResumeAll>
     908:	c8 01       	movw	r24, r16
     90a:	0e 94 2e 02 	call	0x45c	; 0x45c <prvIsQueueEmpty>
     90e:	88 23       	and	r24, r24
     910:	09 f4       	brne	.+2      	; 0x914 <xQueueReceive+0x10a>
     912:	93 cf       	rjmp	.-218    	; 0x83a <xQueueReceive+0x30>
     914:	80 e0       	ldi	r24, 0x00	; 0
     916:	25 96       	adiw	r28, 0x05	; 5
     918:	cd bf       	out	0x3d, r28	; 61
     91a:	de bf       	out	0x3e, r29	; 62
     91c:	df 91       	pop	r29
     91e:	cf 91       	pop	r28
     920:	1f 91       	pop	r17
     922:	0f 91       	pop	r16
     924:	ff 90       	pop	r15
     926:	ef 90       	pop	r14
     928:	df 90       	pop	r13
     92a:	cf 90       	pop	r12
     92c:	bf 90       	pop	r11
     92e:	af 90       	pop	r10
     930:	08 95       	ret

00000932 <prvResetNextTaskUnblockTime>:
     932:	e0 91 4e 30 	lds	r30, 0x304E	; 0x80304e <pxDelayedTaskList>
     936:	f0 91 4f 30 	lds	r31, 0x304F	; 0x80304f <pxDelayedTaskList+0x1>
     93a:	80 81       	ld	r24, Z
     93c:	81 11       	cpse	r24, r1
     93e:	07 c0       	rjmp	.+14     	; 0x94e <prvResetNextTaskUnblockTime+0x1c>
     940:	8f ef       	ldi	r24, 0xFF	; 255
     942:	9f ef       	ldi	r25, 0xFF	; 255
     944:	80 93 2f 30 	sts	0x302F, r24	; 0x80302f <xNextTaskUnblockTime>
     948:	90 93 30 30 	sts	0x3030, r25	; 0x803030 <xNextTaskUnblockTime+0x1>
     94c:	08 95       	ret
     94e:	e0 91 4e 30 	lds	r30, 0x304E	; 0x80304e <pxDelayedTaskList>
     952:	f0 91 4f 30 	lds	r31, 0x304F	; 0x80304f <pxDelayedTaskList+0x1>
     956:	05 80       	ldd	r0, Z+5	; 0x05
     958:	f6 81       	ldd	r31, Z+6	; 0x06
     95a:	e0 2d       	mov	r30, r0
     95c:	06 80       	ldd	r0, Z+6	; 0x06
     95e:	f7 81       	ldd	r31, Z+7	; 0x07
     960:	e0 2d       	mov	r30, r0
     962:	82 81       	ldd	r24, Z+2	; 0x02
     964:	93 81       	ldd	r25, Z+3	; 0x03
     966:	80 93 2f 30 	sts	0x302F, r24	; 0x80302f <xNextTaskUnblockTime>
     96a:	90 93 30 30 	sts	0x3030, r25	; 0x803030 <xNextTaskUnblockTime+0x1>
     96e:	08 95       	ret

00000970 <prvIdleTask>:
     970:	c2 e6       	ldi	r28, 0x62	; 98
     972:	d0 e3       	ldi	r29, 0x30	; 48
     974:	88 81       	ld	r24, Y
     976:	82 30       	cpi	r24, 0x02	; 2
     978:	e8 f3       	brcs	.-6      	; 0x974 <prvIdleTask+0x4>
     97a:	0e 94 3b 01 	call	0x276	; 0x276 <vPortYield>
     97e:	fa cf       	rjmp	.-12     	; 0x974 <prvIdleTask+0x4>

00000980 <prvAddCurrentTaskToDelayedList>:
     980:	ff 92       	push	r15
     982:	0f 93       	push	r16
     984:	1f 93       	push	r17
     986:	cf 93       	push	r28
     988:	df 93       	push	r29
     98a:	ec 01       	movw	r28, r24
     98c:	f6 2e       	mov	r15, r22
     98e:	00 91 37 30 	lds	r16, 0x3037	; 0x803037 <xTickCount>
     992:	10 91 38 30 	lds	r17, 0x3038	; 0x803038 <xTickCount+0x1>
     996:	80 91 86 30 	lds	r24, 0x3086	; 0x803086 <pxCurrentTCB>
     99a:	90 91 87 30 	lds	r25, 0x3087	; 0x803087 <pxCurrentTCB+0x1>
     99e:	02 96       	adiw	r24, 0x02	; 2
     9a0:	0e 94 ce 00 	call	0x19c	; 0x19c <uxListRemove>
     9a4:	cf 3f       	cpi	r28, 0xFF	; 255
     9a6:	8f ef       	ldi	r24, 0xFF	; 255
     9a8:	d8 07       	cpc	r29, r24
     9aa:	69 f4       	brne	.+26     	; 0x9c6 <prvAddCurrentTaskToDelayedList+0x46>
     9ac:	ff 20       	and	r15, r15
     9ae:	59 f0       	breq	.+22     	; 0x9c6 <prvAddCurrentTaskToDelayedList+0x46>
     9b0:	60 91 86 30 	lds	r22, 0x3086	; 0x803086 <pxCurrentTCB>
     9b4:	70 91 87 30 	lds	r23, 0x3087	; 0x803087 <pxCurrentTCB+0x1>
     9b8:	6e 5f       	subi	r22, 0xFE	; 254
     9ba:	7f 4f       	sbci	r23, 0xFF	; 255
     9bc:	8a e3       	ldi	r24, 0x3A	; 58
     9be:	90 e3       	ldi	r25, 0x30	; 48
     9c0:	0e 94 7c 00 	call	0xf8	; 0xf8 <vListInsertEnd>
     9c4:	2f c0       	rjmp	.+94     	; 0xa24 <prvAddCurrentTaskToDelayedList+0xa4>
     9c6:	c0 0f       	add	r28, r16
     9c8:	d1 1f       	adc	r29, r17
     9ca:	e0 91 86 30 	lds	r30, 0x3086	; 0x803086 <pxCurrentTCB>
     9ce:	f0 91 87 30 	lds	r31, 0x3087	; 0x803087 <pxCurrentTCB+0x1>
     9d2:	c2 83       	std	Z+2, r28	; 0x02
     9d4:	d3 83       	std	Z+3, r29	; 0x03
     9d6:	c0 17       	cp	r28, r16
     9d8:	d1 07       	cpc	r29, r17
     9da:	68 f4       	brcc	.+26     	; 0x9f6 <prvAddCurrentTaskToDelayedList+0x76>
     9dc:	60 91 86 30 	lds	r22, 0x3086	; 0x803086 <pxCurrentTCB>
     9e0:	70 91 87 30 	lds	r23, 0x3087	; 0x803087 <pxCurrentTCB+0x1>
     9e4:	80 91 4c 30 	lds	r24, 0x304C	; 0x80304c <pxOverflowDelayedTaskList>
     9e8:	90 91 4d 30 	lds	r25, 0x304D	; 0x80304d <pxOverflowDelayedTaskList+0x1>
     9ec:	6e 5f       	subi	r22, 0xFE	; 254
     9ee:	7f 4f       	sbci	r23, 0xFF	; 255
     9f0:	0e 94 9d 00 	call	0x13a	; 0x13a <vListInsert>
     9f4:	17 c0       	rjmp	.+46     	; 0xa24 <prvAddCurrentTaskToDelayedList+0xa4>
     9f6:	60 91 86 30 	lds	r22, 0x3086	; 0x803086 <pxCurrentTCB>
     9fa:	70 91 87 30 	lds	r23, 0x3087	; 0x803087 <pxCurrentTCB+0x1>
     9fe:	80 91 4e 30 	lds	r24, 0x304E	; 0x80304e <pxDelayedTaskList>
     a02:	90 91 4f 30 	lds	r25, 0x304F	; 0x80304f <pxDelayedTaskList+0x1>
     a06:	6e 5f       	subi	r22, 0xFE	; 254
     a08:	7f 4f       	sbci	r23, 0xFF	; 255
     a0a:	0e 94 9d 00 	call	0x13a	; 0x13a <vListInsert>
     a0e:	80 91 2f 30 	lds	r24, 0x302F	; 0x80302f <xNextTaskUnblockTime>
     a12:	90 91 30 30 	lds	r25, 0x3030	; 0x803030 <xNextTaskUnblockTime+0x1>
     a16:	c8 17       	cp	r28, r24
     a18:	d9 07       	cpc	r29, r25
     a1a:	20 f4       	brcc	.+8      	; 0xa24 <prvAddCurrentTaskToDelayedList+0xa4>
     a1c:	c0 93 2f 30 	sts	0x302F, r28	; 0x80302f <xNextTaskUnblockTime>
     a20:	d0 93 30 30 	sts	0x3030, r29	; 0x803030 <xNextTaskUnblockTime+0x1>
     a24:	df 91       	pop	r29
     a26:	cf 91       	pop	r28
     a28:	1f 91       	pop	r17
     a2a:	0f 91       	pop	r16
     a2c:	ff 90       	pop	r15
     a2e:	08 95       	ret

00000a30 <xTaskCreate>:
     a30:	4f 92       	push	r4
     a32:	5f 92       	push	r5
     a34:	6f 92       	push	r6
     a36:	7f 92       	push	r7
     a38:	8f 92       	push	r8
     a3a:	9f 92       	push	r9
     a3c:	af 92       	push	r10
     a3e:	bf 92       	push	r11
     a40:	cf 92       	push	r12
     a42:	df 92       	push	r13
     a44:	ef 92       	push	r14
     a46:	ff 92       	push	r15
     a48:	0f 93       	push	r16
     a4a:	cf 93       	push	r28
     a4c:	df 93       	push	r29
     a4e:	4c 01       	movw	r8, r24
     a50:	6b 01       	movw	r12, r22
     a52:	5a 01       	movw	r10, r20
     a54:	29 01       	movw	r4, r18
     a56:	ca 01       	movw	r24, r20
     a58:	0e 94 f8 01 	call	0x3f0	; 0x3f0 <pvPortMalloc>
     a5c:	3c 01       	movw	r6, r24
     a5e:	89 2b       	or	r24, r25
     a60:	09 f4       	brne	.+2      	; 0xa64 <xTaskCreate+0x34>
     a62:	df c0       	rjmp	.+446    	; 0xc22 <xTaskCreate+0x1f2>
     a64:	88 e2       	ldi	r24, 0x28	; 40
     a66:	90 e0       	ldi	r25, 0x00	; 0
     a68:	0e 94 f8 01 	call	0x3f0	; 0x3f0 <pvPortMalloc>
     a6c:	ec 01       	movw	r28, r24
     a6e:	89 2b       	or	r24, r25
     a70:	71 f0       	breq	.+28     	; 0xa8e <xTaskCreate+0x5e>
     a72:	6f 8a       	std	Y+23, r6	; 0x17
     a74:	78 8e       	std	Y+24, r7	; 0x18
     a76:	81 e0       	ldi	r24, 0x01	; 1
     a78:	a8 1a       	sub	r10, r24
     a7a:	b1 08       	sbc	r11, r1
     a7c:	6a 0c       	add	r6, r10
     a7e:	7b 1c       	adc	r7, r11
     a80:	d6 01       	movw	r26, r12
     a82:	8c 91       	ld	r24, X
     a84:	89 8f       	std	Y+25, r24	; 0x19
     a86:	8c 91       	ld	r24, X
     a88:	81 11       	cpse	r24, r1
     a8a:	05 c0       	rjmp	.+10     	; 0xa96 <xTaskCreate+0x66>
     a8c:	18 c0       	rjmp	.+48     	; 0xabe <xTaskCreate+0x8e>
     a8e:	c3 01       	movw	r24, r6
     a90:	0e 94 2d 02 	call	0x45a	; 0x45a <vPortFree>
     a94:	c6 c0       	rjmp	.+396    	; 0xc22 <xTaskCreate+0x1f2>
     a96:	ae 01       	movw	r20, r28
     a98:	46 5e       	subi	r20, 0xE6	; 230
     a9a:	5f 4f       	sbci	r21, 0xFF	; 255
     a9c:	f6 01       	movw	r30, r12
     a9e:	31 96       	adiw	r30, 0x01	; 1
     aa0:	b8 e0       	ldi	r27, 0x08	; 8
     aa2:	cb 0e       	add	r12, r27
     aa4:	d1 1c       	adc	r13, r1
     aa6:	cf 01       	movw	r24, r30
     aa8:	21 91       	ld	r18, Z+
     aaa:	da 01       	movw	r26, r20
     aac:	2d 93       	st	X+, r18
     aae:	ad 01       	movw	r20, r26
     ab0:	dc 01       	movw	r26, r24
     ab2:	8c 91       	ld	r24, X
     ab4:	88 23       	and	r24, r24
     ab6:	19 f0       	breq	.+6      	; 0xabe <xTaskCreate+0x8e>
     ab8:	ec 15       	cp	r30, r12
     aba:	fd 05       	cpc	r31, r13
     abc:	a1 f7       	brne	.-24     	; 0xaa6 <xTaskCreate+0x76>
     abe:	18 a2       	std	Y+32, r1	; 0x20
     ac0:	04 30       	cpi	r16, 0x04	; 4
     ac2:	08 f0       	brcs	.+2      	; 0xac6 <xTaskCreate+0x96>
     ac4:	03 e0       	ldi	r16, 0x03	; 3
     ac6:	0e 8b       	std	Y+22, r16	; 0x16
     ac8:	09 a3       	std	Y+33, r16	; 0x21
     aca:	1a a2       	std	Y+34, r1	; 0x22
     acc:	6e 01       	movw	r12, r28
     ace:	b2 e0       	ldi	r27, 0x02	; 2
     ad0:	cb 0e       	add	r12, r27
     ad2:	d1 1c       	adc	r13, r1
     ad4:	c6 01       	movw	r24, r12
     ad6:	0e 94 78 00 	call	0xf0	; 0xf0 <vListInitialiseItem>
     ada:	ce 01       	movw	r24, r28
     adc:	0c 96       	adiw	r24, 0x0c	; 12
     ade:	0e 94 78 00 	call	0xf0	; 0xf0 <vListInitialiseItem>
     ae2:	c8 87       	std	Y+8, r28	; 0x08
     ae4:	d9 87       	std	Y+9, r29	; 0x09
     ae6:	84 e0       	ldi	r24, 0x04	; 4
     ae8:	90 e0       	ldi	r25, 0x00	; 0
     aea:	80 1b       	sub	r24, r16
     aec:	91 09       	sbc	r25, r1
     aee:	8c 87       	std	Y+12, r24	; 0x0c
     af0:	9d 87       	std	Y+13, r25	; 0x0d
     af2:	ca 8b       	std	Y+18, r28	; 0x12
     af4:	db 8b       	std	Y+19, r29	; 0x13
     af6:	1b a2       	std	Y+35, r1	; 0x23
     af8:	1c a2       	std	Y+36, r1	; 0x24
     afa:	1d a2       	std	Y+37, r1	; 0x25
     afc:	1e a2       	std	Y+38, r1	; 0x26
     afe:	1f a2       	std	Y+39, r1	; 0x27
     b00:	a2 01       	movw	r20, r4
     b02:	b4 01       	movw	r22, r8
     b04:	c3 01       	movw	r24, r6
     b06:	0e 94 f5 00 	call	0x1ea	; 0x1ea <pxPortInitialiseStack>
     b0a:	88 83       	st	Y, r24
     b0c:	99 83       	std	Y+1, r25	; 0x01
     b0e:	e1 14       	cp	r14, r1
     b10:	f1 04       	cpc	r15, r1
     b12:	19 f0       	breq	.+6      	; 0xb1a <xTaskCreate+0xea>
     b14:	f7 01       	movw	r30, r14
     b16:	c0 83       	st	Z, r28
     b18:	d1 83       	std	Z+1, r29	; 0x01
     b1a:	0f b6       	in	r0, 0x3f	; 63
     b1c:	f8 94       	cli
     b1e:	0f 92       	push	r0
     b20:	80 91 39 30 	lds	r24, 0x3039	; 0x803039 <uxCurrentNumberOfTasks>
     b24:	8f 5f       	subi	r24, 0xFF	; 255
     b26:	80 93 39 30 	sts	0x3039, r24	; 0x803039 <uxCurrentNumberOfTasks>
     b2a:	80 91 86 30 	lds	r24, 0x3086	; 0x803086 <pxCurrentTCB>
     b2e:	90 91 87 30 	lds	r25, 0x3087	; 0x803087 <pxCurrentTCB+0x1>
     b32:	89 2b       	or	r24, r25
     b34:	a9 f5       	brne	.+106    	; 0xba0 <xTaskCreate+0x170>
     b36:	c0 93 86 30 	sts	0x3086, r28	; 0x803086 <pxCurrentTCB>
     b3a:	d0 93 87 30 	sts	0x3087, r29	; 0x803087 <pxCurrentTCB+0x1>
     b3e:	80 91 39 30 	lds	r24, 0x3039	; 0x803039 <uxCurrentNumberOfTasks>
     b42:	81 30       	cpi	r24, 0x01	; 1
     b44:	e9 f5       	brne	.+122    	; 0xbc0 <xTaskCreate+0x190>
     b46:	82 e6       	ldi	r24, 0x62	; 98
     b48:	90 e3       	ldi	r25, 0x30	; 48
     b4a:	0e 94 6a 00 	call	0xd4	; 0xd4 <vListInitialise>
     b4e:	8b e6       	ldi	r24, 0x6B	; 107
     b50:	90 e3       	ldi	r25, 0x30	; 48
     b52:	0e 94 6a 00 	call	0xd4	; 0xd4 <vListInitialise>
     b56:	84 e7       	ldi	r24, 0x74	; 116
     b58:	90 e3       	ldi	r25, 0x30	; 48
     b5a:	0e 94 6a 00 	call	0xd4	; 0xd4 <vListInitialise>
     b5e:	8d e7       	ldi	r24, 0x7D	; 125
     b60:	90 e3       	ldi	r25, 0x30	; 48
     b62:	0e 94 6a 00 	call	0xd4	; 0xd4 <vListInitialise>
     b66:	89 e5       	ldi	r24, 0x59	; 89
     b68:	90 e3       	ldi	r25, 0x30	; 48
     b6a:	0e 94 6a 00 	call	0xd4	; 0xd4 <vListInitialise>
     b6e:	80 e5       	ldi	r24, 0x50	; 80
     b70:	90 e3       	ldi	r25, 0x30	; 48
     b72:	0e 94 6a 00 	call	0xd4	; 0xd4 <vListInitialise>
     b76:	83 e4       	ldi	r24, 0x43	; 67
     b78:	90 e3       	ldi	r25, 0x30	; 48
     b7a:	0e 94 6a 00 	call	0xd4	; 0xd4 <vListInitialise>
     b7e:	8a e3       	ldi	r24, 0x3A	; 58
     b80:	90 e3       	ldi	r25, 0x30	; 48
     b82:	0e 94 6a 00 	call	0xd4	; 0xd4 <vListInitialise>
     b86:	89 e5       	ldi	r24, 0x59	; 89
     b88:	90 e3       	ldi	r25, 0x30	; 48
     b8a:	80 93 4e 30 	sts	0x304E, r24	; 0x80304e <pxDelayedTaskList>
     b8e:	90 93 4f 30 	sts	0x304F, r25	; 0x80304f <pxDelayedTaskList+0x1>
     b92:	80 e5       	ldi	r24, 0x50	; 80
     b94:	90 e3       	ldi	r25, 0x30	; 48
     b96:	80 93 4c 30 	sts	0x304C, r24	; 0x80304c <pxOverflowDelayedTaskList>
     b9a:	90 93 4d 30 	sts	0x304D, r25	; 0x80304d <pxOverflowDelayedTaskList+0x1>
     b9e:	10 c0       	rjmp	.+32     	; 0xbc0 <xTaskCreate+0x190>
     ba0:	80 91 35 30 	lds	r24, 0x3035	; 0x803035 <xSchedulerRunning>
     ba4:	81 11       	cpse	r24, r1
     ba6:	0c c0       	rjmp	.+24     	; 0xbc0 <xTaskCreate+0x190>
     ba8:	e0 91 86 30 	lds	r30, 0x3086	; 0x803086 <pxCurrentTCB>
     bac:	f0 91 87 30 	lds	r31, 0x3087	; 0x803087 <pxCurrentTCB+0x1>
     bb0:	96 89       	ldd	r25, Z+22	; 0x16
     bb2:	8e 89       	ldd	r24, Y+22	; 0x16
     bb4:	89 17       	cp	r24, r25
     bb6:	20 f0       	brcs	.+8      	; 0xbc0 <xTaskCreate+0x190>
     bb8:	c0 93 86 30 	sts	0x3086, r28	; 0x803086 <pxCurrentTCB>
     bbc:	d0 93 87 30 	sts	0x3087, r29	; 0x803087 <pxCurrentTCB+0x1>
     bc0:	80 91 31 30 	lds	r24, 0x3031	; 0x803031 <uxTaskNumber>
     bc4:	8f 5f       	subi	r24, 0xFF	; 255
     bc6:	80 93 31 30 	sts	0x3031, r24	; 0x803031 <uxTaskNumber>
     bca:	8e 89       	ldd	r24, Y+22	; 0x16
     bcc:	90 91 36 30 	lds	r25, 0x3036	; 0x803036 <uxTopReadyPriority>
     bd0:	98 17       	cp	r25, r24
     bd2:	10 f4       	brcc	.+4      	; 0xbd8 <xTaskCreate+0x1a8>
     bd4:	80 93 36 30 	sts	0x3036, r24	; 0x803036 <uxTopReadyPriority>
     bd8:	90 e0       	ldi	r25, 0x00	; 0
     bda:	9c 01       	movw	r18, r24
     bdc:	22 0f       	add	r18, r18
     bde:	33 1f       	adc	r19, r19
     be0:	22 0f       	add	r18, r18
     be2:	33 1f       	adc	r19, r19
     be4:	22 0f       	add	r18, r18
     be6:	33 1f       	adc	r19, r19
     be8:	82 0f       	add	r24, r18
     bea:	93 1f       	adc	r25, r19
     bec:	b6 01       	movw	r22, r12
     bee:	8e 59       	subi	r24, 0x9E	; 158
     bf0:	9f 4c       	sbci	r25, 0xCF	; 207
     bf2:	0e 94 7c 00 	call	0xf8	; 0xf8 <vListInsertEnd>
     bf6:	0f 90       	pop	r0
     bf8:	0f be       	out	0x3f, r0	; 63
     bfa:	80 91 35 30 	lds	r24, 0x3035	; 0x803035 <xSchedulerRunning>
     bfe:	88 23       	and	r24, r24
     c00:	61 f0       	breq	.+24     	; 0xc1a <xTaskCreate+0x1ea>
     c02:	e0 91 86 30 	lds	r30, 0x3086	; 0x803086 <pxCurrentTCB>
     c06:	f0 91 87 30 	lds	r31, 0x3087	; 0x803087 <pxCurrentTCB+0x1>
     c0a:	96 89       	ldd	r25, Z+22	; 0x16
     c0c:	8e 89       	ldd	r24, Y+22	; 0x16
     c0e:	98 17       	cp	r25, r24
     c10:	30 f4       	brcc	.+12     	; 0xc1e <xTaskCreate+0x1ee>
     c12:	0e 94 3b 01 	call	0x276	; 0x276 <vPortYield>
     c16:	81 e0       	ldi	r24, 0x01	; 1
     c18:	05 c0       	rjmp	.+10     	; 0xc24 <xTaskCreate+0x1f4>
     c1a:	81 e0       	ldi	r24, 0x01	; 1
     c1c:	03 c0       	rjmp	.+6      	; 0xc24 <xTaskCreate+0x1f4>
     c1e:	81 e0       	ldi	r24, 0x01	; 1
     c20:	01 c0       	rjmp	.+2      	; 0xc24 <xTaskCreate+0x1f4>
     c22:	8f ef       	ldi	r24, 0xFF	; 255
     c24:	df 91       	pop	r29
     c26:	cf 91       	pop	r28
     c28:	0f 91       	pop	r16
     c2a:	ff 90       	pop	r15
     c2c:	ef 90       	pop	r14
     c2e:	df 90       	pop	r13
     c30:	cf 90       	pop	r12
     c32:	bf 90       	pop	r11
     c34:	af 90       	pop	r10
     c36:	9f 90       	pop	r9
     c38:	8f 90       	pop	r8
     c3a:	7f 90       	pop	r7
     c3c:	6f 90       	pop	r6
     c3e:	5f 90       	pop	r5
     c40:	4f 90       	pop	r4
     c42:	08 95       	ret

00000c44 <vTaskStartScheduler>:
     c44:	ef 92       	push	r14
     c46:	ff 92       	push	r15
     c48:	0f 93       	push	r16
     c4a:	0f 2e       	mov	r0, r31
     c4c:	fd e2       	ldi	r31, 0x2D	; 45
     c4e:	ef 2e       	mov	r14, r31
     c50:	f0 e3       	ldi	r31, 0x30	; 48
     c52:	ff 2e       	mov	r15, r31
     c54:	f0 2d       	mov	r31, r0
     c56:	00 e0       	ldi	r16, 0x00	; 0
     c58:	20 e0       	ldi	r18, 0x00	; 0
     c5a:	30 e0       	ldi	r19, 0x00	; 0
     c5c:	43 e7       	ldi	r20, 0x73	; 115
     c5e:	50 e0       	ldi	r21, 0x00	; 0
     c60:	60 e0       	ldi	r22, 0x00	; 0
     c62:	7b e5       	ldi	r23, 0x5B	; 91
     c64:	88 eb       	ldi	r24, 0xB8	; 184
     c66:	94 e0       	ldi	r25, 0x04	; 4
     c68:	0e 94 18 05 	call	0xa30	; 0xa30 <xTaskCreate>
     c6c:	81 30       	cpi	r24, 0x01	; 1
     c6e:	81 f4       	brne	.+32     	; 0xc90 <vTaskStartScheduler+0x4c>
     c70:	f8 94       	cli
     c72:	8f ef       	ldi	r24, 0xFF	; 255
     c74:	9f ef       	ldi	r25, 0xFF	; 255
     c76:	80 93 2f 30 	sts	0x302F, r24	; 0x80302f <xNextTaskUnblockTime>
     c7a:	90 93 30 30 	sts	0x3030, r25	; 0x803030 <xNextTaskUnblockTime+0x1>
     c7e:	81 e0       	ldi	r24, 0x01	; 1
     c80:	80 93 35 30 	sts	0x3035, r24	; 0x803035 <xSchedulerRunning>
     c84:	10 92 37 30 	sts	0x3037, r1	; 0x803037 <xTickCount>
     c88:	10 92 38 30 	sts	0x3038, r1	; 0x803038 <xTickCount+0x1>
     c8c:	0e 94 06 01 	call	0x20c	; 0x20c <xPortStartScheduler>
     c90:	0f 91       	pop	r16
     c92:	ff 90       	pop	r15
     c94:	ef 90       	pop	r14
     c96:	08 95       	ret

00000c98 <vTaskSuspendAll>:
     c98:	80 91 2c 30 	lds	r24, 0x302C	; 0x80302c <uxSchedulerSuspended>
     c9c:	8f 5f       	subi	r24, 0xFF	; 255
     c9e:	80 93 2c 30 	sts	0x302C, r24	; 0x80302c <uxSchedulerSuspended>
     ca2:	08 95       	ret

00000ca4 <xTaskIncrementTick>:
     ca4:	df 92       	push	r13
     ca6:	ef 92       	push	r14
     ca8:	ff 92       	push	r15
     caa:	0f 93       	push	r16
     cac:	1f 93       	push	r17
     cae:	cf 93       	push	r28
     cb0:	df 93       	push	r29
     cb2:	80 91 2c 30 	lds	r24, 0x302C	; 0x80302c <uxSchedulerSuspended>
     cb6:	81 11       	cpse	r24, r1
     cb8:	98 c0       	rjmp	.+304    	; 0xdea <xTaskIncrementTick+0x146>
     cba:	e0 90 37 30 	lds	r14, 0x3037	; 0x803037 <xTickCount>
     cbe:	f0 90 38 30 	lds	r15, 0x3038	; 0x803038 <xTickCount+0x1>
     cc2:	8f ef       	ldi	r24, 0xFF	; 255
     cc4:	e8 1a       	sub	r14, r24
     cc6:	f8 0a       	sbc	r15, r24
     cc8:	e0 92 37 30 	sts	0x3037, r14	; 0x803037 <xTickCount>
     ccc:	f0 92 38 30 	sts	0x3038, r15	; 0x803038 <xTickCount+0x1>
     cd0:	e1 14       	cp	r14, r1
     cd2:	f1 04       	cpc	r15, r1
     cd4:	b9 f4       	brne	.+46     	; 0xd04 <xTaskIncrementTick+0x60>
     cd6:	80 91 4e 30 	lds	r24, 0x304E	; 0x80304e <pxDelayedTaskList>
     cda:	90 91 4f 30 	lds	r25, 0x304F	; 0x80304f <pxDelayedTaskList+0x1>
     cde:	20 91 4c 30 	lds	r18, 0x304C	; 0x80304c <pxOverflowDelayedTaskList>
     ce2:	30 91 4d 30 	lds	r19, 0x304D	; 0x80304d <pxOverflowDelayedTaskList+0x1>
     ce6:	20 93 4e 30 	sts	0x304E, r18	; 0x80304e <pxDelayedTaskList>
     cea:	30 93 4f 30 	sts	0x304F, r19	; 0x80304f <pxDelayedTaskList+0x1>
     cee:	80 93 4c 30 	sts	0x304C, r24	; 0x80304c <pxOverflowDelayedTaskList>
     cf2:	90 93 4d 30 	sts	0x304D, r25	; 0x80304d <pxOverflowDelayedTaskList+0x1>
     cf6:	80 91 32 30 	lds	r24, 0x3032	; 0x803032 <xNumOfOverflows>
     cfa:	8f 5f       	subi	r24, 0xFF	; 255
     cfc:	80 93 32 30 	sts	0x3032, r24	; 0x803032 <xNumOfOverflows>
     d00:	0e 94 99 04 	call	0x932	; 0x932 <prvResetNextTaskUnblockTime>
     d04:	80 91 2f 30 	lds	r24, 0x302F	; 0x80302f <xNextTaskUnblockTime>
     d08:	90 91 30 30 	lds	r25, 0x3030	; 0x803030 <xNextTaskUnblockTime+0x1>
     d0c:	e8 16       	cp	r14, r24
     d0e:	f9 06       	cpc	r15, r25
     d10:	10 f4       	brcc	.+4      	; 0xd16 <xTaskIncrementTick+0x72>
     d12:	d1 2c       	mov	r13, r1
     d14:	52 c0       	rjmp	.+164    	; 0xdba <xTaskIncrementTick+0x116>
     d16:	d1 2c       	mov	r13, r1
     d18:	e0 91 4e 30 	lds	r30, 0x304E	; 0x80304e <pxDelayedTaskList>
     d1c:	f0 91 4f 30 	lds	r31, 0x304F	; 0x80304f <pxDelayedTaskList+0x1>
     d20:	80 81       	ld	r24, Z
     d22:	81 11       	cpse	r24, r1
     d24:	07 c0       	rjmp	.+14     	; 0xd34 <xTaskIncrementTick+0x90>
     d26:	8f ef       	ldi	r24, 0xFF	; 255
     d28:	9f ef       	ldi	r25, 0xFF	; 255
     d2a:	80 93 2f 30 	sts	0x302F, r24	; 0x80302f <xNextTaskUnblockTime>
     d2e:	90 93 30 30 	sts	0x3030, r25	; 0x803030 <xNextTaskUnblockTime+0x1>
     d32:	43 c0       	rjmp	.+134    	; 0xdba <xTaskIncrementTick+0x116>
     d34:	e0 91 4e 30 	lds	r30, 0x304E	; 0x80304e <pxDelayedTaskList>
     d38:	f0 91 4f 30 	lds	r31, 0x304F	; 0x80304f <pxDelayedTaskList+0x1>
     d3c:	05 80       	ldd	r0, Z+5	; 0x05
     d3e:	f6 81       	ldd	r31, Z+6	; 0x06
     d40:	e0 2d       	mov	r30, r0
     d42:	c6 81       	ldd	r28, Z+6	; 0x06
     d44:	d7 81       	ldd	r29, Z+7	; 0x07
     d46:	8a 81       	ldd	r24, Y+2	; 0x02
     d48:	9b 81       	ldd	r25, Y+3	; 0x03
     d4a:	e8 16       	cp	r14, r24
     d4c:	f9 06       	cpc	r15, r25
     d4e:	28 f4       	brcc	.+10     	; 0xd5a <xTaskIncrementTick+0xb6>
     d50:	80 93 2f 30 	sts	0x302F, r24	; 0x80302f <xNextTaskUnblockTime>
     d54:	90 93 30 30 	sts	0x3030, r25	; 0x803030 <xNextTaskUnblockTime+0x1>
     d58:	30 c0       	rjmp	.+96     	; 0xdba <xTaskIncrementTick+0x116>
     d5a:	8e 01       	movw	r16, r28
     d5c:	0e 5f       	subi	r16, 0xFE	; 254
     d5e:	1f 4f       	sbci	r17, 0xFF	; 255
     d60:	c8 01       	movw	r24, r16
     d62:	0e 94 ce 00 	call	0x19c	; 0x19c <uxListRemove>
     d66:	8c 89       	ldd	r24, Y+20	; 0x14
     d68:	9d 89       	ldd	r25, Y+21	; 0x15
     d6a:	89 2b       	or	r24, r25
     d6c:	21 f0       	breq	.+8      	; 0xd76 <xTaskIncrementTick+0xd2>
     d6e:	ce 01       	movw	r24, r28
     d70:	0c 96       	adiw	r24, 0x0c	; 12
     d72:	0e 94 ce 00 	call	0x19c	; 0x19c <uxListRemove>
     d76:	8e 89       	ldd	r24, Y+22	; 0x16
     d78:	90 91 36 30 	lds	r25, 0x3036	; 0x803036 <uxTopReadyPriority>
     d7c:	98 17       	cp	r25, r24
     d7e:	10 f4       	brcc	.+4      	; 0xd84 <xTaskIncrementTick+0xe0>
     d80:	80 93 36 30 	sts	0x3036, r24	; 0x803036 <uxTopReadyPriority>
     d84:	90 e0       	ldi	r25, 0x00	; 0
     d86:	9c 01       	movw	r18, r24
     d88:	22 0f       	add	r18, r18
     d8a:	33 1f       	adc	r19, r19
     d8c:	22 0f       	add	r18, r18
     d8e:	33 1f       	adc	r19, r19
     d90:	22 0f       	add	r18, r18
     d92:	33 1f       	adc	r19, r19
     d94:	82 0f       	add	r24, r18
     d96:	93 1f       	adc	r25, r19
     d98:	b8 01       	movw	r22, r16
     d9a:	8e 59       	subi	r24, 0x9E	; 158
     d9c:	9f 4c       	sbci	r25, 0xCF	; 207
     d9e:	0e 94 7c 00 	call	0xf8	; 0xf8 <vListInsertEnd>
     da2:	e0 91 86 30 	lds	r30, 0x3086	; 0x803086 <pxCurrentTCB>
     da6:	f0 91 87 30 	lds	r31, 0x3087	; 0x803087 <pxCurrentTCB+0x1>
     daa:	9e 89       	ldd	r25, Y+22	; 0x16
     dac:	86 89       	ldd	r24, Z+22	; 0x16
     dae:	98 17       	cp	r25, r24
     db0:	08 f4       	brcc	.+2      	; 0xdb4 <xTaskIncrementTick+0x110>
     db2:	b2 cf       	rjmp	.-156    	; 0xd18 <xTaskIncrementTick+0x74>
     db4:	dd 24       	eor	r13, r13
     db6:	d3 94       	inc	r13
     db8:	af cf       	rjmp	.-162    	; 0xd18 <xTaskIncrementTick+0x74>
     dba:	e0 91 86 30 	lds	r30, 0x3086	; 0x803086 <pxCurrentTCB>
     dbe:	f0 91 87 30 	lds	r31, 0x3087	; 0x803087 <pxCurrentTCB+0x1>
     dc2:	86 89       	ldd	r24, Z+22	; 0x16
     dc4:	90 e0       	ldi	r25, 0x00	; 0
     dc6:	fc 01       	movw	r30, r24
     dc8:	ee 0f       	add	r30, r30
     dca:	ff 1f       	adc	r31, r31
     dcc:	ee 0f       	add	r30, r30
     dce:	ff 1f       	adc	r31, r31
     dd0:	ee 0f       	add	r30, r30
     dd2:	ff 1f       	adc	r31, r31
     dd4:	8e 0f       	add	r24, r30
     dd6:	9f 1f       	adc	r25, r31
     dd8:	fc 01       	movw	r30, r24
     dda:	ee 59       	subi	r30, 0x9E	; 158
     ddc:	ff 4c       	sbci	r31, 0xCF	; 207
     dde:	80 81       	ld	r24, Z
     de0:	82 30       	cpi	r24, 0x02	; 2
     de2:	48 f0       	brcs	.+18     	; 0xdf6 <xTaskIncrementTick+0x152>
     de4:	dd 24       	eor	r13, r13
     de6:	d3 94       	inc	r13
     de8:	06 c0       	rjmp	.+12     	; 0xdf6 <xTaskIncrementTick+0x152>
     dea:	80 91 34 30 	lds	r24, 0x3034	; 0x803034 <uxPendedTicks>
     dee:	8f 5f       	subi	r24, 0xFF	; 255
     df0:	80 93 34 30 	sts	0x3034, r24	; 0x803034 <uxPendedTicks>
     df4:	d1 2c       	mov	r13, r1
     df6:	80 91 33 30 	lds	r24, 0x3033	; 0x803033 <xYieldPending>
     dfa:	88 23       	and	r24, r24
     dfc:	11 f0       	breq	.+4      	; 0xe02 <xTaskIncrementTick+0x15e>
     dfe:	dd 24       	eor	r13, r13
     e00:	d3 94       	inc	r13
     e02:	8d 2d       	mov	r24, r13
     e04:	df 91       	pop	r29
     e06:	cf 91       	pop	r28
     e08:	1f 91       	pop	r17
     e0a:	0f 91       	pop	r16
     e0c:	ff 90       	pop	r15
     e0e:	ef 90       	pop	r14
     e10:	df 90       	pop	r13
     e12:	08 95       	ret

00000e14 <xTaskResumeAll>:
     e14:	df 92       	push	r13
     e16:	ef 92       	push	r14
     e18:	ff 92       	push	r15
     e1a:	0f 93       	push	r16
     e1c:	1f 93       	push	r17
     e1e:	cf 93       	push	r28
     e20:	df 93       	push	r29
     e22:	0f b6       	in	r0, 0x3f	; 63
     e24:	f8 94       	cli
     e26:	0f 92       	push	r0
     e28:	80 91 2c 30 	lds	r24, 0x302C	; 0x80302c <uxSchedulerSuspended>
     e2c:	81 50       	subi	r24, 0x01	; 1
     e2e:	80 93 2c 30 	sts	0x302C, r24	; 0x80302c <uxSchedulerSuspended>
     e32:	80 91 2c 30 	lds	r24, 0x302C	; 0x80302c <uxSchedulerSuspended>
     e36:	81 11       	cpse	r24, r1
     e38:	5f c0       	rjmp	.+190    	; 0xef8 <xTaskResumeAll+0xe4>
     e3a:	80 91 39 30 	lds	r24, 0x3039	; 0x803039 <uxCurrentNumberOfTasks>
     e3e:	81 11       	cpse	r24, r1
     e40:	33 c0       	rjmp	.+102    	; 0xea8 <xTaskResumeAll+0x94>
     e42:	5d c0       	rjmp	.+186    	; 0xefe <xTaskResumeAll+0xea>
     e44:	d7 01       	movw	r26, r14
     e46:	15 96       	adiw	r26, 0x05	; 5
     e48:	ed 91       	ld	r30, X+
     e4a:	fc 91       	ld	r31, X
     e4c:	16 97       	sbiw	r26, 0x06	; 6
     e4e:	c6 81       	ldd	r28, Z+6	; 0x06
     e50:	d7 81       	ldd	r29, Z+7	; 0x07
     e52:	ce 01       	movw	r24, r28
     e54:	0c 96       	adiw	r24, 0x0c	; 12
     e56:	0e 94 ce 00 	call	0x19c	; 0x19c <uxListRemove>
     e5a:	8e 01       	movw	r16, r28
     e5c:	0e 5f       	subi	r16, 0xFE	; 254
     e5e:	1f 4f       	sbci	r17, 0xFF	; 255
     e60:	c8 01       	movw	r24, r16
     e62:	0e 94 ce 00 	call	0x19c	; 0x19c <uxListRemove>
     e66:	8e 89       	ldd	r24, Y+22	; 0x16
     e68:	90 91 36 30 	lds	r25, 0x3036	; 0x803036 <uxTopReadyPriority>
     e6c:	98 17       	cp	r25, r24
     e6e:	10 f4       	brcc	.+4      	; 0xe74 <xTaskResumeAll+0x60>
     e70:	80 93 36 30 	sts	0x3036, r24	; 0x803036 <uxTopReadyPriority>
     e74:	90 e0       	ldi	r25, 0x00	; 0
     e76:	9c 01       	movw	r18, r24
     e78:	22 0f       	add	r18, r18
     e7a:	33 1f       	adc	r19, r19
     e7c:	22 0f       	add	r18, r18
     e7e:	33 1f       	adc	r19, r19
     e80:	22 0f       	add	r18, r18
     e82:	33 1f       	adc	r19, r19
     e84:	82 0f       	add	r24, r18
     e86:	93 1f       	adc	r25, r19
     e88:	b8 01       	movw	r22, r16
     e8a:	8e 59       	subi	r24, 0x9E	; 158
     e8c:	9f 4c       	sbci	r25, 0xCF	; 207
     e8e:	0e 94 7c 00 	call	0xf8	; 0xf8 <vListInsertEnd>
     e92:	e0 91 86 30 	lds	r30, 0x3086	; 0x803086 <pxCurrentTCB>
     e96:	f0 91 87 30 	lds	r31, 0x3087	; 0x803087 <pxCurrentTCB+0x1>
     e9a:	9e 89       	ldd	r25, Y+22	; 0x16
     e9c:	86 89       	ldd	r24, Z+22	; 0x16
     e9e:	98 17       	cp	r25, r24
     ea0:	68 f0       	brcs	.+26     	; 0xebc <xTaskResumeAll+0xa8>
     ea2:	d0 92 33 30 	sts	0x3033, r13	; 0x803033 <xYieldPending>
     ea6:	0a c0       	rjmp	.+20     	; 0xebc <xTaskResumeAll+0xa8>
     ea8:	c0 e0       	ldi	r28, 0x00	; 0
     eaa:	d0 e0       	ldi	r29, 0x00	; 0
     eac:	0f 2e       	mov	r0, r31
     eae:	f3 e4       	ldi	r31, 0x43	; 67
     eb0:	ef 2e       	mov	r14, r31
     eb2:	f0 e3       	ldi	r31, 0x30	; 48
     eb4:	ff 2e       	mov	r15, r31
     eb6:	f0 2d       	mov	r31, r0
     eb8:	dd 24       	eor	r13, r13
     eba:	d3 94       	inc	r13
     ebc:	f7 01       	movw	r30, r14
     ebe:	80 81       	ld	r24, Z
     ec0:	81 11       	cpse	r24, r1
     ec2:	c0 cf       	rjmp	.-128    	; 0xe44 <xTaskResumeAll+0x30>
     ec4:	cd 2b       	or	r28, r29
     ec6:	11 f0       	breq	.+4      	; 0xecc <xTaskResumeAll+0xb8>
     ec8:	0e 94 99 04 	call	0x932	; 0x932 <prvResetNextTaskUnblockTime>
     ecc:	c0 91 34 30 	lds	r28, 0x3034	; 0x803034 <uxPendedTicks>
     ed0:	cc 23       	and	r28, r28
     ed2:	51 f0       	breq	.+20     	; 0xee8 <xTaskResumeAll+0xd4>
     ed4:	d1 e0       	ldi	r29, 0x01	; 1
     ed6:	0e 94 52 06 	call	0xca4	; 0xca4 <xTaskIncrementTick>
     eda:	81 11       	cpse	r24, r1
     edc:	d0 93 33 30 	sts	0x3033, r29	; 0x803033 <xYieldPending>
     ee0:	c1 50       	subi	r28, 0x01	; 1
     ee2:	c9 f7       	brne	.-14     	; 0xed6 <xTaskResumeAll+0xc2>
     ee4:	10 92 34 30 	sts	0x3034, r1	; 0x803034 <uxPendedTicks>
     ee8:	80 91 33 30 	lds	r24, 0x3033	; 0x803033 <xYieldPending>
     eec:	88 23       	and	r24, r24
     eee:	31 f0       	breq	.+12     	; 0xefc <xTaskResumeAll+0xe8>
     ef0:	0e 94 3b 01 	call	0x276	; 0x276 <vPortYield>
     ef4:	81 e0       	ldi	r24, 0x01	; 1
     ef6:	03 c0       	rjmp	.+6      	; 0xefe <xTaskResumeAll+0xea>
     ef8:	80 e0       	ldi	r24, 0x00	; 0
     efa:	01 c0       	rjmp	.+2      	; 0xefe <xTaskResumeAll+0xea>
     efc:	80 e0       	ldi	r24, 0x00	; 0
     efe:	0f 90       	pop	r0
     f00:	0f be       	out	0x3f, r0	; 63
     f02:	df 91       	pop	r29
     f04:	cf 91       	pop	r28
     f06:	1f 91       	pop	r17
     f08:	0f 91       	pop	r16
     f0a:	ff 90       	pop	r15
     f0c:	ef 90       	pop	r14
     f0e:	df 90       	pop	r13
     f10:	08 95       	ret

00000f12 <vTaskDelay>:
     f12:	cf 93       	push	r28
     f14:	df 93       	push	r29
     f16:	ec 01       	movw	r28, r24
     f18:	89 2b       	or	r24, r25
     f1a:	51 f0       	breq	.+20     	; 0xf30 <vTaskDelay+0x1e>
     f1c:	0e 94 4c 06 	call	0xc98	; 0xc98 <vTaskSuspendAll>
     f20:	60 e0       	ldi	r22, 0x00	; 0
     f22:	ce 01       	movw	r24, r28
     f24:	0e 94 c0 04 	call	0x980	; 0x980 <prvAddCurrentTaskToDelayedList>
     f28:	0e 94 0a 07 	call	0xe14	; 0xe14 <xTaskResumeAll>
     f2c:	81 11       	cpse	r24, r1
     f2e:	02 c0       	rjmp	.+4      	; 0xf34 <vTaskDelay+0x22>
     f30:	0e 94 3b 01 	call	0x276	; 0x276 <vPortYield>
     f34:	df 91       	pop	r29
     f36:	cf 91       	pop	r28
     f38:	08 95       	ret

00000f3a <vTaskSwitchContext>:
     f3a:	80 91 2c 30 	lds	r24, 0x302C	; 0x80302c <uxSchedulerSuspended>
     f3e:	88 23       	and	r24, r24
     f40:	21 f0       	breq	.+8      	; 0xf4a <vTaskSwitchContext+0x10>
     f42:	81 e0       	ldi	r24, 0x01	; 1
     f44:	80 93 33 30 	sts	0x3033, r24	; 0x803033 <xYieldPending>
     f48:	08 95       	ret
     f4a:	10 92 33 30 	sts	0x3033, r1	; 0x803033 <xYieldPending>
     f4e:	20 91 36 30 	lds	r18, 0x3036	; 0x803036 <uxTopReadyPriority>
     f52:	82 2f       	mov	r24, r18
     f54:	90 e0       	ldi	r25, 0x00	; 0
     f56:	fc 01       	movw	r30, r24
     f58:	ee 0f       	add	r30, r30
     f5a:	ff 1f       	adc	r31, r31
     f5c:	ee 0f       	add	r30, r30
     f5e:	ff 1f       	adc	r31, r31
     f60:	ee 0f       	add	r30, r30
     f62:	ff 1f       	adc	r31, r31
     f64:	e8 0f       	add	r30, r24
     f66:	f9 1f       	adc	r31, r25
     f68:	ee 59       	subi	r30, 0x9E	; 158
     f6a:	ff 4c       	sbci	r31, 0xCF	; 207
     f6c:	30 81       	ld	r19, Z
     f6e:	31 11       	cpse	r19, r1
     f70:	11 c0       	rjmp	.+34     	; 0xf94 <vTaskSwitchContext+0x5a>
     f72:	21 50       	subi	r18, 0x01	; 1
     f74:	82 2f       	mov	r24, r18
     f76:	90 e0       	ldi	r25, 0x00	; 0
     f78:	fc 01       	movw	r30, r24
     f7a:	ee 0f       	add	r30, r30
     f7c:	ff 1f       	adc	r31, r31
     f7e:	ee 0f       	add	r30, r30
     f80:	ff 1f       	adc	r31, r31
     f82:	ee 0f       	add	r30, r30
     f84:	ff 1f       	adc	r31, r31
     f86:	e8 0f       	add	r30, r24
     f88:	f9 1f       	adc	r31, r25
     f8a:	ee 59       	subi	r30, 0x9E	; 158
     f8c:	ff 4c       	sbci	r31, 0xCF	; 207
     f8e:	30 81       	ld	r19, Z
     f90:	33 23       	and	r19, r19
     f92:	79 f3       	breq	.-34     	; 0xf72 <vTaskSwitchContext+0x38>
     f94:	ac 01       	movw	r20, r24
     f96:	44 0f       	add	r20, r20
     f98:	55 1f       	adc	r21, r21
     f9a:	44 0f       	add	r20, r20
     f9c:	55 1f       	adc	r21, r21
     f9e:	44 0f       	add	r20, r20
     fa0:	55 1f       	adc	r21, r21
     fa2:	48 0f       	add	r20, r24
     fa4:	59 1f       	adc	r21, r25
     fa6:	da 01       	movw	r26, r20
     fa8:	ae 59       	subi	r26, 0x9E	; 158
     faa:	bf 4c       	sbci	r27, 0xCF	; 207
     fac:	11 96       	adiw	r26, 0x01	; 1
     fae:	ed 91       	ld	r30, X+
     fb0:	fc 91       	ld	r31, X
     fb2:	12 97       	sbiw	r26, 0x02	; 2
     fb4:	02 80       	ldd	r0, Z+2	; 0x02
     fb6:	f3 81       	ldd	r31, Z+3	; 0x03
     fb8:	e0 2d       	mov	r30, r0
     fba:	11 96       	adiw	r26, 0x01	; 1
     fbc:	ed 93       	st	X+, r30
     fbe:	fc 93       	st	X, r31
     fc0:	12 97       	sbiw	r26, 0x02	; 2
     fc2:	4b 59       	subi	r20, 0x9B	; 155
     fc4:	5f 4c       	sbci	r21, 0xCF	; 207
     fc6:	e4 17       	cp	r30, r20
     fc8:	f5 07       	cpc	r31, r21
     fca:	29 f4       	brne	.+10     	; 0xfd6 <vTaskSwitchContext+0x9c>
     fcc:	42 81       	ldd	r20, Z+2	; 0x02
     fce:	53 81       	ldd	r21, Z+3	; 0x03
     fd0:	fd 01       	movw	r30, r26
     fd2:	41 83       	std	Z+1, r20	; 0x01
     fd4:	52 83       	std	Z+2, r21	; 0x02
     fd6:	fc 01       	movw	r30, r24
     fd8:	ee 0f       	add	r30, r30
     fda:	ff 1f       	adc	r31, r31
     fdc:	ee 0f       	add	r30, r30
     fde:	ff 1f       	adc	r31, r31
     fe0:	ee 0f       	add	r30, r30
     fe2:	ff 1f       	adc	r31, r31
     fe4:	8e 0f       	add	r24, r30
     fe6:	9f 1f       	adc	r25, r31
     fe8:	fc 01       	movw	r30, r24
     fea:	ee 59       	subi	r30, 0x9E	; 158
     fec:	ff 4c       	sbci	r31, 0xCF	; 207
     fee:	01 80       	ldd	r0, Z+1	; 0x01
     ff0:	f2 81       	ldd	r31, Z+2	; 0x02
     ff2:	e0 2d       	mov	r30, r0
     ff4:	86 81       	ldd	r24, Z+6	; 0x06
     ff6:	97 81       	ldd	r25, Z+7	; 0x07
     ff8:	80 93 86 30 	sts	0x3086, r24	; 0x803086 <pxCurrentTCB>
     ffc:	90 93 87 30 	sts	0x3087, r25	; 0x803087 <pxCurrentTCB+0x1>
    1000:	20 93 36 30 	sts	0x3036, r18	; 0x803036 <uxTopReadyPriority>
    1004:	08 95       	ret

00001006 <vTaskPlaceOnEventList>:
    1006:	cf 93       	push	r28
    1008:	df 93       	push	r29
    100a:	eb 01       	movw	r28, r22
    100c:	60 91 86 30 	lds	r22, 0x3086	; 0x803086 <pxCurrentTCB>
    1010:	70 91 87 30 	lds	r23, 0x3087	; 0x803087 <pxCurrentTCB+0x1>
    1014:	64 5f       	subi	r22, 0xF4	; 244
    1016:	7f 4f       	sbci	r23, 0xFF	; 255
    1018:	0e 94 9d 00 	call	0x13a	; 0x13a <vListInsert>
    101c:	61 e0       	ldi	r22, 0x01	; 1
    101e:	ce 01       	movw	r24, r28
    1020:	0e 94 c0 04 	call	0x980	; 0x980 <prvAddCurrentTaskToDelayedList>
    1024:	df 91       	pop	r29
    1026:	cf 91       	pop	r28
    1028:	08 95       	ret

0000102a <xTaskRemoveFromEventList>:
    102a:	0f 93       	push	r16
    102c:	1f 93       	push	r17
    102e:	cf 93       	push	r28
    1030:	df 93       	push	r29
    1032:	dc 01       	movw	r26, r24
    1034:	15 96       	adiw	r26, 0x05	; 5
    1036:	ed 91       	ld	r30, X+
    1038:	fc 91       	ld	r31, X
    103a:	16 97       	sbiw	r26, 0x06	; 6
    103c:	c6 81       	ldd	r28, Z+6	; 0x06
    103e:	d7 81       	ldd	r29, Z+7	; 0x07
    1040:	8e 01       	movw	r16, r28
    1042:	04 5f       	subi	r16, 0xF4	; 244
    1044:	1f 4f       	sbci	r17, 0xFF	; 255
    1046:	c8 01       	movw	r24, r16
    1048:	0e 94 ce 00 	call	0x19c	; 0x19c <uxListRemove>
    104c:	80 91 2c 30 	lds	r24, 0x302C	; 0x80302c <uxSchedulerSuspended>
    1050:	81 11       	cpse	r24, r1
    1052:	1c c0       	rjmp	.+56     	; 0x108c <xTaskRemoveFromEventList+0x62>
    1054:	0a 50       	subi	r16, 0x0A	; 10
    1056:	11 09       	sbc	r17, r1
    1058:	c8 01       	movw	r24, r16
    105a:	0e 94 ce 00 	call	0x19c	; 0x19c <uxListRemove>
    105e:	8e 89       	ldd	r24, Y+22	; 0x16
    1060:	90 91 36 30 	lds	r25, 0x3036	; 0x803036 <uxTopReadyPriority>
    1064:	98 17       	cp	r25, r24
    1066:	10 f4       	brcc	.+4      	; 0x106c <xTaskRemoveFromEventList+0x42>
    1068:	80 93 36 30 	sts	0x3036, r24	; 0x803036 <uxTopReadyPriority>
    106c:	90 e0       	ldi	r25, 0x00	; 0
    106e:	9c 01       	movw	r18, r24
    1070:	22 0f       	add	r18, r18
    1072:	33 1f       	adc	r19, r19
    1074:	22 0f       	add	r18, r18
    1076:	33 1f       	adc	r19, r19
    1078:	22 0f       	add	r18, r18
    107a:	33 1f       	adc	r19, r19
    107c:	82 0f       	add	r24, r18
    107e:	93 1f       	adc	r25, r19
    1080:	b8 01       	movw	r22, r16
    1082:	8e 59       	subi	r24, 0x9E	; 158
    1084:	9f 4c       	sbci	r25, 0xCF	; 207
    1086:	0e 94 7c 00 	call	0xf8	; 0xf8 <vListInsertEnd>
    108a:	05 c0       	rjmp	.+10     	; 0x1096 <xTaskRemoveFromEventList+0x6c>
    108c:	b8 01       	movw	r22, r16
    108e:	83 e4       	ldi	r24, 0x43	; 67
    1090:	90 e3       	ldi	r25, 0x30	; 48
    1092:	0e 94 7c 00 	call	0xf8	; 0xf8 <vListInsertEnd>
    1096:	e0 91 86 30 	lds	r30, 0x3086	; 0x803086 <pxCurrentTCB>
    109a:	f0 91 87 30 	lds	r31, 0x3087	; 0x803087 <pxCurrentTCB+0x1>
    109e:	9e 89       	ldd	r25, Y+22	; 0x16
    10a0:	86 89       	ldd	r24, Z+22	; 0x16
    10a2:	89 17       	cp	r24, r25
    10a4:	20 f4       	brcc	.+8      	; 0x10ae <xTaskRemoveFromEventList+0x84>
    10a6:	81 e0       	ldi	r24, 0x01	; 1
    10a8:	80 93 33 30 	sts	0x3033, r24	; 0x803033 <xYieldPending>
    10ac:	01 c0       	rjmp	.+2      	; 0x10b0 <xTaskRemoveFromEventList+0x86>
    10ae:	80 e0       	ldi	r24, 0x00	; 0
    10b0:	df 91       	pop	r29
    10b2:	cf 91       	pop	r28
    10b4:	1f 91       	pop	r17
    10b6:	0f 91       	pop	r16
    10b8:	08 95       	ret

000010ba <vTaskInternalSetTimeOutState>:
    10ba:	20 91 32 30 	lds	r18, 0x3032	; 0x803032 <xNumOfOverflows>
    10be:	fc 01       	movw	r30, r24
    10c0:	20 83       	st	Z, r18
    10c2:	20 91 37 30 	lds	r18, 0x3037	; 0x803037 <xTickCount>
    10c6:	30 91 38 30 	lds	r19, 0x3038	; 0x803038 <xTickCount+0x1>
    10ca:	21 83       	std	Z+1, r18	; 0x01
    10cc:	32 83       	std	Z+2, r19	; 0x02
    10ce:	08 95       	ret

000010d0 <xTaskCheckForTimeOut>:
    10d0:	cf 93       	push	r28
    10d2:	df 93       	push	r29
    10d4:	0f b6       	in	r0, 0x3f	; 63
    10d6:	f8 94       	cli
    10d8:	0f 92       	push	r0
    10da:	20 91 37 30 	lds	r18, 0x3037	; 0x803037 <xTickCount>
    10de:	30 91 38 30 	lds	r19, 0x3038	; 0x803038 <xTickCount+0x1>
    10e2:	db 01       	movw	r26, r22
    10e4:	4d 91       	ld	r20, X+
    10e6:	5c 91       	ld	r21, X
    10e8:	4f 3f       	cpi	r20, 0xFF	; 255
    10ea:	bf ef       	ldi	r27, 0xFF	; 255
    10ec:	5b 07       	cpc	r21, r27
    10ee:	f1 f0       	breq	.+60     	; 0x112c <xTaskCheckForTimeOut+0x5c>
    10f0:	ec 01       	movw	r28, r24
    10f2:	e9 81       	ldd	r30, Y+1	; 0x01
    10f4:	fa 81       	ldd	r31, Y+2	; 0x02
    10f6:	a0 91 32 30 	lds	r26, 0x3032	; 0x803032 <xNumOfOverflows>
    10fa:	b8 81       	ld	r27, Y
    10fc:	ba 17       	cp	r27, r26
    10fe:	19 f0       	breq	.+6      	; 0x1106 <xTaskCheckForTimeOut+0x36>
    1100:	2e 17       	cp	r18, r30
    1102:	3f 07       	cpc	r19, r31
    1104:	a8 f4       	brcc	.+42     	; 0x1130 <xTaskCheckForTimeOut+0x60>
    1106:	2e 1b       	sub	r18, r30
    1108:	3f 0b       	sbc	r19, r31
    110a:	24 17       	cp	r18, r20
    110c:	35 07       	cpc	r19, r21
    110e:	48 f4       	brcc	.+18     	; 0x1122 <xTaskCheckForTimeOut+0x52>
    1110:	fb 01       	movw	r30, r22
    1112:	42 1b       	sub	r20, r18
    1114:	53 0b       	sbc	r21, r19
    1116:	40 83       	st	Z, r20
    1118:	51 83       	std	Z+1, r21	; 0x01
    111a:	0e 94 5d 08 	call	0x10ba	; 0x10ba <vTaskInternalSetTimeOutState>
    111e:	80 e0       	ldi	r24, 0x00	; 0
    1120:	08 c0       	rjmp	.+16     	; 0x1132 <xTaskCheckForTimeOut+0x62>
    1122:	fb 01       	movw	r30, r22
    1124:	10 82       	st	Z, r1
    1126:	11 82       	std	Z+1, r1	; 0x01
    1128:	81 e0       	ldi	r24, 0x01	; 1
    112a:	03 c0       	rjmp	.+6      	; 0x1132 <xTaskCheckForTimeOut+0x62>
    112c:	80 e0       	ldi	r24, 0x00	; 0
    112e:	01 c0       	rjmp	.+2      	; 0x1132 <xTaskCheckForTimeOut+0x62>
    1130:	81 e0       	ldi	r24, 0x01	; 1
    1132:	0f 90       	pop	r0
    1134:	0f be       	out	0x3f, r0	; 63
    1136:	df 91       	pop	r29
    1138:	cf 91       	pop	r28
    113a:	08 95       	ret

0000113c <vTaskMissedYield>:
    113c:	81 e0       	ldi	r24, 0x01	; 1
    113e:	80 93 33 30 	sts	0x3033, r24	; 0x803033 <xYieldPending>
    1142:	08 95       	ret

00001144 <xTaskPriorityDisinherit>:
    1144:	0f 93       	push	r16
    1146:	1f 93       	push	r17
    1148:	cf 93       	push	r28
    114a:	df 93       	push	r29
    114c:	fc 01       	movw	r30, r24
    114e:	89 2b       	or	r24, r25
    1150:	79 f1       	breq	.+94     	; 0x11b0 <xTaskPriorityDisinherit+0x6c>
    1152:	82 a1       	ldd	r24, Z+34	; 0x22
    1154:	81 50       	subi	r24, 0x01	; 1
    1156:	82 a3       	std	Z+34, r24	; 0x22
    1158:	26 89       	ldd	r18, Z+22	; 0x16
    115a:	91 a1       	ldd	r25, Z+33	; 0x21
    115c:	29 17       	cp	r18, r25
    115e:	51 f1       	breq	.+84     	; 0x11b4 <xTaskPriorityDisinherit+0x70>
    1160:	81 11       	cpse	r24, r1
    1162:	2a c0       	rjmp	.+84     	; 0x11b8 <xTaskPriorityDisinherit+0x74>
    1164:	ef 01       	movw	r28, r30
    1166:	8f 01       	movw	r16, r30
    1168:	0e 5f       	subi	r16, 0xFE	; 254
    116a:	1f 4f       	sbci	r17, 0xFF	; 255
    116c:	c8 01       	movw	r24, r16
    116e:	0e 94 ce 00 	call	0x19c	; 0x19c <uxListRemove>
    1172:	89 a1       	ldd	r24, Y+33	; 0x21
    1174:	8e 8b       	std	Y+22, r24	; 0x16
    1176:	24 e0       	ldi	r18, 0x04	; 4
    1178:	30 e0       	ldi	r19, 0x00	; 0
    117a:	28 1b       	sub	r18, r24
    117c:	31 09       	sbc	r19, r1
    117e:	2c 87       	std	Y+12, r18	; 0x0c
    1180:	3d 87       	std	Y+13, r19	; 0x0d
    1182:	90 91 36 30 	lds	r25, 0x3036	; 0x803036 <uxTopReadyPriority>
    1186:	98 17       	cp	r25, r24
    1188:	10 f4       	brcc	.+4      	; 0x118e <xTaskPriorityDisinherit+0x4a>
    118a:	80 93 36 30 	sts	0x3036, r24	; 0x803036 <uxTopReadyPriority>
    118e:	90 e0       	ldi	r25, 0x00	; 0
    1190:	9c 01       	movw	r18, r24
    1192:	22 0f       	add	r18, r18
    1194:	33 1f       	adc	r19, r19
    1196:	22 0f       	add	r18, r18
    1198:	33 1f       	adc	r19, r19
    119a:	22 0f       	add	r18, r18
    119c:	33 1f       	adc	r19, r19
    119e:	82 0f       	add	r24, r18
    11a0:	93 1f       	adc	r25, r19
    11a2:	b8 01       	movw	r22, r16
    11a4:	8e 59       	subi	r24, 0x9E	; 158
    11a6:	9f 4c       	sbci	r25, 0xCF	; 207
    11a8:	0e 94 7c 00 	call	0xf8	; 0xf8 <vListInsertEnd>
    11ac:	81 e0       	ldi	r24, 0x01	; 1
    11ae:	05 c0       	rjmp	.+10     	; 0x11ba <xTaskPriorityDisinherit+0x76>
    11b0:	80 e0       	ldi	r24, 0x00	; 0
    11b2:	03 c0       	rjmp	.+6      	; 0x11ba <xTaskPriorityDisinherit+0x76>
    11b4:	80 e0       	ldi	r24, 0x00	; 0
    11b6:	01 c0       	rjmp	.+2      	; 0x11ba <xTaskPriorityDisinherit+0x76>
    11b8:	80 e0       	ldi	r24, 0x00	; 0
    11ba:	df 91       	pop	r29
    11bc:	cf 91       	pop	r28
    11be:	1f 91       	pop	r17
    11c0:	0f 91       	pop	r16
    11c2:	08 95       	ret

000011c4 <vSenderTask>:
	vTaskStartScheduler();
	return 0;
}

void vSenderTask(void *pvParams)
{
    11c4:	cf 93       	push	r28
    11c6:	df 93       	push	r29
    11c8:	00 d0       	rcall	.+0      	; 0x11ca <vSenderTask+0x6>
    11ca:	cd b7       	in	r28, 0x3d	; 61
    11cc:	de b7       	in	r29, 0x3e	; 62
    11ce:	89 83       	std	Y+1, r24	; 0x01
    11d0:	9a 83       	std	Y+2, r25	; 0x02
	for (;;)
	{
		if (strlen((char*)pvParams)>0)
    11d2:	e9 81       	ldd	r30, Y+1	; 0x01
    11d4:	fa 81       	ldd	r31, Y+2	; 0x02
    11d6:	80 81       	ld	r24, Z
    11d8:	88 23       	and	r24, r24
    11da:	61 f0       	breq	.+24     	; 0x11f4 <vSenderTask+0x30>
		{
			xQueueSend(xPrintQueue,(void *)&pvParams,0);
    11dc:	20 e0       	ldi	r18, 0x00	; 0
    11de:	40 e0       	ldi	r20, 0x00	; 0
    11e0:	50 e0       	ldi	r21, 0x00	; 0
    11e2:	be 01       	movw	r22, r28
    11e4:	6f 5f       	subi	r22, 0xFF	; 255
    11e6:	7f 4f       	sbci	r23, 0xFF	; 255
    11e8:	80 91 ee 30 	lds	r24, 0x30EE	; 0x8030ee <xPrintQueue>
    11ec:	90 91 ef 30 	lds	r25, 0x30EF	; 0x8030ef <xPrintQueue+0x1>
    11f0:	0e 94 69 03 	call	0x6d2	; 0x6d2 <xQueueGenericSend>
		}
		vTaskDelay(pdMS_TO_TICKS(500));
    11f4:	84 ef       	ldi	r24, 0xF4	; 244
    11f6:	91 e0       	ldi	r25, 0x01	; 1
    11f8:	0e 94 89 07 	call	0xf12	; 0xf12 <vTaskDelay>
	}
    11fc:	ea cf       	rjmp	.-44     	; 0x11d2 <vSenderTask+0xe>

000011fe <main>:
char msg[] = "This is the Message\r\n";
char *ptr = msg;
extern char command[10];

int main(void)
{
    11fe:	ef 92       	push	r14
    1200:	ff 92       	push	r15
    1202:	0f 93       	push	r16
	atmel_start_init();
    1204:	0e 94 67 00 	call	0xce	; 0xce <atmel_start_init>
	
	xPrintQueue = xQueueCreate(5,2);
    1208:	40 e0       	ldi	r20, 0x00	; 0
    120a:	62 e0       	ldi	r22, 0x02	; 2
    120c:	85 e0       	ldi	r24, 0x05	; 5
    120e:	0e 94 3c 03 	call	0x678	; 0x678 <xQueueGenericCreate>
    1212:	80 93 ee 30 	sts	0x30EE, r24	; 0x8030ee <xPrintQueue>
    1216:	90 93 ef 30 	sts	0x30EF, r25	; 0x8030ef <xPrintQueue+0x1>
	/* Task Registration and creation */
	xTaskCreate(vSenderTask, "sender", configMINIMAL_STACK_SIZE, (void *)msg, 1, NULL);
    121a:	e1 2c       	mov	r14, r1
    121c:	f1 2c       	mov	r15, r1
    121e:	01 e0       	ldi	r16, 0x01	; 1
    1220:	20 e0       	ldi	r18, 0x00	; 0
    1222:	38 e2       	ldi	r19, 0x28	; 40
    1224:	43 e7       	ldi	r20, 0x73	; 115
    1226:	50 e0       	ldi	r21, 0x00	; 0
    1228:	65 e0       	ldi	r22, 0x05	; 5
    122a:	7b e5       	ldi	r23, 0x5B	; 91
    122c:	82 ee       	ldi	r24, 0xE2	; 226
    122e:	98 e0       	ldi	r25, 0x08	; 8
    1230:	0e 94 18 05 	call	0xa30	; 0xa30 <xTaskCreate>
	xTaskCreate(vReceiverTask, "receiver", configMINIMAL_STACK_SIZE, NULL, 2, NULL);
    1234:	02 e0       	ldi	r16, 0x02	; 2
    1236:	20 e0       	ldi	r18, 0x00	; 0
    1238:	30 e0       	ldi	r19, 0x00	; 0
    123a:	43 e7       	ldi	r20, 0x73	; 115
    123c:	50 e0       	ldi	r21, 0x00	; 0
    123e:	6c e0       	ldi	r22, 0x0C	; 12
    1240:	7b e5       	ldi	r23, 0x5B	; 91
    1242:	89 e3       	ldi	r24, 0x39	; 57
    1244:	99 e0       	ldi	r25, 0x09	; 9
    1246:	0e 94 18 05 	call	0xa30	; 0xa30 <xTaskCreate>
	
	vTaskStartScheduler();
    124a:	0e 94 22 06 	call	0xc44	; 0xc44 <vTaskStartScheduler>
	return 0;
}
    124e:	80 e0       	ldi	r24, 0x00	; 0
    1250:	90 e0       	ldi	r25, 0x00	; 0
    1252:	0f 91       	pop	r16
    1254:	ff 90       	pop	r15
    1256:	ef 90       	pop	r14
    1258:	08 95       	ret

0000125a <vPrintString>:
	}
}

void vPrintString(void *pvParams)
{
	ENTER_CRITICAL();
    125a:	0f b6       	in	r0, 0x3f	; 63
    125c:	f8 94       	cli
    125e:	0f 92       	push	r0
	printf((const char *)pvParams);
    1260:	9f 93       	push	r25
    1262:	8f 93       	push	r24
    1264:	0e 94 a6 0a 	call	0x154c	; 0x154c <printf>
	EXIT_CRITICAL();
    1268:	0f 90       	pop	r0
    126a:	0f be       	out	0x3f, r0	; 63
    126c:	0f 90       	pop	r0
    126e:	0f 90       	pop	r0
    1270:	08 95       	ret

00001272 <vReceiverTask>:
		}
		vTaskDelay(pdMS_TO_TICKS(500));
	}
}
void vReceiverTask(void *pvParams)
{
    1272:	cf 93       	push	r28
    1274:	df 93       	push	r29
    1276:	00 d0       	rcall	.+0      	; 0x1278 <vReceiverTask+0x6>
    1278:	cd b7       	in	r28, 0x3d	; 61
    127a:	de b7       	in	r29, 0x3e	; 62
	char *ptr=NULL;
    127c:	19 82       	std	Y+1, r1	; 0x01
    127e:	1a 82       	std	Y+2, r1	; 0x02
	for (;;)
	{
		if( xQueueReceive(xPrintQueue,(void *)&ptr,100) == pdPASS )
    1280:	44 e6       	ldi	r20, 0x64	; 100
    1282:	50 e0       	ldi	r21, 0x00	; 0
    1284:	be 01       	movw	r22, r28
    1286:	6f 5f       	subi	r22, 0xFF	; 255
    1288:	7f 4f       	sbci	r23, 0xFF	; 255
    128a:	80 91 ee 30 	lds	r24, 0x30EE	; 0x8030ee <xPrintQueue>
    128e:	90 91 ef 30 	lds	r25, 0x30EF	; 0x8030ef <xPrintQueue+0x1>
    1292:	0e 94 05 04 	call	0x80a	; 0x80a <xQueueReceive>
    1296:	81 30       	cpi	r24, 0x01	; 1
    1298:	99 f7       	brne	.-26     	; 0x1280 <vReceiverTask+0xe>
		vPrintString((void *)ptr);
    129a:	89 81       	ldd	r24, Y+1	; 0x01
    129c:	9a 81       	ldd	r25, Y+2	; 0x02
    129e:	0e 94 2d 09 	call	0x125a	; 0x125a <vPrintString>
    12a2:	ee cf       	rjmp	.-36     	; 0x1280 <vReceiverTask+0xe>

000012a4 <BOD_init>:
    12a4:	82 e0       	ldi	r24, 0x02	; 2
    12a6:	80 93 89 00 	sts	0x0089, r24	; 0x800089 <__TEXT_REGION_LENGTH__+0x700089>
    12aa:	80 e0       	ldi	r24, 0x00	; 0
    12ac:	08 95       	ret

000012ae <CLKCTRL_init>:
    12ae:	41 e0       	ldi	r20, 0x01	; 1
    12b0:	68 ed       	ldi	r22, 0xD8	; 216
    12b2:	81 e6       	ldi	r24, 0x61	; 97
    12b4:	90 e0       	ldi	r25, 0x00	; 0
    12b6:	0e 94 b8 09 	call	0x1370	; 0x1370 <protected_write_io>
    12ba:	80 e0       	ldi	r24, 0x00	; 0
    12bc:	08 95       	ret

000012be <CPUINT_init>:
    12be:	80 e0       	ldi	r24, 0x00	; 0
    12c0:	08 95       	ret

000012c2 <mcu_init>:
#ifdef __cplusplus
extern "C" {
#endif

void mcu_init(void)
{
    12c2:	e0 e1       	ldi	r30, 0x10	; 16
    12c4:	f4 e0       	ldi	r31, 0x04	; 4
	 * peripheral if used */

	/* Set all pins to low power mode */

	for (uint8_t i = 0; i < 8; i++) {
		*((uint8_t *)&PORTA + 0x10 + i) |= 1 << PORT_PULLUPEN_bp;
    12c6:	80 81       	ld	r24, Z
    12c8:	88 60       	ori	r24, 0x08	; 8
    12ca:	81 93       	st	Z+, r24
	 * disables all peripherals to save power. Driver shall enable
	 * peripheral if used */

	/* Set all pins to low power mode */

	for (uint8_t i = 0; i < 8; i++) {
    12cc:	e8 31       	cpi	r30, 0x18	; 24
    12ce:	84 e0       	ldi	r24, 0x04	; 4
    12d0:	f8 07       	cpc	r31, r24
    12d2:	c9 f7       	brne	.-14     	; 0x12c6 <mcu_init+0x4>
    12d4:	e0 e3       	ldi	r30, 0x30	; 48
    12d6:	f4 e0       	ldi	r31, 0x04	; 4
		*((uint8_t *)&PORTA + 0x10 + i) |= 1 << PORT_PULLUPEN_bp;
	}

	for (uint8_t i = 0; i < 8; i++) {
		*((uint8_t *)&PORTB + 0x10 + i) |= 1 << PORT_PULLUPEN_bp;
    12d8:	80 81       	ld	r24, Z
    12da:	88 60       	ori	r24, 0x08	; 8
    12dc:	81 93       	st	Z+, r24

	for (uint8_t i = 0; i < 8; i++) {
		*((uint8_t *)&PORTA + 0x10 + i) |= 1 << PORT_PULLUPEN_bp;
	}

	for (uint8_t i = 0; i < 8; i++) {
    12de:	e8 33       	cpi	r30, 0x38	; 56
    12e0:	84 e0       	ldi	r24, 0x04	; 4
    12e2:	f8 07       	cpc	r31, r24
    12e4:	c9 f7       	brne	.-14     	; 0x12d8 <mcu_init+0x16>
    12e6:	e0 e5       	ldi	r30, 0x50	; 80
    12e8:	f4 e0       	ldi	r31, 0x04	; 4
		*((uint8_t *)&PORTB + 0x10 + i) |= 1 << PORT_PULLUPEN_bp;
	}

	for (uint8_t i = 0; i < 8; i++) {
		*((uint8_t *)&PORTC + 0x10 + i) |= 1 << PORT_PULLUPEN_bp;
    12ea:	80 81       	ld	r24, Z
    12ec:	88 60       	ori	r24, 0x08	; 8
    12ee:	81 93       	st	Z+, r24

	for (uint8_t i = 0; i < 8; i++) {
		*((uint8_t *)&PORTB + 0x10 + i) |= 1 << PORT_PULLUPEN_bp;
	}

	for (uint8_t i = 0; i < 8; i++) {
    12f0:	e8 35       	cpi	r30, 0x58	; 88
    12f2:	84 e0       	ldi	r24, 0x04	; 4
    12f4:	f8 07       	cpc	r31, r24
    12f6:	c9 f7       	brne	.-14     	; 0x12ea <mcu_init+0x28>
    12f8:	e0 e7       	ldi	r30, 0x70	; 112
    12fa:	f4 e0       	ldi	r31, 0x04	; 4
		*((uint8_t *)&PORTC + 0x10 + i) |= 1 << PORT_PULLUPEN_bp;
	}

	for (uint8_t i = 0; i < 8; i++) {
		*((uint8_t *)&PORTD + 0x10 + i) |= 1 << PORT_PULLUPEN_bp;
    12fc:	80 81       	ld	r24, Z
    12fe:	88 60       	ori	r24, 0x08	; 8
    1300:	81 93       	st	Z+, r24

	for (uint8_t i = 0; i < 8; i++) {
		*((uint8_t *)&PORTC + 0x10 + i) |= 1 << PORT_PULLUPEN_bp;
	}

	for (uint8_t i = 0; i < 8; i++) {
    1302:	e8 37       	cpi	r30, 0x78	; 120
    1304:	84 e0       	ldi	r24, 0x04	; 4
    1306:	f8 07       	cpc	r31, r24
    1308:	c9 f7       	brne	.-14     	; 0x12fc <mcu_init+0x3a>
    130a:	e0 e9       	ldi	r30, 0x90	; 144
    130c:	f4 e0       	ldi	r31, 0x04	; 4
		*((uint8_t *)&PORTD + 0x10 + i) |= 1 << PORT_PULLUPEN_bp;
	}

	for (uint8_t i = 0; i < 8; i++) {
		*((uint8_t *)&PORTE + 0x10 + i) |= 1 << PORT_PULLUPEN_bp;
    130e:	80 81       	ld	r24, Z
    1310:	88 60       	ori	r24, 0x08	; 8
    1312:	81 93       	st	Z+, r24

	for (uint8_t i = 0; i < 8; i++) {
		*((uint8_t *)&PORTD + 0x10 + i) |= 1 << PORT_PULLUPEN_bp;
	}

	for (uint8_t i = 0; i < 8; i++) {
    1314:	e8 39       	cpi	r30, 0x98	; 152
    1316:	84 e0       	ldi	r24, 0x04	; 4
    1318:	f8 07       	cpc	r31, r24
    131a:	c9 f7       	brne	.-14     	; 0x130e <mcu_init+0x4c>
    131c:	e0 eb       	ldi	r30, 0xB0	; 176
    131e:	f4 e0       	ldi	r31, 0x04	; 4
		*((uint8_t *)&PORTE + 0x10 + i) |= 1 << PORT_PULLUPEN_bp;
	}

	for (uint8_t i = 0; i < 8; i++) {
		*((uint8_t *)&PORTF + 0x10 + i) |= 1 << PORT_PULLUPEN_bp;
    1320:	80 81       	ld	r24, Z
    1322:	88 60       	ori	r24, 0x08	; 8
    1324:	81 93       	st	Z+, r24

	for (uint8_t i = 0; i < 8; i++) {
		*((uint8_t *)&PORTE + 0x10 + i) |= 1 << PORT_PULLUPEN_bp;
	}

	for (uint8_t i = 0; i < 8; i++) {
    1326:	e8 3b       	cpi	r30, 0xB8	; 184
    1328:	84 e0       	ldi	r24, 0x04	; 4
    132a:	f8 07       	cpc	r31, r24
    132c:	c9 f7       	brne	.-14     	; 0x1320 <mcu_init+0x5e>
		*((uint8_t *)&PORTF + 0x10 + i) |= 1 << PORT_PULLUPEN_bp;
	}
}
    132e:	08 95       	ret

00001330 <USART_0_initialization>:
 */
static inline void PORTF_set_pin_dir(const uint8_t pin, const enum port_dir dir)
{
	switch (dir) {
	case PORT_DIR_IN:
		VPORTF.DIR &= ~(1 << pin);
    1330:	a1 98       	cbi	0x14, 1	; 20
	volatile uint8_t *port_pin_ctrl = ((uint8_t *)&PORTF + 0x10 + pin);

	if (pull_mode == PORT_PULL_UP) {
		*port_pin_ctrl |= PORT_PULLUPEN_bm;
	} else if (pull_mode == PORT_PULL_OFF) {
		*port_pin_ctrl &= ~PORT_PULLUPEN_bm;
    1332:	e1 eb       	ldi	r30, 0xB1	; 177
    1334:	f4 e0       	ldi	r31, 0x04	; 4
    1336:	80 81       	ld	r24, Z
    1338:	87 7f       	andi	r24, 0xF7	; 247
    133a:	80 83       	st	Z, r24
	switch (dir) {
	case PORT_DIR_IN:
		VPORTF.DIR &= ~(1 << pin);
		break;
	case PORT_DIR_OUT:
		VPORTF.DIR |= (1 << pin);
    133c:	a0 9a       	sbi	0x14, 0	; 20
static inline void PORTF_set_pin_level(const uint8_t pin, const bool level)
{
	if (level == true) {
		VPORTF.OUT |= (1 << pin);
	} else {
		VPORTF.OUT &= ~(1 << pin);
    133e:	a8 98       	cbi	0x15, 0	; 21
	    // <id> pad_initial_level
	    // <false"> Low
	    // <true"> High
	    false);

	USART_0_init();
    1340:	0e 94 7f 0a 	call	0x14fe	; 0x14fe <USART_0_init>
    1344:	08 95       	ret

00001346 <system_init>:
/**
 * \brief System initialization
 */
void system_init()
{
	mcu_init();
    1346:	0e 94 61 09 	call	0x12c2	; 0x12c2 <mcu_init>
	switch (dir) {
	case PORT_DIR_IN:
		VPORTD.DIR &= ~(1 << pin);
		break;
	case PORT_DIR_OUT:
		VPORTD.DIR |= (1 << pin);
    134a:	60 9a       	sbi	0x0c, 0	; 12
 *                  false = Pin level set to "low" state
 */
static inline void PORTD_set_pin_level(const uint8_t pin, const bool level)
{
	if (level == true) {
		VPORTD.OUT |= (1 << pin);
    134c:	68 9a       	sbi	0x0d, 0	; 13
	switch (dir) {
	case PORT_DIR_IN:
		VPORTD.DIR &= ~(1 << pin);
		break;
	case PORT_DIR_OUT:
		VPORTD.DIR |= (1 << pin);
    134e:	61 9a       	sbi	0x0c, 1	; 12
 *                  false = Pin level set to "low" state
 */
static inline void PORTD_set_pin_level(const uint8_t pin, const bool level)
{
	if (level == true) {
		VPORTD.OUT |= (1 << pin);
    1350:	69 9a       	sbi	0x0d, 1	; 13
	switch (dir) {
	case PORT_DIR_IN:
		VPORTD.DIR &= ~(1 << pin);
		break;
	case PORT_DIR_OUT:
		VPORTD.DIR |= (1 << pin);
    1352:	62 9a       	sbi	0x0c, 2	; 12
 *                  false = Pin level set to "low" state
 */
static inline void PORTD_set_pin_level(const uint8_t pin, const bool level)
{
	if (level == true) {
		VPORTD.OUT |= (1 << pin);
    1354:	6a 9a       	sbi	0x0d, 2	; 13
	switch (dir) {
	case PORT_DIR_IN:
		VPORTD.DIR &= ~(1 << pin);
		break;
	case PORT_DIR_OUT:
		VPORTD.DIR |= (1 << pin);
    1356:	63 9a       	sbi	0x0c, 3	; 12
 *                  false = Pin level set to "low" state
 */
static inline void PORTD_set_pin_level(const uint8_t pin, const bool level)
{
	if (level == true) {
		VPORTD.OUT |= (1 << pin);
    1358:	6b 9a       	sbi	0x0d, 3	; 13
	    // <id> pad_initial_level
	    // <false"> Low
	    // <true"> High
	    true);

	CLKCTRL_init();
    135a:	0e 94 57 09 	call	0x12ae	; 0x12ae <CLKCTRL_init>

	USART_0_initialization();
    135e:	0e 94 98 09 	call	0x1330	; 0x1330 <USART_0_initialization>

	CPUINT_init();
    1362:	0e 94 5f 09 	call	0x12be	; 0x12be <CPUINT_init>

	SLPCTRL_init();
    1366:	0e 94 bc 09 	call	0x1378	; 0x1378 <SLPCTRL_init>

	BOD_init();
    136a:	0e 94 52 09 	call	0x12a4	; 0x12a4 <BOD_init>
    136e:	08 95       	ret

00001370 <protected_write_io>:
    1370:	fc 01       	movw	r30, r24
    1372:	64 bf       	out	0x34, r22	; 52
    1374:	40 83       	st	Z, r20
    1376:	08 95       	ret

00001378 <SLPCTRL_init>:
    1378:	80 e0       	ldi	r24, 0x00	; 0
    137a:	08 95       	ret

0000137c <USART_0_default_udre_isr_cb>:
	USART_0_rx_elements--;
	EXIT_CRITICAL(R);

	/* Return data */
	return USART_0_rxbuf[tmptail];
}
    137c:	80 91 88 30 	lds	r24, 0x3088	; 0x803088 <USART_0_tx_elements>
    1380:	88 23       	and	r24, r24
    1382:	89 f0       	breq	.+34     	; 0x13a6 <USART_0_default_udre_isr_cb+0x2a>
    1384:	e0 91 89 30 	lds	r30, 0x3089	; 0x803089 <USART_0_tx_tail>
    1388:	ef 5f       	subi	r30, 0xFF	; 255
    138a:	ef 71       	andi	r30, 0x1F	; 31
    138c:	e0 93 89 30 	sts	0x3089, r30	; 0x803089 <USART_0_tx_tail>
    1390:	f0 e0       	ldi	r31, 0x00	; 0
    1392:	e5 57       	subi	r30, 0x75	; 117
    1394:	ff 4c       	sbci	r31, 0xCF	; 207
    1396:	80 81       	ld	r24, Z
    1398:	80 93 42 08 	sts	0x0842, r24	; 0x800842 <__TEXT_REGION_LENGTH__+0x700842>
    139c:	80 91 88 30 	lds	r24, 0x3088	; 0x803088 <USART_0_tx_elements>
    13a0:	81 50       	subi	r24, 0x01	; 1
    13a2:	80 93 88 30 	sts	0x3088, r24	; 0x803088 <USART_0_tx_elements>
    13a6:	80 91 88 30 	lds	r24, 0x3088	; 0x803088 <USART_0_tx_elements>
    13aa:	81 11       	cpse	r24, r1
    13ac:	05 c0       	rjmp	.+10     	; 0x13b8 <USART_0_default_udre_isr_cb+0x3c>
    13ae:	e0 e4       	ldi	r30, 0x40	; 64
    13b0:	f8 e0       	ldi	r31, 0x08	; 8
    13b2:	85 81       	ldd	r24, Z+5	; 0x05
    13b4:	8f 7d       	andi	r24, 0xDF	; 223
    13b6:	85 83       	std	Z+5, r24	; 0x05
    13b8:	08 95       	ret

000013ba <USART_0_default_rx_isr_cb>:
    13ba:	20 91 40 08 	lds	r18, 0x0840	; 0x800840 <__TEXT_REGION_LENGTH__+0x700840>
    13be:	80 91 ad 30 	lds	r24, 0x30AD	; 0x8030ad <USART_0_rx_head>
    13c2:	8f 5f       	subi	r24, 0xFF	; 255
    13c4:	8f 73       	andi	r24, 0x3F	; 63
    13c6:	90 91 ac 30 	lds	r25, 0x30AC	; 0x8030ac <USART_0_rx_tail>
    13ca:	89 17       	cp	r24, r25
    13cc:	09 f1       	breq	.+66     	; 0x1410 <USART_0_default_rx_isr_cb+0x56>
    13ce:	80 93 ad 30 	sts	0x30AD, r24	; 0x8030ad <USART_0_rx_head>
    13d2:	90 e0       	ldi	r25, 0x00	; 0
    13d4:	fc 01       	movw	r30, r24
    13d6:	e2 55       	subi	r30, 0x52	; 82
    13d8:	ff 4c       	sbci	r31, 0xCF	; 207
    13da:	20 83       	st	Z, r18
    13dc:	2a 30       	cpi	r18, 0x0A	; 10
    13de:	99 f4       	brne	.+38     	; 0x1406 <USART_0_default_rx_isr_cb+0x4c>
    13e0:	fc 01       	movw	r30, r24
    13e2:	e2 55       	subi	r30, 0x52	; 82
    13e4:	ff 4c       	sbci	r31, 0xCF	; 207
    13e6:	11 82       	std	Z+1, r1	; 0x01
    13e8:	85 e0       	ldi	r24, 0x05	; 5
    13ea:	e5 e1       	ldi	r30, 0x15	; 21
    13ec:	fb e5       	ldi	r31, 0x5B	; 91
    13ee:	a0 ef       	ldi	r26, 0xF0	; 240
    13f0:	b0 e3       	ldi	r27, 0x30	; 48
    13f2:	01 90       	ld	r0, Z+
    13f4:	0d 92       	st	X+, r0
    13f6:	8a 95       	dec	r24
    13f8:	e1 f7       	brne	.-8      	; 0x13f2 <USART_0_default_rx_isr_cb+0x38>
    13fa:	10 92 ab 30 	sts	0x30AB, r1	; 0x8030ab <USART_0_rx_elements>
    13fe:	10 92 ad 30 	sts	0x30AD, r1	; 0x8030ad <USART_0_rx_head>
    1402:	71 9a       	sbi	0x0e, 1	; 14
    1404:	08 95       	ret
    1406:	80 91 ab 30 	lds	r24, 0x30AB	; 0x8030ab <USART_0_rx_elements>
    140a:	8f 5f       	subi	r24, 0xFF	; 255
    140c:	80 93 ab 30 	sts	0x30AB, r24	; 0x8030ab <USART_0_rx_elements>
    1410:	08 95       	ret

00001412 <__vector_31>:
    1412:	1f 92       	push	r1
    1414:	0f 92       	push	r0
    1416:	0f b6       	in	r0, 0x3f	; 63
    1418:	0f 92       	push	r0
    141a:	11 24       	eor	r1, r1
    141c:	2f 93       	push	r18
    141e:	3f 93       	push	r19
    1420:	4f 93       	push	r20
    1422:	5f 93       	push	r21
    1424:	6f 93       	push	r22
    1426:	7f 93       	push	r23
    1428:	8f 93       	push	r24
    142a:	9f 93       	push	r25
    142c:	af 93       	push	r26
    142e:	bf 93       	push	r27
    1430:	ef 93       	push	r30
    1432:	ff 93       	push	r31
    1434:	e0 91 18 28 	lds	r30, 0x2818	; 0x802818 <USART_0_rx_isr_cb>
    1438:	f0 91 19 28 	lds	r31, 0x2819	; 0x802819 <USART_0_rx_isr_cb+0x1>
    143c:	30 97       	sbiw	r30, 0x00	; 0
    143e:	09 f0       	breq	.+2      	; 0x1442 <__vector_31+0x30>
    1440:	09 95       	icall
    1442:	ff 91       	pop	r31
    1444:	ef 91       	pop	r30
    1446:	bf 91       	pop	r27
    1448:	af 91       	pop	r26
    144a:	9f 91       	pop	r25
    144c:	8f 91       	pop	r24
    144e:	7f 91       	pop	r23
    1450:	6f 91       	pop	r22
    1452:	5f 91       	pop	r21
    1454:	4f 91       	pop	r20
    1456:	3f 91       	pop	r19
    1458:	2f 91       	pop	r18
    145a:	0f 90       	pop	r0
    145c:	0f be       	out	0x3f, r0	; 63
    145e:	0f 90       	pop	r0
    1460:	1f 90       	pop	r1
    1462:	18 95       	reti

00001464 <__vector_32>:
    1464:	1f 92       	push	r1
    1466:	0f 92       	push	r0
    1468:	0f b6       	in	r0, 0x3f	; 63
    146a:	0f 92       	push	r0
    146c:	11 24       	eor	r1, r1
    146e:	2f 93       	push	r18
    1470:	3f 93       	push	r19
    1472:	4f 93       	push	r20
    1474:	5f 93       	push	r21
    1476:	6f 93       	push	r22
    1478:	7f 93       	push	r23
    147a:	8f 93       	push	r24
    147c:	9f 93       	push	r25
    147e:	af 93       	push	r26
    1480:	bf 93       	push	r27
    1482:	ef 93       	push	r30
    1484:	ff 93       	push	r31
    1486:	e0 91 16 28 	lds	r30, 0x2816	; 0x802816 <USART_0_udre_isr_cb>
    148a:	f0 91 17 28 	lds	r31, 0x2817	; 0x802817 <USART_0_udre_isr_cb+0x1>
    148e:	30 97       	sbiw	r30, 0x00	; 0
    1490:	09 f0       	breq	.+2      	; 0x1494 <__vector_32+0x30>
    1492:	09 95       	icall
    1494:	ff 91       	pop	r31
    1496:	ef 91       	pop	r30
    1498:	bf 91       	pop	r27
    149a:	af 91       	pop	r26
    149c:	9f 91       	pop	r25
    149e:	8f 91       	pop	r24
    14a0:	7f 91       	pop	r23
    14a2:	6f 91       	pop	r22
    14a4:	5f 91       	pop	r21
    14a6:	4f 91       	pop	r20
    14a8:	3f 91       	pop	r19
    14aa:	2f 91       	pop	r18
    14ac:	0f 90       	pop	r0
    14ae:	0f be       	out	0x3f, r0	; 63
    14b0:	0f 90       	pop	r0
    14b2:	1f 90       	pop	r1
    14b4:	18 95       	reti

000014b6 <USART_0_write>:
void USART_0_write(const uint8_t data)
{
	uint8_t tmphead;

	/* Calculate buffer index */
	tmphead = (USART_0_tx_head + 1) & USART_0_TX_BUFFER_MASK;
    14b6:	20 91 8a 30 	lds	r18, 0x308A	; 0x80308a <USART_0_tx_head>
    14ba:	2f 5f       	subi	r18, 0xFF	; 255
    14bc:	2f 71       	andi	r18, 0x1F	; 31
	/* Wait for free space in buffer */
	while (USART_0_tx_elements == USART_0_TX_BUFFER_SIZE)
    14be:	90 91 88 30 	lds	r25, 0x3088	; 0x803088 <USART_0_tx_elements>
    14c2:	90 32       	cpi	r25, 0x20	; 32
    14c4:	e1 f3       	breq	.-8      	; 0x14be <USART_0_write+0x8>
		;
	/* Store data in buffer */
	USART_0_txbuf[tmphead] = data;
    14c6:	e2 2f       	mov	r30, r18
    14c8:	f0 e0       	ldi	r31, 0x00	; 0
    14ca:	e5 57       	subi	r30, 0x75	; 117
    14cc:	ff 4c       	sbci	r31, 0xCF	; 207
    14ce:	80 83       	st	Z, r24
	/* Store new index */
	USART_0_tx_head = tmphead;
    14d0:	20 93 8a 30 	sts	0x308A, r18	; 0x80308a <USART_0_tx_head>
	ENTER_CRITICAL(W);
    14d4:	0f b6       	in	r0, 0x3f	; 63
    14d6:	f8 94       	cli
    14d8:	0f 92       	push	r0
	USART_0_tx_elements++;
    14da:	80 91 88 30 	lds	r24, 0x3088	; 0x803088 <USART_0_tx_elements>
    14de:	8f 5f       	subi	r24, 0xFF	; 255
    14e0:	80 93 88 30 	sts	0x3088, r24	; 0x803088 <USART_0_tx_elements>
	EXIT_CRITICAL(W);
    14e4:	0f 90       	pop	r0
    14e6:	0f be       	out	0x3f, r0	; 63
	/* Enable UDRE interrupt */
	USART2.CTRLA |= (1 << USART_DREIE_bp);
    14e8:	e0 e4       	ldi	r30, 0x40	; 64
    14ea:	f8 e0       	ldi	r31, 0x08	; 8
    14ec:	85 81       	ldd	r24, Z+5	; 0x05
    14ee:	80 62       	ori	r24, 0x20	; 32
    14f0:	85 83       	std	Z+5, r24	; 0x05
    14f2:	08 95       	ret

000014f4 <USART_0_printCHAR>:

#if defined(__GNUC__)

int USART_0_printCHAR(char character, FILE *stream)
{
	USART_0_write(character);
    14f4:	0e 94 5b 0a 	call	0x14b6	; 0x14b6 <USART_0_write>
	return 0;
}
    14f8:	80 e0       	ldi	r24, 0x00	; 0
    14fa:	90 e0       	ldi	r25, 0x00	; 0
    14fc:	08 95       	ret

000014fe <USART_0_init>:
 * \retval 1 the USART init was not successful
 */
int8_t USART_0_init()
{

	USART2.BAUD = (uint16_t)USART2_BAUD_RATE(9600); /* set baud rate register */
    14fe:	e0 e4       	ldi	r30, 0x40	; 64
    1500:	f8 e0       	ldi	r31, 0x08	; 8
    1502:	87 e4       	ldi	r24, 0x47	; 71
    1504:	90 e1       	ldi	r25, 0x10	; 16
    1506:	80 87       	std	Z+8, r24	; 0x08
    1508:	91 87       	std	Z+9, r25	; 0x09

	USART2.CTRLA = 0 << USART_ABEIE_bp /* Auto-baud Error Interrupt Enable: disabled */
    150a:	80 e8       	ldi	r24, 0x80	; 128
    150c:	85 83       	std	Z+5, r24	; 0x05
			| USART_RS485_OFF_gc /* RS485 Mode disabled */
			| 1 << USART_RXCIE_bp /* Receive Complete Interrupt Enable: disabled */
			| 0 << USART_RXSIE_bp /* Receiver Start Frame Interrupt Enable: disabled */
			| 0 << USART_TXCIE_bp; /* Transmit Complete Interrupt Enable: disabled */

	USART2.CTRLB = 0 << USART_MPCM_bp       /* Multi-processor Communication Mode: disabled */
    150e:	80 ec       	ldi	r24, 0xC0	; 192
    1510:	86 83       	std	Z+6, r24	; 0x06
	uint8_t x;

	/* Initialize ringbuffers */
	x = 0;

	USART_0_rx_tail     = x;
    1512:	10 92 ac 30 	sts	0x30AC, r1	; 0x8030ac <USART_0_rx_tail>
	USART_0_rx_head     = x;
    1516:	10 92 ad 30 	sts	0x30AD, r1	; 0x8030ad <USART_0_rx_head>
	USART_0_rx_elements = x;
    151a:	10 92 ab 30 	sts	0x30AB, r1	; 0x8030ab <USART_0_rx_elements>
	USART_0_tx_tail     = x;
    151e:	10 92 89 30 	sts	0x3089, r1	; 0x803089 <USART_0_tx_tail>
	USART_0_tx_head     = x;
    1522:	10 92 8a 30 	sts	0x308A, r1	; 0x80308a <USART_0_tx_head>
	USART_0_tx_elements = x;
    1526:	10 92 88 30 	sts	0x3088, r1	; 0x803088 <USART_0_tx_elements>

#if defined(__GNUC__)
	stdout = &USART_0_stream;
    152a:	8a e1       	ldi	r24, 0x1A	; 26
    152c:	98 e2       	ldi	r25, 0x28	; 40
    152e:	80 93 fc 30 	sts	0x30FC, r24	; 0x8030fc <__iob+0x2>
    1532:	90 93 fd 30 	sts	0x30FD, r25	; 0x8030fd <__iob+0x3>
#endif

	return 0;
}
    1536:	80 e0       	ldi	r24, 0x00	; 0
    1538:	08 95       	ret

0000153a <memcpy>:
    153a:	fb 01       	movw	r30, r22
    153c:	dc 01       	movw	r26, r24
    153e:	02 c0       	rjmp	.+4      	; 0x1544 <memcpy+0xa>
    1540:	01 90       	ld	r0, Z+
    1542:	0d 92       	st	X+, r0
    1544:	41 50       	subi	r20, 0x01	; 1
    1546:	50 40       	sbci	r21, 0x00	; 0
    1548:	d8 f7       	brcc	.-10     	; 0x1540 <memcpy+0x6>
    154a:	08 95       	ret

0000154c <printf>:
    154c:	a0 e0       	ldi	r26, 0x00	; 0
    154e:	b0 e0       	ldi	r27, 0x00	; 0
    1550:	ec ea       	ldi	r30, 0xAC	; 172
    1552:	fa e0       	ldi	r31, 0x0A	; 10
    1554:	0c 94 5d 0d 	jmp	0x1aba	; 0x1aba <__prologue_saves__+0x20>
    1558:	ae 01       	movw	r20, r28
    155a:	4b 5f       	subi	r20, 0xFB	; 251
    155c:	5f 4f       	sbci	r21, 0xFF	; 255
    155e:	fa 01       	movw	r30, r20
    1560:	61 91       	ld	r22, Z+
    1562:	71 91       	ld	r23, Z+
    1564:	af 01       	movw	r20, r30
    1566:	80 91 fc 30 	lds	r24, 0x30FC	; 0x8030fc <__iob+0x2>
    156a:	90 91 fd 30 	lds	r25, 0x30FD	; 0x8030fd <__iob+0x3>
    156e:	0e 94 bc 0a 	call	0x1578	; 0x1578 <vfprintf>
    1572:	e2 e0       	ldi	r30, 0x02	; 2
    1574:	0c 94 76 0d 	jmp	0x1aec	; 0x1aec <__epilogue_restores__+0x20>

00001578 <vfprintf>:
    1578:	ab e0       	ldi	r26, 0x0B	; 11
    157a:	b0 e0       	ldi	r27, 0x00	; 0
    157c:	e2 ec       	ldi	r30, 0xC2	; 194
    157e:	fa e0       	ldi	r31, 0x0A	; 10
    1580:	0c 94 4d 0d 	jmp	0x1a9a	; 0x1a9a <__prologue_saves__>
    1584:	6c 01       	movw	r12, r24
    1586:	7b 01       	movw	r14, r22
    1588:	8a 01       	movw	r16, r20
    158a:	fc 01       	movw	r30, r24
    158c:	16 82       	std	Z+6, r1	; 0x06
    158e:	17 82       	std	Z+7, r1	; 0x07
    1590:	83 81       	ldd	r24, Z+3	; 0x03
    1592:	81 ff       	sbrs	r24, 1
    1594:	cc c1       	rjmp	.+920    	; 0x192e <vfprintf+0x3b6>
    1596:	ce 01       	movw	r24, r28
    1598:	01 96       	adiw	r24, 0x01	; 1
    159a:	3c 01       	movw	r6, r24
    159c:	f6 01       	movw	r30, r12
    159e:	93 81       	ldd	r25, Z+3	; 0x03
    15a0:	f7 01       	movw	r30, r14
    15a2:	93 fd       	sbrc	r25, 3
    15a4:	85 91       	lpm	r24, Z+
    15a6:	93 ff       	sbrs	r25, 3
    15a8:	81 91       	ld	r24, Z+
    15aa:	7f 01       	movw	r14, r30
    15ac:	88 23       	and	r24, r24
    15ae:	09 f4       	brne	.+2      	; 0x15b2 <vfprintf+0x3a>
    15b0:	ba c1       	rjmp	.+884    	; 0x1926 <vfprintf+0x3ae>
    15b2:	85 32       	cpi	r24, 0x25	; 37
    15b4:	39 f4       	brne	.+14     	; 0x15c4 <vfprintf+0x4c>
    15b6:	93 fd       	sbrc	r25, 3
    15b8:	85 91       	lpm	r24, Z+
    15ba:	93 ff       	sbrs	r25, 3
    15bc:	81 91       	ld	r24, Z+
    15be:	7f 01       	movw	r14, r30
    15c0:	85 32       	cpi	r24, 0x25	; 37
    15c2:	29 f4       	brne	.+10     	; 0x15ce <vfprintf+0x56>
    15c4:	b6 01       	movw	r22, r12
    15c6:	90 e0       	ldi	r25, 0x00	; 0
    15c8:	0e 94 b3 0c 	call	0x1966	; 0x1966 <fputc>
    15cc:	e7 cf       	rjmp	.-50     	; 0x159c <vfprintf+0x24>
    15ce:	91 2c       	mov	r9, r1
    15d0:	21 2c       	mov	r2, r1
    15d2:	31 2c       	mov	r3, r1
    15d4:	ff e1       	ldi	r31, 0x1F	; 31
    15d6:	f3 15       	cp	r31, r3
    15d8:	d8 f0       	brcs	.+54     	; 0x1610 <vfprintf+0x98>
    15da:	8b 32       	cpi	r24, 0x2B	; 43
    15dc:	79 f0       	breq	.+30     	; 0x15fc <vfprintf+0x84>
    15de:	38 f4       	brcc	.+14     	; 0x15ee <vfprintf+0x76>
    15e0:	80 32       	cpi	r24, 0x20	; 32
    15e2:	79 f0       	breq	.+30     	; 0x1602 <vfprintf+0x8a>
    15e4:	83 32       	cpi	r24, 0x23	; 35
    15e6:	a1 f4       	brne	.+40     	; 0x1610 <vfprintf+0x98>
    15e8:	23 2d       	mov	r18, r3
    15ea:	20 61       	ori	r18, 0x10	; 16
    15ec:	1d c0       	rjmp	.+58     	; 0x1628 <vfprintf+0xb0>
    15ee:	8d 32       	cpi	r24, 0x2D	; 45
    15f0:	61 f0       	breq	.+24     	; 0x160a <vfprintf+0x92>
    15f2:	80 33       	cpi	r24, 0x30	; 48
    15f4:	69 f4       	brne	.+26     	; 0x1610 <vfprintf+0x98>
    15f6:	23 2d       	mov	r18, r3
    15f8:	21 60       	ori	r18, 0x01	; 1
    15fa:	16 c0       	rjmp	.+44     	; 0x1628 <vfprintf+0xb0>
    15fc:	83 2d       	mov	r24, r3
    15fe:	82 60       	ori	r24, 0x02	; 2
    1600:	38 2e       	mov	r3, r24
    1602:	e3 2d       	mov	r30, r3
    1604:	e4 60       	ori	r30, 0x04	; 4
    1606:	3e 2e       	mov	r3, r30
    1608:	2a c0       	rjmp	.+84     	; 0x165e <vfprintf+0xe6>
    160a:	f3 2d       	mov	r31, r3
    160c:	f8 60       	ori	r31, 0x08	; 8
    160e:	1d c0       	rjmp	.+58     	; 0x164a <vfprintf+0xd2>
    1610:	37 fc       	sbrc	r3, 7
    1612:	2d c0       	rjmp	.+90     	; 0x166e <vfprintf+0xf6>
    1614:	20 ed       	ldi	r18, 0xD0	; 208
    1616:	28 0f       	add	r18, r24
    1618:	2a 30       	cpi	r18, 0x0A	; 10
    161a:	40 f0       	brcs	.+16     	; 0x162c <vfprintf+0xb4>
    161c:	8e 32       	cpi	r24, 0x2E	; 46
    161e:	b9 f4       	brne	.+46     	; 0x164e <vfprintf+0xd6>
    1620:	36 fc       	sbrc	r3, 6
    1622:	81 c1       	rjmp	.+770    	; 0x1926 <vfprintf+0x3ae>
    1624:	23 2d       	mov	r18, r3
    1626:	20 64       	ori	r18, 0x40	; 64
    1628:	32 2e       	mov	r3, r18
    162a:	19 c0       	rjmp	.+50     	; 0x165e <vfprintf+0xe6>
    162c:	36 fe       	sbrs	r3, 6
    162e:	06 c0       	rjmp	.+12     	; 0x163c <vfprintf+0xc4>
    1630:	8a e0       	ldi	r24, 0x0A	; 10
    1632:	98 9e       	mul	r9, r24
    1634:	20 0d       	add	r18, r0
    1636:	11 24       	eor	r1, r1
    1638:	92 2e       	mov	r9, r18
    163a:	11 c0       	rjmp	.+34     	; 0x165e <vfprintf+0xe6>
    163c:	ea e0       	ldi	r30, 0x0A	; 10
    163e:	2e 9e       	mul	r2, r30
    1640:	20 0d       	add	r18, r0
    1642:	11 24       	eor	r1, r1
    1644:	22 2e       	mov	r2, r18
    1646:	f3 2d       	mov	r31, r3
    1648:	f0 62       	ori	r31, 0x20	; 32
    164a:	3f 2e       	mov	r3, r31
    164c:	08 c0       	rjmp	.+16     	; 0x165e <vfprintf+0xe6>
    164e:	8c 36       	cpi	r24, 0x6C	; 108
    1650:	21 f4       	brne	.+8      	; 0x165a <vfprintf+0xe2>
    1652:	83 2d       	mov	r24, r3
    1654:	80 68       	ori	r24, 0x80	; 128
    1656:	38 2e       	mov	r3, r24
    1658:	02 c0       	rjmp	.+4      	; 0x165e <vfprintf+0xe6>
    165a:	88 36       	cpi	r24, 0x68	; 104
    165c:	41 f4       	brne	.+16     	; 0x166e <vfprintf+0xf6>
    165e:	f7 01       	movw	r30, r14
    1660:	93 fd       	sbrc	r25, 3
    1662:	85 91       	lpm	r24, Z+
    1664:	93 ff       	sbrs	r25, 3
    1666:	81 91       	ld	r24, Z+
    1668:	7f 01       	movw	r14, r30
    166a:	81 11       	cpse	r24, r1
    166c:	b3 cf       	rjmp	.-154    	; 0x15d4 <vfprintf+0x5c>
    166e:	98 2f       	mov	r25, r24
    1670:	9f 7d       	andi	r25, 0xDF	; 223
    1672:	95 54       	subi	r25, 0x45	; 69
    1674:	93 30       	cpi	r25, 0x03	; 3
    1676:	28 f4       	brcc	.+10     	; 0x1682 <vfprintf+0x10a>
    1678:	0c 5f       	subi	r16, 0xFC	; 252
    167a:	1f 4f       	sbci	r17, 0xFF	; 255
    167c:	9f e3       	ldi	r25, 0x3F	; 63
    167e:	99 83       	std	Y+1, r25	; 0x01
    1680:	0d c0       	rjmp	.+26     	; 0x169c <vfprintf+0x124>
    1682:	83 36       	cpi	r24, 0x63	; 99
    1684:	31 f0       	breq	.+12     	; 0x1692 <vfprintf+0x11a>
    1686:	83 37       	cpi	r24, 0x73	; 115
    1688:	71 f0       	breq	.+28     	; 0x16a6 <vfprintf+0x12e>
    168a:	83 35       	cpi	r24, 0x53	; 83
    168c:	09 f0       	breq	.+2      	; 0x1690 <vfprintf+0x118>
    168e:	59 c0       	rjmp	.+178    	; 0x1742 <vfprintf+0x1ca>
    1690:	21 c0       	rjmp	.+66     	; 0x16d4 <vfprintf+0x15c>
    1692:	f8 01       	movw	r30, r16
    1694:	80 81       	ld	r24, Z
    1696:	89 83       	std	Y+1, r24	; 0x01
    1698:	0e 5f       	subi	r16, 0xFE	; 254
    169a:	1f 4f       	sbci	r17, 0xFF	; 255
    169c:	88 24       	eor	r8, r8
    169e:	83 94       	inc	r8
    16a0:	91 2c       	mov	r9, r1
    16a2:	53 01       	movw	r10, r6
    16a4:	13 c0       	rjmp	.+38     	; 0x16cc <vfprintf+0x154>
    16a6:	28 01       	movw	r4, r16
    16a8:	f2 e0       	ldi	r31, 0x02	; 2
    16aa:	4f 0e       	add	r4, r31
    16ac:	51 1c       	adc	r5, r1
    16ae:	f8 01       	movw	r30, r16
    16b0:	a0 80       	ld	r10, Z
    16b2:	b1 80       	ldd	r11, Z+1	; 0x01
    16b4:	36 fe       	sbrs	r3, 6
    16b6:	03 c0       	rjmp	.+6      	; 0x16be <vfprintf+0x146>
    16b8:	69 2d       	mov	r22, r9
    16ba:	70 e0       	ldi	r23, 0x00	; 0
    16bc:	02 c0       	rjmp	.+4      	; 0x16c2 <vfprintf+0x14a>
    16be:	6f ef       	ldi	r22, 0xFF	; 255
    16c0:	7f ef       	ldi	r23, 0xFF	; 255
    16c2:	c5 01       	movw	r24, r10
    16c4:	0e 94 a8 0c 	call	0x1950	; 0x1950 <strnlen>
    16c8:	4c 01       	movw	r8, r24
    16ca:	82 01       	movw	r16, r4
    16cc:	f3 2d       	mov	r31, r3
    16ce:	ff 77       	andi	r31, 0x7F	; 127
    16d0:	3f 2e       	mov	r3, r31
    16d2:	16 c0       	rjmp	.+44     	; 0x1700 <vfprintf+0x188>
    16d4:	28 01       	movw	r4, r16
    16d6:	22 e0       	ldi	r18, 0x02	; 2
    16d8:	42 0e       	add	r4, r18
    16da:	51 1c       	adc	r5, r1
    16dc:	f8 01       	movw	r30, r16
    16de:	a0 80       	ld	r10, Z
    16e0:	b1 80       	ldd	r11, Z+1	; 0x01
    16e2:	36 fe       	sbrs	r3, 6
    16e4:	03 c0       	rjmp	.+6      	; 0x16ec <vfprintf+0x174>
    16e6:	69 2d       	mov	r22, r9
    16e8:	70 e0       	ldi	r23, 0x00	; 0
    16ea:	02 c0       	rjmp	.+4      	; 0x16f0 <vfprintf+0x178>
    16ec:	6f ef       	ldi	r22, 0xFF	; 255
    16ee:	7f ef       	ldi	r23, 0xFF	; 255
    16f0:	c5 01       	movw	r24, r10
    16f2:	0e 94 9d 0c 	call	0x193a	; 0x193a <strnlen_P>
    16f6:	4c 01       	movw	r8, r24
    16f8:	f3 2d       	mov	r31, r3
    16fa:	f0 68       	ori	r31, 0x80	; 128
    16fc:	3f 2e       	mov	r3, r31
    16fe:	82 01       	movw	r16, r4
    1700:	33 fc       	sbrc	r3, 3
    1702:	1b c0       	rjmp	.+54     	; 0x173a <vfprintf+0x1c2>
    1704:	82 2d       	mov	r24, r2
    1706:	90 e0       	ldi	r25, 0x00	; 0
    1708:	88 16       	cp	r8, r24
    170a:	99 06       	cpc	r9, r25
    170c:	b0 f4       	brcc	.+44     	; 0x173a <vfprintf+0x1c2>
    170e:	b6 01       	movw	r22, r12
    1710:	80 e2       	ldi	r24, 0x20	; 32
    1712:	90 e0       	ldi	r25, 0x00	; 0
    1714:	0e 94 b3 0c 	call	0x1966	; 0x1966 <fputc>
    1718:	2a 94       	dec	r2
    171a:	f4 cf       	rjmp	.-24     	; 0x1704 <vfprintf+0x18c>
    171c:	f5 01       	movw	r30, r10
    171e:	37 fc       	sbrc	r3, 7
    1720:	85 91       	lpm	r24, Z+
    1722:	37 fe       	sbrs	r3, 7
    1724:	81 91       	ld	r24, Z+
    1726:	5f 01       	movw	r10, r30
    1728:	b6 01       	movw	r22, r12
    172a:	90 e0       	ldi	r25, 0x00	; 0
    172c:	0e 94 b3 0c 	call	0x1966	; 0x1966 <fputc>
    1730:	21 10       	cpse	r2, r1
    1732:	2a 94       	dec	r2
    1734:	21 e0       	ldi	r18, 0x01	; 1
    1736:	82 1a       	sub	r8, r18
    1738:	91 08       	sbc	r9, r1
    173a:	81 14       	cp	r8, r1
    173c:	91 04       	cpc	r9, r1
    173e:	71 f7       	brne	.-36     	; 0x171c <vfprintf+0x1a4>
    1740:	e8 c0       	rjmp	.+464    	; 0x1912 <vfprintf+0x39a>
    1742:	84 36       	cpi	r24, 0x64	; 100
    1744:	11 f0       	breq	.+4      	; 0x174a <vfprintf+0x1d2>
    1746:	89 36       	cpi	r24, 0x69	; 105
    1748:	41 f5       	brne	.+80     	; 0x179a <vfprintf+0x222>
    174a:	f8 01       	movw	r30, r16
    174c:	37 fe       	sbrs	r3, 7
    174e:	07 c0       	rjmp	.+14     	; 0x175e <vfprintf+0x1e6>
    1750:	60 81       	ld	r22, Z
    1752:	71 81       	ldd	r23, Z+1	; 0x01
    1754:	82 81       	ldd	r24, Z+2	; 0x02
    1756:	93 81       	ldd	r25, Z+3	; 0x03
    1758:	0c 5f       	subi	r16, 0xFC	; 252
    175a:	1f 4f       	sbci	r17, 0xFF	; 255
    175c:	08 c0       	rjmp	.+16     	; 0x176e <vfprintf+0x1f6>
    175e:	60 81       	ld	r22, Z
    1760:	71 81       	ldd	r23, Z+1	; 0x01
    1762:	07 2e       	mov	r0, r23
    1764:	00 0c       	add	r0, r0
    1766:	88 0b       	sbc	r24, r24
    1768:	99 0b       	sbc	r25, r25
    176a:	0e 5f       	subi	r16, 0xFE	; 254
    176c:	1f 4f       	sbci	r17, 0xFF	; 255
    176e:	f3 2d       	mov	r31, r3
    1770:	ff 76       	andi	r31, 0x6F	; 111
    1772:	3f 2e       	mov	r3, r31
    1774:	97 ff       	sbrs	r25, 7
    1776:	09 c0       	rjmp	.+18     	; 0x178a <vfprintf+0x212>
    1778:	90 95       	com	r25
    177a:	80 95       	com	r24
    177c:	70 95       	com	r23
    177e:	61 95       	neg	r22
    1780:	7f 4f       	sbci	r23, 0xFF	; 255
    1782:	8f 4f       	sbci	r24, 0xFF	; 255
    1784:	9f 4f       	sbci	r25, 0xFF	; 255
    1786:	f0 68       	ori	r31, 0x80	; 128
    1788:	3f 2e       	mov	r3, r31
    178a:	2a e0       	ldi	r18, 0x0A	; 10
    178c:	30 e0       	ldi	r19, 0x00	; 0
    178e:	a3 01       	movw	r20, r6
    1790:	0e 94 ef 0c 	call	0x19de	; 0x19de <__ultoa_invert>
    1794:	88 2e       	mov	r8, r24
    1796:	86 18       	sub	r8, r6
    1798:	45 c0       	rjmp	.+138    	; 0x1824 <vfprintf+0x2ac>
    179a:	85 37       	cpi	r24, 0x75	; 117
    179c:	31 f4       	brne	.+12     	; 0x17aa <vfprintf+0x232>
    179e:	23 2d       	mov	r18, r3
    17a0:	2f 7e       	andi	r18, 0xEF	; 239
    17a2:	b2 2e       	mov	r11, r18
    17a4:	2a e0       	ldi	r18, 0x0A	; 10
    17a6:	30 e0       	ldi	r19, 0x00	; 0
    17a8:	25 c0       	rjmp	.+74     	; 0x17f4 <vfprintf+0x27c>
    17aa:	93 2d       	mov	r25, r3
    17ac:	99 7f       	andi	r25, 0xF9	; 249
    17ae:	b9 2e       	mov	r11, r25
    17b0:	8f 36       	cpi	r24, 0x6F	; 111
    17b2:	c1 f0       	breq	.+48     	; 0x17e4 <vfprintf+0x26c>
    17b4:	18 f4       	brcc	.+6      	; 0x17bc <vfprintf+0x244>
    17b6:	88 35       	cpi	r24, 0x58	; 88
    17b8:	79 f0       	breq	.+30     	; 0x17d8 <vfprintf+0x260>
    17ba:	b5 c0       	rjmp	.+362    	; 0x1926 <vfprintf+0x3ae>
    17bc:	80 37       	cpi	r24, 0x70	; 112
    17be:	19 f0       	breq	.+6      	; 0x17c6 <vfprintf+0x24e>
    17c0:	88 37       	cpi	r24, 0x78	; 120
    17c2:	21 f0       	breq	.+8      	; 0x17cc <vfprintf+0x254>
    17c4:	b0 c0       	rjmp	.+352    	; 0x1926 <vfprintf+0x3ae>
    17c6:	e9 2f       	mov	r30, r25
    17c8:	e0 61       	ori	r30, 0x10	; 16
    17ca:	be 2e       	mov	r11, r30
    17cc:	b4 fe       	sbrs	r11, 4
    17ce:	0d c0       	rjmp	.+26     	; 0x17ea <vfprintf+0x272>
    17d0:	fb 2d       	mov	r31, r11
    17d2:	f4 60       	ori	r31, 0x04	; 4
    17d4:	bf 2e       	mov	r11, r31
    17d6:	09 c0       	rjmp	.+18     	; 0x17ea <vfprintf+0x272>
    17d8:	34 fe       	sbrs	r3, 4
    17da:	0a c0       	rjmp	.+20     	; 0x17f0 <vfprintf+0x278>
    17dc:	29 2f       	mov	r18, r25
    17de:	26 60       	ori	r18, 0x06	; 6
    17e0:	b2 2e       	mov	r11, r18
    17e2:	06 c0       	rjmp	.+12     	; 0x17f0 <vfprintf+0x278>
    17e4:	28 e0       	ldi	r18, 0x08	; 8
    17e6:	30 e0       	ldi	r19, 0x00	; 0
    17e8:	05 c0       	rjmp	.+10     	; 0x17f4 <vfprintf+0x27c>
    17ea:	20 e1       	ldi	r18, 0x10	; 16
    17ec:	30 e0       	ldi	r19, 0x00	; 0
    17ee:	02 c0       	rjmp	.+4      	; 0x17f4 <vfprintf+0x27c>
    17f0:	20 e1       	ldi	r18, 0x10	; 16
    17f2:	32 e0       	ldi	r19, 0x02	; 2
    17f4:	f8 01       	movw	r30, r16
    17f6:	b7 fe       	sbrs	r11, 7
    17f8:	07 c0       	rjmp	.+14     	; 0x1808 <vfprintf+0x290>
    17fa:	60 81       	ld	r22, Z
    17fc:	71 81       	ldd	r23, Z+1	; 0x01
    17fe:	82 81       	ldd	r24, Z+2	; 0x02
    1800:	93 81       	ldd	r25, Z+3	; 0x03
    1802:	0c 5f       	subi	r16, 0xFC	; 252
    1804:	1f 4f       	sbci	r17, 0xFF	; 255
    1806:	06 c0       	rjmp	.+12     	; 0x1814 <vfprintf+0x29c>
    1808:	60 81       	ld	r22, Z
    180a:	71 81       	ldd	r23, Z+1	; 0x01
    180c:	80 e0       	ldi	r24, 0x00	; 0
    180e:	90 e0       	ldi	r25, 0x00	; 0
    1810:	0e 5f       	subi	r16, 0xFE	; 254
    1812:	1f 4f       	sbci	r17, 0xFF	; 255
    1814:	a3 01       	movw	r20, r6
    1816:	0e 94 ef 0c 	call	0x19de	; 0x19de <__ultoa_invert>
    181a:	88 2e       	mov	r8, r24
    181c:	86 18       	sub	r8, r6
    181e:	fb 2d       	mov	r31, r11
    1820:	ff 77       	andi	r31, 0x7F	; 127
    1822:	3f 2e       	mov	r3, r31
    1824:	36 fe       	sbrs	r3, 6
    1826:	0d c0       	rjmp	.+26     	; 0x1842 <vfprintf+0x2ca>
    1828:	23 2d       	mov	r18, r3
    182a:	2e 7f       	andi	r18, 0xFE	; 254
    182c:	a2 2e       	mov	r10, r18
    182e:	89 14       	cp	r8, r9
    1830:	58 f4       	brcc	.+22     	; 0x1848 <vfprintf+0x2d0>
    1832:	34 fe       	sbrs	r3, 4
    1834:	0b c0       	rjmp	.+22     	; 0x184c <vfprintf+0x2d4>
    1836:	32 fc       	sbrc	r3, 2
    1838:	09 c0       	rjmp	.+18     	; 0x184c <vfprintf+0x2d4>
    183a:	83 2d       	mov	r24, r3
    183c:	8e 7e       	andi	r24, 0xEE	; 238
    183e:	a8 2e       	mov	r10, r24
    1840:	05 c0       	rjmp	.+10     	; 0x184c <vfprintf+0x2d4>
    1842:	b8 2c       	mov	r11, r8
    1844:	a3 2c       	mov	r10, r3
    1846:	03 c0       	rjmp	.+6      	; 0x184e <vfprintf+0x2d6>
    1848:	b8 2c       	mov	r11, r8
    184a:	01 c0       	rjmp	.+2      	; 0x184e <vfprintf+0x2d6>
    184c:	b9 2c       	mov	r11, r9
    184e:	a4 fe       	sbrs	r10, 4
    1850:	0f c0       	rjmp	.+30     	; 0x1870 <vfprintf+0x2f8>
    1852:	fe 01       	movw	r30, r28
    1854:	e8 0d       	add	r30, r8
    1856:	f1 1d       	adc	r31, r1
    1858:	80 81       	ld	r24, Z
    185a:	80 33       	cpi	r24, 0x30	; 48
    185c:	21 f4       	brne	.+8      	; 0x1866 <vfprintf+0x2ee>
    185e:	9a 2d       	mov	r25, r10
    1860:	99 7e       	andi	r25, 0xE9	; 233
    1862:	a9 2e       	mov	r10, r25
    1864:	09 c0       	rjmp	.+18     	; 0x1878 <vfprintf+0x300>
    1866:	a2 fe       	sbrs	r10, 2
    1868:	06 c0       	rjmp	.+12     	; 0x1876 <vfprintf+0x2fe>
    186a:	b3 94       	inc	r11
    186c:	b3 94       	inc	r11
    186e:	04 c0       	rjmp	.+8      	; 0x1878 <vfprintf+0x300>
    1870:	8a 2d       	mov	r24, r10
    1872:	86 78       	andi	r24, 0x86	; 134
    1874:	09 f0       	breq	.+2      	; 0x1878 <vfprintf+0x300>
    1876:	b3 94       	inc	r11
    1878:	a3 fc       	sbrc	r10, 3
    187a:	11 c0       	rjmp	.+34     	; 0x189e <vfprintf+0x326>
    187c:	a0 fe       	sbrs	r10, 0
    187e:	06 c0       	rjmp	.+12     	; 0x188c <vfprintf+0x314>
    1880:	b2 14       	cp	r11, r2
    1882:	88 f4       	brcc	.+34     	; 0x18a6 <vfprintf+0x32e>
    1884:	28 0c       	add	r2, r8
    1886:	92 2c       	mov	r9, r2
    1888:	9b 18       	sub	r9, r11
    188a:	0e c0       	rjmp	.+28     	; 0x18a8 <vfprintf+0x330>
    188c:	b2 14       	cp	r11, r2
    188e:	60 f4       	brcc	.+24     	; 0x18a8 <vfprintf+0x330>
    1890:	b6 01       	movw	r22, r12
    1892:	80 e2       	ldi	r24, 0x20	; 32
    1894:	90 e0       	ldi	r25, 0x00	; 0
    1896:	0e 94 b3 0c 	call	0x1966	; 0x1966 <fputc>
    189a:	b3 94       	inc	r11
    189c:	f7 cf       	rjmp	.-18     	; 0x188c <vfprintf+0x314>
    189e:	b2 14       	cp	r11, r2
    18a0:	18 f4       	brcc	.+6      	; 0x18a8 <vfprintf+0x330>
    18a2:	2b 18       	sub	r2, r11
    18a4:	02 c0       	rjmp	.+4      	; 0x18aa <vfprintf+0x332>
    18a6:	98 2c       	mov	r9, r8
    18a8:	21 2c       	mov	r2, r1
    18aa:	a4 fe       	sbrs	r10, 4
    18ac:	10 c0       	rjmp	.+32     	; 0x18ce <vfprintf+0x356>
    18ae:	b6 01       	movw	r22, r12
    18b0:	80 e3       	ldi	r24, 0x30	; 48
    18b2:	90 e0       	ldi	r25, 0x00	; 0
    18b4:	0e 94 b3 0c 	call	0x1966	; 0x1966 <fputc>
    18b8:	a2 fe       	sbrs	r10, 2
    18ba:	17 c0       	rjmp	.+46     	; 0x18ea <vfprintf+0x372>
    18bc:	a1 fc       	sbrc	r10, 1
    18be:	03 c0       	rjmp	.+6      	; 0x18c6 <vfprintf+0x34e>
    18c0:	88 e7       	ldi	r24, 0x78	; 120
    18c2:	90 e0       	ldi	r25, 0x00	; 0
    18c4:	02 c0       	rjmp	.+4      	; 0x18ca <vfprintf+0x352>
    18c6:	88 e5       	ldi	r24, 0x58	; 88
    18c8:	90 e0       	ldi	r25, 0x00	; 0
    18ca:	b6 01       	movw	r22, r12
    18cc:	0c c0       	rjmp	.+24     	; 0x18e6 <vfprintf+0x36e>
    18ce:	8a 2d       	mov	r24, r10
    18d0:	86 78       	andi	r24, 0x86	; 134
    18d2:	59 f0       	breq	.+22     	; 0x18ea <vfprintf+0x372>
    18d4:	a1 fe       	sbrs	r10, 1
    18d6:	02 c0       	rjmp	.+4      	; 0x18dc <vfprintf+0x364>
    18d8:	8b e2       	ldi	r24, 0x2B	; 43
    18da:	01 c0       	rjmp	.+2      	; 0x18de <vfprintf+0x366>
    18dc:	80 e2       	ldi	r24, 0x20	; 32
    18de:	a7 fc       	sbrc	r10, 7
    18e0:	8d e2       	ldi	r24, 0x2D	; 45
    18e2:	b6 01       	movw	r22, r12
    18e4:	90 e0       	ldi	r25, 0x00	; 0
    18e6:	0e 94 b3 0c 	call	0x1966	; 0x1966 <fputc>
    18ea:	89 14       	cp	r8, r9
    18ec:	38 f4       	brcc	.+14     	; 0x18fc <vfprintf+0x384>
    18ee:	b6 01       	movw	r22, r12
    18f0:	80 e3       	ldi	r24, 0x30	; 48
    18f2:	90 e0       	ldi	r25, 0x00	; 0
    18f4:	0e 94 b3 0c 	call	0x1966	; 0x1966 <fputc>
    18f8:	9a 94       	dec	r9
    18fa:	f7 cf       	rjmp	.-18     	; 0x18ea <vfprintf+0x372>
    18fc:	8a 94       	dec	r8
    18fe:	f3 01       	movw	r30, r6
    1900:	e8 0d       	add	r30, r8
    1902:	f1 1d       	adc	r31, r1
    1904:	80 81       	ld	r24, Z
    1906:	b6 01       	movw	r22, r12
    1908:	90 e0       	ldi	r25, 0x00	; 0
    190a:	0e 94 b3 0c 	call	0x1966	; 0x1966 <fputc>
    190e:	81 10       	cpse	r8, r1
    1910:	f5 cf       	rjmp	.-22     	; 0x18fc <vfprintf+0x384>
    1912:	22 20       	and	r2, r2
    1914:	09 f4       	brne	.+2      	; 0x1918 <vfprintf+0x3a0>
    1916:	42 ce       	rjmp	.-892    	; 0x159c <vfprintf+0x24>
    1918:	b6 01       	movw	r22, r12
    191a:	80 e2       	ldi	r24, 0x20	; 32
    191c:	90 e0       	ldi	r25, 0x00	; 0
    191e:	0e 94 b3 0c 	call	0x1966	; 0x1966 <fputc>
    1922:	2a 94       	dec	r2
    1924:	f6 cf       	rjmp	.-20     	; 0x1912 <vfprintf+0x39a>
    1926:	f6 01       	movw	r30, r12
    1928:	86 81       	ldd	r24, Z+6	; 0x06
    192a:	97 81       	ldd	r25, Z+7	; 0x07
    192c:	02 c0       	rjmp	.+4      	; 0x1932 <vfprintf+0x3ba>
    192e:	8f ef       	ldi	r24, 0xFF	; 255
    1930:	9f ef       	ldi	r25, 0xFF	; 255
    1932:	2b 96       	adiw	r28, 0x0b	; 11
    1934:	e2 e1       	ldi	r30, 0x12	; 18
    1936:	0c 94 66 0d 	jmp	0x1acc	; 0x1acc <__epilogue_restores__>

0000193a <strnlen_P>:
    193a:	fc 01       	movw	r30, r24
    193c:	05 90       	lpm	r0, Z+
    193e:	61 50       	subi	r22, 0x01	; 1
    1940:	70 40       	sbci	r23, 0x00	; 0
    1942:	01 10       	cpse	r0, r1
    1944:	d8 f7       	brcc	.-10     	; 0x193c <strnlen_P+0x2>
    1946:	80 95       	com	r24
    1948:	90 95       	com	r25
    194a:	8e 0f       	add	r24, r30
    194c:	9f 1f       	adc	r25, r31
    194e:	08 95       	ret

00001950 <strnlen>:
    1950:	fc 01       	movw	r30, r24
    1952:	61 50       	subi	r22, 0x01	; 1
    1954:	70 40       	sbci	r23, 0x00	; 0
    1956:	01 90       	ld	r0, Z+
    1958:	01 10       	cpse	r0, r1
    195a:	d8 f7       	brcc	.-10     	; 0x1952 <strnlen+0x2>
    195c:	80 95       	com	r24
    195e:	90 95       	com	r25
    1960:	8e 0f       	add	r24, r30
    1962:	9f 1f       	adc	r25, r31
    1964:	08 95       	ret

00001966 <fputc>:
    1966:	0f 93       	push	r16
    1968:	1f 93       	push	r17
    196a:	cf 93       	push	r28
    196c:	df 93       	push	r29
    196e:	fb 01       	movw	r30, r22
    1970:	23 81       	ldd	r18, Z+3	; 0x03
    1972:	21 fd       	sbrc	r18, 1
    1974:	03 c0       	rjmp	.+6      	; 0x197c <fputc+0x16>
    1976:	8f ef       	ldi	r24, 0xFF	; 255
    1978:	9f ef       	ldi	r25, 0xFF	; 255
    197a:	2c c0       	rjmp	.+88     	; 0x19d4 <fputc+0x6e>
    197c:	22 ff       	sbrs	r18, 2
    197e:	16 c0       	rjmp	.+44     	; 0x19ac <fputc+0x46>
    1980:	46 81       	ldd	r20, Z+6	; 0x06
    1982:	57 81       	ldd	r21, Z+7	; 0x07
    1984:	24 81       	ldd	r18, Z+4	; 0x04
    1986:	35 81       	ldd	r19, Z+5	; 0x05
    1988:	42 17       	cp	r20, r18
    198a:	53 07       	cpc	r21, r19
    198c:	44 f4       	brge	.+16     	; 0x199e <fputc+0x38>
    198e:	a0 81       	ld	r26, Z
    1990:	b1 81       	ldd	r27, Z+1	; 0x01
    1992:	9d 01       	movw	r18, r26
    1994:	2f 5f       	subi	r18, 0xFF	; 255
    1996:	3f 4f       	sbci	r19, 0xFF	; 255
    1998:	20 83       	st	Z, r18
    199a:	31 83       	std	Z+1, r19	; 0x01
    199c:	8c 93       	st	X, r24
    199e:	26 81       	ldd	r18, Z+6	; 0x06
    19a0:	37 81       	ldd	r19, Z+7	; 0x07
    19a2:	2f 5f       	subi	r18, 0xFF	; 255
    19a4:	3f 4f       	sbci	r19, 0xFF	; 255
    19a6:	26 83       	std	Z+6, r18	; 0x06
    19a8:	37 83       	std	Z+7, r19	; 0x07
    19aa:	14 c0       	rjmp	.+40     	; 0x19d4 <fputc+0x6e>
    19ac:	8b 01       	movw	r16, r22
    19ae:	ec 01       	movw	r28, r24
    19b0:	fb 01       	movw	r30, r22
    19b2:	00 84       	ldd	r0, Z+8	; 0x08
    19b4:	f1 85       	ldd	r31, Z+9	; 0x09
    19b6:	e0 2d       	mov	r30, r0
    19b8:	09 95       	icall
    19ba:	89 2b       	or	r24, r25
    19bc:	e1 f6       	brne	.-72     	; 0x1976 <fputc+0x10>
    19be:	d8 01       	movw	r26, r16
    19c0:	16 96       	adiw	r26, 0x06	; 6
    19c2:	8d 91       	ld	r24, X+
    19c4:	9c 91       	ld	r25, X
    19c6:	17 97       	sbiw	r26, 0x07	; 7
    19c8:	01 96       	adiw	r24, 0x01	; 1
    19ca:	16 96       	adiw	r26, 0x06	; 6
    19cc:	8d 93       	st	X+, r24
    19ce:	9c 93       	st	X, r25
    19d0:	17 97       	sbiw	r26, 0x07	; 7
    19d2:	ce 01       	movw	r24, r28
    19d4:	df 91       	pop	r29
    19d6:	cf 91       	pop	r28
    19d8:	1f 91       	pop	r17
    19da:	0f 91       	pop	r16
    19dc:	08 95       	ret

000019de <__ultoa_invert>:
    19de:	fa 01       	movw	r30, r20
    19e0:	aa 27       	eor	r26, r26
    19e2:	28 30       	cpi	r18, 0x08	; 8
    19e4:	51 f1       	breq	.+84     	; 0x1a3a <__ultoa_invert+0x5c>
    19e6:	20 31       	cpi	r18, 0x10	; 16
    19e8:	81 f1       	breq	.+96     	; 0x1a4a <__ultoa_invert+0x6c>
    19ea:	e8 94       	clt
    19ec:	6f 93       	push	r22
    19ee:	6e 7f       	andi	r22, 0xFE	; 254
    19f0:	6e 5f       	subi	r22, 0xFE	; 254
    19f2:	7f 4f       	sbci	r23, 0xFF	; 255
    19f4:	8f 4f       	sbci	r24, 0xFF	; 255
    19f6:	9f 4f       	sbci	r25, 0xFF	; 255
    19f8:	af 4f       	sbci	r26, 0xFF	; 255
    19fa:	b1 e0       	ldi	r27, 0x01	; 1
    19fc:	3e d0       	rcall	.+124    	; 0x1a7a <__ultoa_invert+0x9c>
    19fe:	b4 e0       	ldi	r27, 0x04	; 4
    1a00:	3c d0       	rcall	.+120    	; 0x1a7a <__ultoa_invert+0x9c>
    1a02:	67 0f       	add	r22, r23
    1a04:	78 1f       	adc	r23, r24
    1a06:	89 1f       	adc	r24, r25
    1a08:	9a 1f       	adc	r25, r26
    1a0a:	a1 1d       	adc	r26, r1
    1a0c:	68 0f       	add	r22, r24
    1a0e:	79 1f       	adc	r23, r25
    1a10:	8a 1f       	adc	r24, r26
    1a12:	91 1d       	adc	r25, r1
    1a14:	a1 1d       	adc	r26, r1
    1a16:	6a 0f       	add	r22, r26
    1a18:	71 1d       	adc	r23, r1
    1a1a:	81 1d       	adc	r24, r1
    1a1c:	91 1d       	adc	r25, r1
    1a1e:	a1 1d       	adc	r26, r1
    1a20:	20 d0       	rcall	.+64     	; 0x1a62 <__ultoa_invert+0x84>
    1a22:	09 f4       	brne	.+2      	; 0x1a26 <__ultoa_invert+0x48>
    1a24:	68 94       	set
    1a26:	3f 91       	pop	r19
    1a28:	2a e0       	ldi	r18, 0x0A	; 10
    1a2a:	26 9f       	mul	r18, r22
    1a2c:	11 24       	eor	r1, r1
    1a2e:	30 19       	sub	r19, r0
    1a30:	30 5d       	subi	r19, 0xD0	; 208
    1a32:	31 93       	st	Z+, r19
    1a34:	de f6       	brtc	.-74     	; 0x19ec <__ultoa_invert+0xe>
    1a36:	cf 01       	movw	r24, r30
    1a38:	08 95       	ret
    1a3a:	46 2f       	mov	r20, r22
    1a3c:	47 70       	andi	r20, 0x07	; 7
    1a3e:	40 5d       	subi	r20, 0xD0	; 208
    1a40:	41 93       	st	Z+, r20
    1a42:	b3 e0       	ldi	r27, 0x03	; 3
    1a44:	0f d0       	rcall	.+30     	; 0x1a64 <__ultoa_invert+0x86>
    1a46:	c9 f7       	brne	.-14     	; 0x1a3a <__ultoa_invert+0x5c>
    1a48:	f6 cf       	rjmp	.-20     	; 0x1a36 <__ultoa_invert+0x58>
    1a4a:	46 2f       	mov	r20, r22
    1a4c:	4f 70       	andi	r20, 0x0F	; 15
    1a4e:	40 5d       	subi	r20, 0xD0	; 208
    1a50:	4a 33       	cpi	r20, 0x3A	; 58
    1a52:	18 f0       	brcs	.+6      	; 0x1a5a <__ultoa_invert+0x7c>
    1a54:	49 5d       	subi	r20, 0xD9	; 217
    1a56:	31 fd       	sbrc	r19, 1
    1a58:	40 52       	subi	r20, 0x20	; 32
    1a5a:	41 93       	st	Z+, r20
    1a5c:	02 d0       	rcall	.+4      	; 0x1a62 <__ultoa_invert+0x84>
    1a5e:	a9 f7       	brne	.-22     	; 0x1a4a <__ultoa_invert+0x6c>
    1a60:	ea cf       	rjmp	.-44     	; 0x1a36 <__ultoa_invert+0x58>
    1a62:	b4 e0       	ldi	r27, 0x04	; 4
    1a64:	a6 95       	lsr	r26
    1a66:	97 95       	ror	r25
    1a68:	87 95       	ror	r24
    1a6a:	77 95       	ror	r23
    1a6c:	67 95       	ror	r22
    1a6e:	ba 95       	dec	r27
    1a70:	c9 f7       	brne	.-14     	; 0x1a64 <__ultoa_invert+0x86>
    1a72:	00 97       	sbiw	r24, 0x00	; 0
    1a74:	61 05       	cpc	r22, r1
    1a76:	71 05       	cpc	r23, r1
    1a78:	08 95       	ret
    1a7a:	9b 01       	movw	r18, r22
    1a7c:	ac 01       	movw	r20, r24
    1a7e:	0a 2e       	mov	r0, r26
    1a80:	06 94       	lsr	r0
    1a82:	57 95       	ror	r21
    1a84:	47 95       	ror	r20
    1a86:	37 95       	ror	r19
    1a88:	27 95       	ror	r18
    1a8a:	ba 95       	dec	r27
    1a8c:	c9 f7       	brne	.-14     	; 0x1a80 <__ultoa_invert+0xa2>
    1a8e:	62 0f       	add	r22, r18
    1a90:	73 1f       	adc	r23, r19
    1a92:	84 1f       	adc	r24, r20
    1a94:	95 1f       	adc	r25, r21
    1a96:	a0 1d       	adc	r26, r0
    1a98:	08 95       	ret

00001a9a <__prologue_saves__>:
    1a9a:	2f 92       	push	r2
    1a9c:	3f 92       	push	r3
    1a9e:	4f 92       	push	r4
    1aa0:	5f 92       	push	r5
    1aa2:	6f 92       	push	r6
    1aa4:	7f 92       	push	r7
    1aa6:	8f 92       	push	r8
    1aa8:	9f 92       	push	r9
    1aaa:	af 92       	push	r10
    1aac:	bf 92       	push	r11
    1aae:	cf 92       	push	r12
    1ab0:	df 92       	push	r13
    1ab2:	ef 92       	push	r14
    1ab4:	ff 92       	push	r15
    1ab6:	0f 93       	push	r16
    1ab8:	1f 93       	push	r17
    1aba:	cf 93       	push	r28
    1abc:	df 93       	push	r29
    1abe:	cd b7       	in	r28, 0x3d	; 61
    1ac0:	de b7       	in	r29, 0x3e	; 62
    1ac2:	ca 1b       	sub	r28, r26
    1ac4:	db 0b       	sbc	r29, r27
    1ac6:	cd bf       	out	0x3d, r28	; 61
    1ac8:	de bf       	out	0x3e, r29	; 62
    1aca:	09 94       	ijmp

00001acc <__epilogue_restores__>:
    1acc:	2a 88       	ldd	r2, Y+18	; 0x12
    1ace:	39 88       	ldd	r3, Y+17	; 0x11
    1ad0:	48 88       	ldd	r4, Y+16	; 0x10
    1ad2:	5f 84       	ldd	r5, Y+15	; 0x0f
    1ad4:	6e 84       	ldd	r6, Y+14	; 0x0e
    1ad6:	7d 84       	ldd	r7, Y+13	; 0x0d
    1ad8:	8c 84       	ldd	r8, Y+12	; 0x0c
    1ada:	9b 84       	ldd	r9, Y+11	; 0x0b
    1adc:	aa 84       	ldd	r10, Y+10	; 0x0a
    1ade:	b9 84       	ldd	r11, Y+9	; 0x09
    1ae0:	c8 84       	ldd	r12, Y+8	; 0x08
    1ae2:	df 80       	ldd	r13, Y+7	; 0x07
    1ae4:	ee 80       	ldd	r14, Y+6	; 0x06
    1ae6:	fd 80       	ldd	r15, Y+5	; 0x05
    1ae8:	0c 81       	ldd	r16, Y+4	; 0x04
    1aea:	1b 81       	ldd	r17, Y+3	; 0x03
    1aec:	aa 81       	ldd	r26, Y+2	; 0x02
    1aee:	b9 81       	ldd	r27, Y+1	; 0x01
    1af0:	ce 0f       	add	r28, r30
    1af2:	d1 1d       	adc	r29, r1
    1af4:	cd bf       	out	0x3d, r28	; 61
    1af6:	de bf       	out	0x3e, r29	; 62
    1af8:	ed 01       	movw	r28, r26
    1afa:	08 95       	ret

00001afc <_exit>:
    1afc:	f8 94       	cli

00001afe <__stop_program>:
    1afe:	ff cf       	rjmp	.-2      	; 0x1afe <__stop_program>
