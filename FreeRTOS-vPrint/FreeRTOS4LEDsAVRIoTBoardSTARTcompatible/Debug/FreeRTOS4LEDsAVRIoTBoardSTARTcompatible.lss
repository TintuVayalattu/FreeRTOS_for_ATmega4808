
FreeRTOS4LEDsAVRIoTBoardSTARTcompatible.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000064  00802800  00001d07  00001dbb  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00001cae  00000000  00000000  000000b4  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000059  00005cae  00001cae  00001d62  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .bss          00000891  00802864  00802864  00001e1f  2**0
                  ALLOC
  4 .comment      0000008c  00000000  00000000  00001e1f  2**0
                  CONTENTS, READONLY
  5 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00001eac  2**2
                  CONTENTS, READONLY
  6 .debug_aranges 000004e0  00000000  00000000  00001ef0  2**3
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_info   00007d80  00000000  00000000  000023d0  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 00003531  00000000  00000000  0000a150  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_line   0000310d  00000000  00000000  0000d681  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_frame  00000cc0  00000000  00000000  00010790  2**2
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_str    00002cfd  00000000  00000000  00011450  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_loc    000040bd  00000000  00000000  0001414d  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_ranges 00000478  00000000  00000000  0001820a  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 48 00 	jmp	0x90	; 0x90 <__ctors_end>
       4:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
       8:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
       c:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      10:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      14:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      18:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      1c:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      20:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      24:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      28:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      2c:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      30:	0c 94 3a 02 	jmp	0x474	; 0x474 <__vector_12>
      34:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      38:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      3c:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      40:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      44:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      48:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      4c:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      50:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      54:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      58:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      5c:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      60:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      64:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      68:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      6c:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      70:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      74:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      78:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      7c:	0c 94 d7 0a 	jmp	0x15ae	; 0x15ae <__vector_31>
      80:	0c 94 00 0b 	jmp	0x1600	; 0x1600 <__vector_32>
      84:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      88:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      8c:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>

00000090 <__ctors_end>:
      90:	11 24       	eor	r1, r1
      92:	1f be       	out	0x3f, r1	; 63
      94:	cf ef       	ldi	r28, 0xFF	; 255
      96:	cd bf       	out	0x3d, r28	; 61
      98:	df e3       	ldi	r29, 0x3F	; 63
      9a:	de bf       	out	0x3e, r29	; 62

0000009c <__do_copy_data>:
      9c:	18 e2       	ldi	r17, 0x28	; 40
      9e:	a0 e0       	ldi	r26, 0x00	; 0
      a0:	b8 e2       	ldi	r27, 0x28	; 40
      a2:	e7 e0       	ldi	r30, 0x07	; 7
      a4:	fd e1       	ldi	r31, 0x1D	; 29
      a6:	02 c0       	rjmp	.+4      	; 0xac <__do_copy_data+0x10>
      a8:	05 90       	lpm	r0, Z+
      aa:	0d 92       	st	X+, r0
      ac:	a4 36       	cpi	r26, 0x64	; 100
      ae:	b1 07       	cpc	r27, r17
      b0:	d9 f7       	brne	.-10     	; 0xa8 <__do_copy_data+0xc>

000000b2 <__do_clear_bss>:
      b2:	20 e3       	ldi	r18, 0x30	; 48
      b4:	a4 e6       	ldi	r26, 0x64	; 100
      b6:	b8 e2       	ldi	r27, 0x28	; 40
      b8:	01 c0       	rjmp	.+2      	; 0xbc <.do_clear_bss_start>

000000ba <.do_clear_bss_loop>:
      ba:	1d 92       	st	X+, r1

000000bc <.do_clear_bss_start>:
      bc:	a5 3f       	cpi	r26, 0xF5	; 245
      be:	b2 07       	cpc	r27, r18
      c0:	e1 f7       	brne	.-8      	; 0xba <.do_clear_bss_loop>
      c2:	0e 94 a0 09 	call	0x1340	; 0x1340 <main>
      c6:	0c 94 55 0e 	jmp	0x1caa	; 0x1caa <_exit>

000000ca <__bad_interrupt>:
      ca:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000ce <atmel_start_init>:
/**
 * Initializes MCU, drivers and middleware in the project
 **/
void atmel_start_init(void)
{
	system_init();
      ce:	0e 94 8d 0a 	call	0x151a	; 0x151a <system_init>
      d2:	08 95       	ret

000000d4 <vCommandReceiverTask>:

/* Function prototypes */
void vPrintString(void *pvParams);

void vCommandReceiverTask(void *pvParams)
{
      d4:	cf 93       	push	r28
      d6:	df 93       	push	r29
      d8:	00 d0       	rcall	.+0      	; 0xda <vCommandReceiverTask+0x6>
      da:	cd b7       	in	r28, 0x3d	; 61
      dc:	de b7       	in	r29, 0x3e	; 62
	char *ptr=NULL;
      de:	19 82       	std	Y+1, r1	; 0x01
      e0:	1a 82       	std	Y+2, r1	; 0x02
	for (;;)
	{
		if( xQueueReceive(xCommandQueue,(void *)&ptr,100) == pdPASS )
      e2:	44 e6       	ldi	r20, 0x64	; 100
      e4:	50 e0       	ldi	r21, 0x00	; 0
      e6:	be 01       	movw	r22, r28
      e8:	6f 5f       	subi	r22, 0xFF	; 255
      ea:	7f 4f       	sbci	r23, 0xFF	; 255
      ec:	80 91 eb 30 	lds	r24, 0x30EB	; 0x8030eb <xCommandQueue>
      f0:	90 91 ec 30 	lds	r25, 0x30EC	; 0x8030ec <xCommandQueue+0x1>
      f4:	0e 94 89 04 	call	0x912	; 0x912 <xQueueReceive>
      f8:	81 30       	cpi	r24, 0x01	; 1
      fa:	99 f7       	brne	.-26     	; 0xe2 <vCommandReceiverTask+0xe>
		{
			if (!strcmp((char *)ptr,CMD_VERSION))
      fc:	09 81       	ldd	r16, Y+1	; 0x01
      fe:	1a 81       	ldd	r17, Y+2	; 0x02
     100:	64 ed       	ldi	r22, 0xD4	; 212
     102:	7c e5       	ldi	r23, 0x5C	; 92
     104:	c8 01       	movw	r24, r16
     106:	0e 94 74 0b 	call	0x16e8	; 0x16e8 <strcmp>
     10a:	89 2b       	or	r24, r25
     10c:	29 f4       	brne	.+10     	; 0x118 <vCommandReceiverTask+0x44>
			{
				vPrintString((void *)"version = 1.0.0\r\n");
     10e:	8e ea       	ldi	r24, 0xAE	; 174
     110:	9c e5       	ldi	r25, 0x5C	; 92
     112:	0e 94 f0 09 	call	0x13e0	; 0x13e0 <vPrintString>
     116:	e5 cf       	rjmp	.-54     	; 0xe2 <vCommandReceiverTask+0xe>
			}
			else if (!strcmp((char *)ptr,CMD_TIME))
     118:	60 ec       	ldi	r22, 0xC0	; 192
     11a:	7c e5       	ldi	r23, 0x5C	; 92
     11c:	c8 01       	movw	r24, r16
     11e:	0e 94 74 0b 	call	0x16e8	; 0x16e8 <strcmp>
     122:	89 2b       	or	r24, r25
     124:	29 f4       	brne	.+10     	; 0x130 <vCommandReceiverTask+0x5c>
			{
				vPrintString((void *)"18:30:00\r\n");
     126:	85 ec       	ldi	r24, 0xC5	; 197
     128:	9c e5       	ldi	r25, 0x5C	; 92
     12a:	0e 94 f0 09 	call	0x13e0	; 0x13e0 <vPrintString>
     12e:	d9 cf       	rjmp	.-78     	; 0xe2 <vCommandReceiverTask+0xe>
			}
			else if (!strcmp((char *)ptr,CMD_CLI_VERSION))
     130:	60 ed       	ldi	r22, 0xD0	; 208
     132:	7c e5       	ldi	r23, 0x5C	; 92
     134:	c8 01       	movw	r24, r16
     136:	0e 94 74 0b 	call	0x16e8	; 0x16e8 <strcmp>
     13a:	89 2b       	or	r24, r25
     13c:	29 f4       	brne	.+10     	; 0x148 <vCommandReceiverTask+0x74>
			{
				vPrintString((void *)"18:30:00\r\n");
     13e:	85 ec       	ldi	r24, 0xC5	; 197
     140:	9c e5       	ldi	r25, 0x5C	; 92
     142:	0e 94 f0 09 	call	0x13e0	; 0x13e0 <vPrintString>
     146:	cd cf       	rjmp	.-102    	; 0xe2 <vCommandReceiverTask+0xe>
			}		
			else if (!strcmp((char *)ptr,CMD_CPU_USAGE))
     148:	6c ed       	ldi	r22, 0xDC	; 220
     14a:	7c e5       	ldi	r23, 0x5C	; 92
     14c:	c8 01       	movw	r24, r16
     14e:	0e 94 74 0b 	call	0x16e8	; 0x16e8 <strcmp>
     152:	89 2b       	or	r24, r25
     154:	29 f4       	brne	.+10     	; 0x160 <vCommandReceiverTask+0x8c>
			{
				vPrintString((void *)"18:30:00\r\n");
     156:	85 ec       	ldi	r24, 0xC5	; 197
     158:	9c e5       	ldi	r25, 0x5C	; 92
     15a:	0e 94 f0 09 	call	0x13e0	; 0x13e0 <vPrintString>
     15e:	c1 cf       	rjmp	.-126    	; 0xe2 <vCommandReceiverTask+0xe>
			}
			else
			{
				vPrintString((void *)ptr);
     160:	c8 01       	movw	r24, r16
     162:	0e 94 f0 09 	call	0x13e0	; 0x13e0 <vPrintString>
     166:	bd cf       	rjmp	.-134    	; 0xe2 <vCommandReceiverTask+0xe>

00000168 <vListInitialise>:
     168:	fc 01       	movw	r30, r24
     16a:	03 96       	adiw	r24, 0x03	; 3
     16c:	81 83       	std	Z+1, r24	; 0x01
     16e:	92 83       	std	Z+2, r25	; 0x02
     170:	2f ef       	ldi	r18, 0xFF	; 255
     172:	3f ef       	ldi	r19, 0xFF	; 255
     174:	23 83       	std	Z+3, r18	; 0x03
     176:	34 83       	std	Z+4, r19	; 0x04
     178:	85 83       	std	Z+5, r24	; 0x05
     17a:	96 83       	std	Z+6, r25	; 0x06
     17c:	87 83       	std	Z+7, r24	; 0x07
     17e:	90 87       	std	Z+8, r25	; 0x08
     180:	10 82       	st	Z, r1
     182:	08 95       	ret

00000184 <vListInitialiseItem>:
     184:	fc 01       	movw	r30, r24
     186:	10 86       	std	Z+8, r1	; 0x08
     188:	11 86       	std	Z+9, r1	; 0x09
     18a:	08 95       	ret

0000018c <vListInsertEnd>:
     18c:	cf 93       	push	r28
     18e:	df 93       	push	r29
     190:	9c 01       	movw	r18, r24
     192:	fb 01       	movw	r30, r22
     194:	dc 01       	movw	r26, r24
     196:	11 96       	adiw	r26, 0x01	; 1
     198:	cd 91       	ld	r28, X+
     19a:	dc 91       	ld	r29, X
     19c:	12 97       	sbiw	r26, 0x02	; 2
     19e:	c2 83       	std	Z+2, r28	; 0x02
     1a0:	d3 83       	std	Z+3, r29	; 0x03
     1a2:	8c 81       	ldd	r24, Y+4	; 0x04
     1a4:	9d 81       	ldd	r25, Y+5	; 0x05
     1a6:	84 83       	std	Z+4, r24	; 0x04
     1a8:	95 83       	std	Z+5, r25	; 0x05
     1aa:	8c 81       	ldd	r24, Y+4	; 0x04
     1ac:	9d 81       	ldd	r25, Y+5	; 0x05
     1ae:	dc 01       	movw	r26, r24
     1b0:	12 96       	adiw	r26, 0x02	; 2
     1b2:	6d 93       	st	X+, r22
     1b4:	7c 93       	st	X, r23
     1b6:	13 97       	sbiw	r26, 0x03	; 3
     1b8:	6c 83       	std	Y+4, r22	; 0x04
     1ba:	7d 83       	std	Y+5, r23	; 0x05
     1bc:	20 87       	std	Z+8, r18	; 0x08
     1be:	31 87       	std	Z+9, r19	; 0x09
     1c0:	f9 01       	movw	r30, r18
     1c2:	80 81       	ld	r24, Z
     1c4:	8f 5f       	subi	r24, 0xFF	; 255
     1c6:	80 83       	st	Z, r24
     1c8:	df 91       	pop	r29
     1ca:	cf 91       	pop	r28
     1cc:	08 95       	ret

000001ce <vListInsert>:
     1ce:	cf 93       	push	r28
     1d0:	df 93       	push	r29
     1d2:	eb 01       	movw	r28, r22
     1d4:	48 81       	ld	r20, Y
     1d6:	59 81       	ldd	r21, Y+1	; 0x01
     1d8:	4f 3f       	cpi	r20, 0xFF	; 255
     1da:	2f ef       	ldi	r18, 0xFF	; 255
     1dc:	52 07       	cpc	r21, r18
     1de:	21 f4       	brne	.+8      	; 0x1e8 <vListInsert+0x1a>
     1e0:	fc 01       	movw	r30, r24
     1e2:	a7 81       	ldd	r26, Z+7	; 0x07
     1e4:	b0 85       	ldd	r27, Z+8	; 0x08
     1e6:	0d c0       	rjmp	.+26     	; 0x202 <vListInsert+0x34>
     1e8:	dc 01       	movw	r26, r24
     1ea:	13 96       	adiw	r26, 0x03	; 3
     1ec:	01 c0       	rjmp	.+2      	; 0x1f0 <vListInsert+0x22>
     1ee:	df 01       	movw	r26, r30
     1f0:	12 96       	adiw	r26, 0x02	; 2
     1f2:	ed 91       	ld	r30, X+
     1f4:	fc 91       	ld	r31, X
     1f6:	13 97       	sbiw	r26, 0x03	; 3
     1f8:	20 81       	ld	r18, Z
     1fa:	31 81       	ldd	r19, Z+1	; 0x01
     1fc:	42 17       	cp	r20, r18
     1fe:	53 07       	cpc	r21, r19
     200:	b0 f7       	brcc	.-20     	; 0x1ee <vListInsert+0x20>
     202:	12 96       	adiw	r26, 0x02	; 2
     204:	ed 91       	ld	r30, X+
     206:	fc 91       	ld	r31, X
     208:	13 97       	sbiw	r26, 0x03	; 3
     20a:	ea 83       	std	Y+2, r30	; 0x02
     20c:	fb 83       	std	Y+3, r31	; 0x03
     20e:	c4 83       	std	Z+4, r28	; 0x04
     210:	d5 83       	std	Z+5, r29	; 0x05
     212:	ac 83       	std	Y+4, r26	; 0x04
     214:	bd 83       	std	Y+5, r27	; 0x05
     216:	12 96       	adiw	r26, 0x02	; 2
     218:	cd 93       	st	X+, r28
     21a:	dc 93       	st	X, r29
     21c:	13 97       	sbiw	r26, 0x03	; 3
     21e:	88 87       	std	Y+8, r24	; 0x08
     220:	99 87       	std	Y+9, r25	; 0x09
     222:	fc 01       	movw	r30, r24
     224:	20 81       	ld	r18, Z
     226:	2f 5f       	subi	r18, 0xFF	; 255
     228:	20 83       	st	Z, r18
     22a:	df 91       	pop	r29
     22c:	cf 91       	pop	r28
     22e:	08 95       	ret

00000230 <uxListRemove>:
     230:	cf 93       	push	r28
     232:	df 93       	push	r29
     234:	fc 01       	movw	r30, r24
     236:	a0 85       	ldd	r26, Z+8	; 0x08
     238:	b1 85       	ldd	r27, Z+9	; 0x09
     23a:	c2 81       	ldd	r28, Z+2	; 0x02
     23c:	d3 81       	ldd	r29, Z+3	; 0x03
     23e:	84 81       	ldd	r24, Z+4	; 0x04
     240:	95 81       	ldd	r25, Z+5	; 0x05
     242:	8c 83       	std	Y+4, r24	; 0x04
     244:	9d 83       	std	Y+5, r25	; 0x05
     246:	c4 81       	ldd	r28, Z+4	; 0x04
     248:	d5 81       	ldd	r29, Z+5	; 0x05
     24a:	82 81       	ldd	r24, Z+2	; 0x02
     24c:	93 81       	ldd	r25, Z+3	; 0x03
     24e:	8a 83       	std	Y+2, r24	; 0x02
     250:	9b 83       	std	Y+3, r25	; 0x03
     252:	11 96       	adiw	r26, 0x01	; 1
     254:	8d 91       	ld	r24, X+
     256:	9c 91       	ld	r25, X
     258:	12 97       	sbiw	r26, 0x02	; 2
     25a:	e8 17       	cp	r30, r24
     25c:	f9 07       	cpc	r31, r25
     25e:	31 f4       	brne	.+12     	; 0x26c <uxListRemove+0x3c>
     260:	84 81       	ldd	r24, Z+4	; 0x04
     262:	95 81       	ldd	r25, Z+5	; 0x05
     264:	11 96       	adiw	r26, 0x01	; 1
     266:	8d 93       	st	X+, r24
     268:	9c 93       	st	X, r25
     26a:	12 97       	sbiw	r26, 0x02	; 2
     26c:	10 86       	std	Z+8, r1	; 0x08
     26e:	11 86       	std	Z+9, r1	; 0x09
     270:	8c 91       	ld	r24, X
     272:	81 50       	subi	r24, 0x01	; 1
     274:	8c 93       	st	X, r24
     276:	8c 91       	ld	r24, X
     278:	df 91       	pop	r29
     27a:	cf 91       	pop	r28
     27c:	08 95       	ret

0000027e <pxPortInitialiseStack>:
     27e:	fc 01       	movw	r30, r24
     280:	60 83       	st	Z, r22
     282:	31 97       	sbiw	r30, 0x01	; 1
     284:	70 83       	st	Z, r23
     286:	31 97       	sbiw	r30, 0x01	; 1
     288:	10 82       	st	Z, r1
     28a:	31 97       	sbiw	r30, 0x01	; 1
     28c:	20 e8       	ldi	r18, 0x80	; 128
     28e:	20 83       	st	Z, r18
     290:	31 97       	sbiw	r30, 0x01	; 1
     292:	10 82       	st	Z, r1
     294:	77 97       	sbiw	r30, 0x17	; 23
     296:	40 83       	st	Z, r20
     298:	31 97       	sbiw	r30, 0x01	; 1
     29a:	50 83       	st	Z, r21
     29c:	83 97       	sbiw	r24, 0x23	; 35
     29e:	08 95       	ret

000002a0 <xPortStartScheduler>:
     2a0:	e0 e8       	ldi	r30, 0x80	; 128
     2a2:	fa e0       	ldi	r31, 0x0A	; 10
     2a4:	80 e1       	ldi	r24, 0x10	; 16
     2a6:	97 e2       	ldi	r25, 0x27	; 39
     2a8:	84 87       	std	Z+12, r24	; 0x0c
     2aa:	95 87       	std	Z+13, r25	; 0x0d
     2ac:	81 e0       	ldi	r24, 0x01	; 1
     2ae:	85 83       	std	Z+5, r24	; 0x05
     2b0:	80 83       	st	Z, r24
     2b2:	a0 91 c2 30 	lds	r26, 0x30C2	; 0x8030c2 <pxCurrentTCB>
     2b6:	b0 91 c3 30 	lds	r27, 0x30C3	; 0x8030c3 <pxCurrentTCB+0x1>
     2ba:	cd 91       	ld	r28, X+
     2bc:	cd bf       	out	0x3d, r28	; 61
     2be:	dd 91       	ld	r29, X+
     2c0:	de bf       	out	0x3e, r29	; 62
     2c2:	ff 91       	pop	r31
     2c4:	ef 91       	pop	r30
     2c6:	df 91       	pop	r29
     2c8:	cf 91       	pop	r28
     2ca:	bf 91       	pop	r27
     2cc:	af 91       	pop	r26
     2ce:	9f 91       	pop	r25
     2d0:	8f 91       	pop	r24
     2d2:	7f 91       	pop	r23
     2d4:	6f 91       	pop	r22
     2d6:	5f 91       	pop	r21
     2d8:	4f 91       	pop	r20
     2da:	3f 91       	pop	r19
     2dc:	2f 91       	pop	r18
     2de:	1f 91       	pop	r17
     2e0:	0f 91       	pop	r16
     2e2:	ff 90       	pop	r15
     2e4:	ef 90       	pop	r14
     2e6:	df 90       	pop	r13
     2e8:	cf 90       	pop	r12
     2ea:	bf 90       	pop	r11
     2ec:	af 90       	pop	r10
     2ee:	9f 90       	pop	r9
     2f0:	8f 90       	pop	r8
     2f2:	7f 90       	pop	r7
     2f4:	6f 90       	pop	r6
     2f6:	5f 90       	pop	r5
     2f8:	4f 90       	pop	r4
     2fa:	3f 90       	pop	r3
     2fc:	2f 90       	pop	r2
     2fe:	1f 90       	pop	r1
     300:	0f 90       	pop	r0
     302:	0f be       	out	0x3f, r0	; 63
     304:	0f 90       	pop	r0
     306:	08 95       	ret
     308:	08 95       	ret

0000030a <vPortYield>:
     30a:	0f 92       	push	r0
     30c:	0f b6       	in	r0, 0x3f	; 63
     30e:	f8 94       	cli
     310:	0f 92       	push	r0
     312:	1f 92       	push	r1
     314:	11 24       	eor	r1, r1
     316:	2f 92       	push	r2
     318:	3f 92       	push	r3
     31a:	4f 92       	push	r4
     31c:	5f 92       	push	r5
     31e:	6f 92       	push	r6
     320:	7f 92       	push	r7
     322:	8f 92       	push	r8
     324:	9f 92       	push	r9
     326:	af 92       	push	r10
     328:	bf 92       	push	r11
     32a:	cf 92       	push	r12
     32c:	df 92       	push	r13
     32e:	ef 92       	push	r14
     330:	ff 92       	push	r15
     332:	0f 93       	push	r16
     334:	1f 93       	push	r17
     336:	2f 93       	push	r18
     338:	3f 93       	push	r19
     33a:	4f 93       	push	r20
     33c:	5f 93       	push	r21
     33e:	6f 93       	push	r22
     340:	7f 93       	push	r23
     342:	8f 93       	push	r24
     344:	9f 93       	push	r25
     346:	af 93       	push	r26
     348:	bf 93       	push	r27
     34a:	cf 93       	push	r28
     34c:	df 93       	push	r29
     34e:	ef 93       	push	r30
     350:	ff 93       	push	r31
     352:	a0 91 c2 30 	lds	r26, 0x30C2	; 0x8030c2 <pxCurrentTCB>
     356:	b0 91 c3 30 	lds	r27, 0x30C3	; 0x8030c3 <pxCurrentTCB+0x1>
     35a:	0d b6       	in	r0, 0x3d	; 61
     35c:	0d 92       	st	X+, r0
     35e:	0e b6       	in	r0, 0x3e	; 62
     360:	0d 92       	st	X+, r0
     362:	0e 94 21 08 	call	0x1042	; 0x1042 <vTaskSwitchContext>
     366:	a0 91 c2 30 	lds	r26, 0x30C2	; 0x8030c2 <pxCurrentTCB>
     36a:	b0 91 c3 30 	lds	r27, 0x30C3	; 0x8030c3 <pxCurrentTCB+0x1>
     36e:	cd 91       	ld	r28, X+
     370:	cd bf       	out	0x3d, r28	; 61
     372:	dd 91       	ld	r29, X+
     374:	de bf       	out	0x3e, r29	; 62
     376:	ff 91       	pop	r31
     378:	ef 91       	pop	r30
     37a:	df 91       	pop	r29
     37c:	cf 91       	pop	r28
     37e:	bf 91       	pop	r27
     380:	af 91       	pop	r26
     382:	9f 91       	pop	r25
     384:	8f 91       	pop	r24
     386:	7f 91       	pop	r23
     388:	6f 91       	pop	r22
     38a:	5f 91       	pop	r21
     38c:	4f 91       	pop	r20
     38e:	3f 91       	pop	r19
     390:	2f 91       	pop	r18
     392:	1f 91       	pop	r17
     394:	0f 91       	pop	r16
     396:	ff 90       	pop	r15
     398:	ef 90       	pop	r14
     39a:	df 90       	pop	r13
     39c:	cf 90       	pop	r12
     39e:	bf 90       	pop	r11
     3a0:	af 90       	pop	r10
     3a2:	9f 90       	pop	r9
     3a4:	8f 90       	pop	r8
     3a6:	7f 90       	pop	r7
     3a8:	6f 90       	pop	r6
     3aa:	5f 90       	pop	r5
     3ac:	4f 90       	pop	r4
     3ae:	3f 90       	pop	r3
     3b0:	2f 90       	pop	r2
     3b2:	1f 90       	pop	r1
     3b4:	0f 90       	pop	r0
     3b6:	0f be       	out	0x3f, r0	; 63
     3b8:	0f 90       	pop	r0
     3ba:	08 95       	ret

000003bc <vPortYieldFromTick>:
     3bc:	0f 92       	push	r0
     3be:	0f b6       	in	r0, 0x3f	; 63
     3c0:	f8 94       	cli
     3c2:	0f 92       	push	r0
     3c4:	1f 92       	push	r1
     3c6:	11 24       	eor	r1, r1
     3c8:	2f 92       	push	r2
     3ca:	3f 92       	push	r3
     3cc:	4f 92       	push	r4
     3ce:	5f 92       	push	r5
     3d0:	6f 92       	push	r6
     3d2:	7f 92       	push	r7
     3d4:	8f 92       	push	r8
     3d6:	9f 92       	push	r9
     3d8:	af 92       	push	r10
     3da:	bf 92       	push	r11
     3dc:	cf 92       	push	r12
     3de:	df 92       	push	r13
     3e0:	ef 92       	push	r14
     3e2:	ff 92       	push	r15
     3e4:	0f 93       	push	r16
     3e6:	1f 93       	push	r17
     3e8:	2f 93       	push	r18
     3ea:	3f 93       	push	r19
     3ec:	4f 93       	push	r20
     3ee:	5f 93       	push	r21
     3f0:	6f 93       	push	r22
     3f2:	7f 93       	push	r23
     3f4:	8f 93       	push	r24
     3f6:	9f 93       	push	r25
     3f8:	af 93       	push	r26
     3fa:	bf 93       	push	r27
     3fc:	cf 93       	push	r28
     3fe:	df 93       	push	r29
     400:	ef 93       	push	r30
     402:	ff 93       	push	r31
     404:	a0 91 c2 30 	lds	r26, 0x30C2	; 0x8030c2 <pxCurrentTCB>
     408:	b0 91 c3 30 	lds	r27, 0x30C3	; 0x8030c3 <pxCurrentTCB+0x1>
     40c:	0d b6       	in	r0, 0x3d	; 61
     40e:	0d 92       	st	X+, r0
     410:	0e b6       	in	r0, 0x3e	; 62
     412:	0d 92       	st	X+, r0
     414:	0e 94 d6 06 	call	0xdac	; 0xdac <xTaskIncrementTick>
     418:	81 11       	cpse	r24, r1
     41a:	0e 94 21 08 	call	0x1042	; 0x1042 <vTaskSwitchContext>
     41e:	a0 91 c2 30 	lds	r26, 0x30C2	; 0x8030c2 <pxCurrentTCB>
     422:	b0 91 c3 30 	lds	r27, 0x30C3	; 0x8030c3 <pxCurrentTCB+0x1>
     426:	cd 91       	ld	r28, X+
     428:	cd bf       	out	0x3d, r28	; 61
     42a:	dd 91       	ld	r29, X+
     42c:	de bf       	out	0x3e, r29	; 62
     42e:	ff 91       	pop	r31
     430:	ef 91       	pop	r30
     432:	df 91       	pop	r29
     434:	cf 91       	pop	r28
     436:	bf 91       	pop	r27
     438:	af 91       	pop	r26
     43a:	9f 91       	pop	r25
     43c:	8f 91       	pop	r24
     43e:	7f 91       	pop	r23
     440:	6f 91       	pop	r22
     442:	5f 91       	pop	r21
     444:	4f 91       	pop	r20
     446:	3f 91       	pop	r19
     448:	2f 91       	pop	r18
     44a:	1f 91       	pop	r17
     44c:	0f 91       	pop	r16
     44e:	ff 90       	pop	r15
     450:	ef 90       	pop	r14
     452:	df 90       	pop	r13
     454:	cf 90       	pop	r12
     456:	bf 90       	pop	r11
     458:	af 90       	pop	r10
     45a:	9f 90       	pop	r9
     45c:	8f 90       	pop	r8
     45e:	7f 90       	pop	r7
     460:	6f 90       	pop	r6
     462:	5f 90       	pop	r5
     464:	4f 90       	pop	r4
     466:	3f 90       	pop	r3
     468:	2f 90       	pop	r2
     46a:	1f 90       	pop	r1
     46c:	0f 90       	pop	r0
     46e:	0f be       	out	0x3f, r0	; 63
     470:	0f 90       	pop	r0
     472:	18 95       	reti

00000474 <__vector_12>:
     474:	0f 93       	push	r16
     476:	01 e0       	ldi	r16, 0x01	; 1
     478:	00 93 86 0a 	sts	0x0A86, r16	; 0x800a86 <__TEXT_REGION_LENGTH__+0x700a86>
     47c:	0f 91       	pop	r16
     47e:	0e 94 de 01 	call	0x3bc	; 0x3bc <vPortYieldFromTick>
     482:	18 95       	reti

00000484 <pvPortMalloc>:
     484:	cf 93       	push	r28
     486:	df 93       	push	r29
     488:	ec 01       	movw	r28, r24
     48a:	0e 94 d0 06 	call	0xda0	; 0xda0 <vTaskSuspendAll>
     48e:	80 91 64 28 	lds	r24, 0x2864	; 0x802864 <__data_end>
     492:	90 91 65 28 	lds	r25, 0x2865	; 0x802865 <__data_end+0x1>
     496:	89 2b       	or	r24, r25
     498:	31 f4       	brne	.+12     	; 0x4a6 <pvPortMalloc+0x22>
     49a:	89 e6       	ldi	r24, 0x69	; 105
     49c:	98 e2       	ldi	r25, 0x28	; 40
     49e:	80 93 64 28 	sts	0x2864, r24	; 0x802864 <__data_end>
     4a2:	90 93 65 28 	sts	0x2865, r25	; 0x802865 <__data_end+0x1>
     4a6:	20 91 66 28 	lds	r18, 0x2866	; 0x802866 <xNextFreeByte>
     4aa:	30 91 67 28 	lds	r19, 0x2867	; 0x802867 <xNextFreeByte+0x1>
     4ae:	c9 01       	movw	r24, r18
     4b0:	8c 0f       	add	r24, r28
     4b2:	9d 1f       	adc	r25, r29
     4b4:	8f 3f       	cpi	r24, 0xFF	; 255
     4b6:	47 e0       	ldi	r20, 0x07	; 7
     4b8:	94 07       	cpc	r25, r20
     4ba:	70 f4       	brcc	.+28     	; 0x4d8 <pvPortMalloc+0x54>
     4bc:	28 17       	cp	r18, r24
     4be:	39 07       	cpc	r19, r25
     4c0:	70 f4       	brcc	.+28     	; 0x4de <pvPortMalloc+0x5a>
     4c2:	c0 91 64 28 	lds	r28, 0x2864	; 0x802864 <__data_end>
     4c6:	d0 91 65 28 	lds	r29, 0x2865	; 0x802865 <__data_end+0x1>
     4ca:	c2 0f       	add	r28, r18
     4cc:	d3 1f       	adc	r29, r19
     4ce:	80 93 66 28 	sts	0x2866, r24	; 0x802866 <xNextFreeByte>
     4d2:	90 93 67 28 	sts	0x2867, r25	; 0x802867 <xNextFreeByte+0x1>
     4d6:	05 c0       	rjmp	.+10     	; 0x4e2 <pvPortMalloc+0x5e>
     4d8:	c0 e0       	ldi	r28, 0x00	; 0
     4da:	d0 e0       	ldi	r29, 0x00	; 0
     4dc:	02 c0       	rjmp	.+4      	; 0x4e2 <pvPortMalloc+0x5e>
     4de:	c0 e0       	ldi	r28, 0x00	; 0
     4e0:	d0 e0       	ldi	r29, 0x00	; 0
     4e2:	0e 94 8e 07 	call	0xf1c	; 0xf1c <xTaskResumeAll>
     4e6:	ce 01       	movw	r24, r28
     4e8:	df 91       	pop	r29
     4ea:	cf 91       	pop	r28
     4ec:	08 95       	ret

000004ee <vPortFree>:
     4ee:	08 95       	ret

000004f0 <prvIsQueueEmpty>:
     4f0:	0f b6       	in	r0, 0x3f	; 63
     4f2:	f8 94       	cli
     4f4:	0f 92       	push	r0
     4f6:	fc 01       	movw	r30, r24
     4f8:	92 8d       	ldd	r25, Z+26	; 0x1a
     4fa:	0f 90       	pop	r0
     4fc:	0f be       	out	0x3f, r0	; 63
     4fe:	81 e0       	ldi	r24, 0x01	; 1
     500:	91 11       	cpse	r25, r1
     502:	80 e0       	ldi	r24, 0x00	; 0
     504:	08 95       	ret

00000506 <prvCopyDataToQueue>:
     506:	0f 93       	push	r16
     508:	1f 93       	push	r17
     50a:	cf 93       	push	r28
     50c:	df 93       	push	r29
     50e:	ec 01       	movw	r28, r24
     510:	04 2f       	mov	r16, r20
     512:	1a 8d       	ldd	r17, Y+26	; 0x1a
     514:	4c 8d       	ldd	r20, Y+28	; 0x1c
     516:	41 11       	cpse	r20, r1
     518:	0c c0       	rjmp	.+24     	; 0x532 <prvCopyDataToQueue+0x2c>
     51a:	88 81       	ld	r24, Y
     51c:	99 81       	ldd	r25, Y+1	; 0x01
     51e:	89 2b       	or	r24, r25
     520:	09 f0       	breq	.+2      	; 0x524 <prvCopyDataToQueue+0x1e>
     522:	42 c0       	rjmp	.+132    	; 0x5a8 <prvCopyDataToQueue+0xa2>
     524:	8a 81       	ldd	r24, Y+2	; 0x02
     526:	9b 81       	ldd	r25, Y+3	; 0x03
     528:	0e 94 26 09 	call	0x124c	; 0x124c <xTaskPriorityDisinherit>
     52c:	1a 82       	std	Y+2, r1	; 0x02
     52e:	1b 82       	std	Y+3, r1	; 0x03
     530:	42 c0       	rjmp	.+132    	; 0x5b6 <prvCopyDataToQueue+0xb0>
     532:	01 11       	cpse	r16, r1
     534:	17 c0       	rjmp	.+46     	; 0x564 <prvCopyDataToQueue+0x5e>
     536:	50 e0       	ldi	r21, 0x00	; 0
     538:	8c 81       	ldd	r24, Y+4	; 0x04
     53a:	9d 81       	ldd	r25, Y+5	; 0x05
     53c:	0e 94 6b 0b 	call	0x16d6	; 0x16d6 <memcpy>
     540:	2c 8d       	ldd	r18, Y+28	; 0x1c
     542:	8c 81       	ldd	r24, Y+4	; 0x04
     544:	9d 81       	ldd	r25, Y+5	; 0x05
     546:	82 0f       	add	r24, r18
     548:	91 1d       	adc	r25, r1
     54a:	8c 83       	std	Y+4, r24	; 0x04
     54c:	9d 83       	std	Y+5, r25	; 0x05
     54e:	2a 81       	ldd	r18, Y+2	; 0x02
     550:	3b 81       	ldd	r19, Y+3	; 0x03
     552:	82 17       	cp	r24, r18
     554:	93 07       	cpc	r25, r19
     556:	50 f1       	brcs	.+84     	; 0x5ac <prvCopyDataToQueue+0xa6>
     558:	88 81       	ld	r24, Y
     55a:	99 81       	ldd	r25, Y+1	; 0x01
     55c:	8c 83       	std	Y+4, r24	; 0x04
     55e:	9d 83       	std	Y+5, r25	; 0x05
     560:	80 e0       	ldi	r24, 0x00	; 0
     562:	29 c0       	rjmp	.+82     	; 0x5b6 <prvCopyDataToQueue+0xb0>
     564:	50 e0       	ldi	r21, 0x00	; 0
     566:	8e 81       	ldd	r24, Y+6	; 0x06
     568:	9f 81       	ldd	r25, Y+7	; 0x07
     56a:	0e 94 6b 0b 	call	0x16d6	; 0x16d6 <memcpy>
     56e:	8c 8d       	ldd	r24, Y+28	; 0x1c
     570:	90 e0       	ldi	r25, 0x00	; 0
     572:	91 95       	neg	r25
     574:	81 95       	neg	r24
     576:	91 09       	sbc	r25, r1
     578:	2e 81       	ldd	r18, Y+6	; 0x06
     57a:	3f 81       	ldd	r19, Y+7	; 0x07
     57c:	28 0f       	add	r18, r24
     57e:	39 1f       	adc	r19, r25
     580:	2e 83       	std	Y+6, r18	; 0x06
     582:	3f 83       	std	Y+7, r19	; 0x07
     584:	48 81       	ld	r20, Y
     586:	59 81       	ldd	r21, Y+1	; 0x01
     588:	24 17       	cp	r18, r20
     58a:	35 07       	cpc	r19, r21
     58c:	30 f4       	brcc	.+12     	; 0x59a <prvCopyDataToQueue+0x94>
     58e:	2a 81       	ldd	r18, Y+2	; 0x02
     590:	3b 81       	ldd	r19, Y+3	; 0x03
     592:	82 0f       	add	r24, r18
     594:	93 1f       	adc	r25, r19
     596:	8e 83       	std	Y+6, r24	; 0x06
     598:	9f 83       	std	Y+7, r25	; 0x07
     59a:	02 30       	cpi	r16, 0x02	; 2
     59c:	49 f4       	brne	.+18     	; 0x5b0 <prvCopyDataToQueue+0xaa>
     59e:	11 23       	and	r17, r17
     5a0:	49 f0       	breq	.+18     	; 0x5b4 <prvCopyDataToQueue+0xae>
     5a2:	11 50       	subi	r17, 0x01	; 1
     5a4:	80 e0       	ldi	r24, 0x00	; 0
     5a6:	07 c0       	rjmp	.+14     	; 0x5b6 <prvCopyDataToQueue+0xb0>
     5a8:	80 e0       	ldi	r24, 0x00	; 0
     5aa:	05 c0       	rjmp	.+10     	; 0x5b6 <prvCopyDataToQueue+0xb0>
     5ac:	80 e0       	ldi	r24, 0x00	; 0
     5ae:	03 c0       	rjmp	.+6      	; 0x5b6 <prvCopyDataToQueue+0xb0>
     5b0:	80 e0       	ldi	r24, 0x00	; 0
     5b2:	01 c0       	rjmp	.+2      	; 0x5b6 <prvCopyDataToQueue+0xb0>
     5b4:	80 e0       	ldi	r24, 0x00	; 0
     5b6:	1f 5f       	subi	r17, 0xFF	; 255
     5b8:	1a 8f       	std	Y+26, r17	; 0x1a
     5ba:	df 91       	pop	r29
     5bc:	cf 91       	pop	r28
     5be:	1f 91       	pop	r17
     5c0:	0f 91       	pop	r16
     5c2:	08 95       	ret

000005c4 <prvCopyDataFromQueue>:
     5c4:	fc 01       	movw	r30, r24
     5c6:	44 8d       	ldd	r20, Z+28	; 0x1c
     5c8:	44 23       	and	r20, r20
     5ca:	a9 f0       	breq	.+42     	; 0x5f6 <prvCopyDataFromQueue+0x32>
     5cc:	50 e0       	ldi	r21, 0x00	; 0
     5ce:	26 81       	ldd	r18, Z+6	; 0x06
     5d0:	37 81       	ldd	r19, Z+7	; 0x07
     5d2:	24 0f       	add	r18, r20
     5d4:	35 1f       	adc	r19, r21
     5d6:	26 83       	std	Z+6, r18	; 0x06
     5d8:	37 83       	std	Z+7, r19	; 0x07
     5da:	82 81       	ldd	r24, Z+2	; 0x02
     5dc:	93 81       	ldd	r25, Z+3	; 0x03
     5de:	28 17       	cp	r18, r24
     5e0:	39 07       	cpc	r19, r25
     5e2:	20 f0       	brcs	.+8      	; 0x5ec <prvCopyDataFromQueue+0x28>
     5e4:	80 81       	ld	r24, Z
     5e6:	91 81       	ldd	r25, Z+1	; 0x01
     5e8:	86 83       	std	Z+6, r24	; 0x06
     5ea:	97 83       	std	Z+7, r25	; 0x07
     5ec:	cb 01       	movw	r24, r22
     5ee:	66 81       	ldd	r22, Z+6	; 0x06
     5f0:	77 81       	ldd	r23, Z+7	; 0x07
     5f2:	0e 94 6b 0b 	call	0x16d6	; 0x16d6 <memcpy>
     5f6:	08 95       	ret

000005f8 <prvUnlockQueue>:
     5f8:	ef 92       	push	r14
     5fa:	ff 92       	push	r15
     5fc:	0f 93       	push	r16
     5fe:	1f 93       	push	r17
     600:	cf 93       	push	r28
     602:	8c 01       	movw	r16, r24
     604:	0f b6       	in	r0, 0x3f	; 63
     606:	f8 94       	cli
     608:	0f 92       	push	r0
     60a:	fc 01       	movw	r30, r24
     60c:	c6 8d       	ldd	r28, Z+30	; 0x1e
     60e:	1c 16       	cp	r1, r28
     610:	ac f4       	brge	.+42     	; 0x63c <prvUnlockQueue+0x44>
     612:	81 89       	ldd	r24, Z+17	; 0x11
     614:	81 11       	cpse	r24, r1
     616:	06 c0       	rjmp	.+12     	; 0x624 <prvUnlockQueue+0x2c>
     618:	11 c0       	rjmp	.+34     	; 0x63c <prvUnlockQueue+0x44>
     61a:	f8 01       	movw	r30, r16
     61c:	81 89       	ldd	r24, Z+17	; 0x11
     61e:	81 11       	cpse	r24, r1
     620:	05 c0       	rjmp	.+10     	; 0x62c <prvUnlockQueue+0x34>
     622:	0c c0       	rjmp	.+24     	; 0x63c <prvUnlockQueue+0x44>
     624:	78 01       	movw	r14, r16
     626:	f1 e1       	ldi	r31, 0x11	; 17
     628:	ef 0e       	add	r14, r31
     62a:	f1 1c       	adc	r15, r1
     62c:	c7 01       	movw	r24, r14
     62e:	0e 94 99 08 	call	0x1132	; 0x1132 <xTaskRemoveFromEventList>
     632:	81 11       	cpse	r24, r1
     634:	0e 94 22 09 	call	0x1244	; 0x1244 <vTaskMissedYield>
     638:	c1 50       	subi	r28, 0x01	; 1
     63a:	79 f7       	brne	.-34     	; 0x61a <prvUnlockQueue+0x22>
     63c:	8f ef       	ldi	r24, 0xFF	; 255
     63e:	f8 01       	movw	r30, r16
     640:	86 8f       	std	Z+30, r24	; 0x1e
     642:	0f 90       	pop	r0
     644:	0f be       	out	0x3f, r0	; 63
     646:	0f b6       	in	r0, 0x3f	; 63
     648:	f8 94       	cli
     64a:	0f 92       	push	r0
     64c:	c5 8d       	ldd	r28, Z+29	; 0x1d
     64e:	1c 16       	cp	r1, r28
     650:	ac f4       	brge	.+42     	; 0x67c <prvUnlockQueue+0x84>
     652:	80 85       	ldd	r24, Z+8	; 0x08
     654:	81 11       	cpse	r24, r1
     656:	06 c0       	rjmp	.+12     	; 0x664 <prvUnlockQueue+0x6c>
     658:	11 c0       	rjmp	.+34     	; 0x67c <prvUnlockQueue+0x84>
     65a:	f8 01       	movw	r30, r16
     65c:	80 85       	ldd	r24, Z+8	; 0x08
     65e:	81 11       	cpse	r24, r1
     660:	05 c0       	rjmp	.+10     	; 0x66c <prvUnlockQueue+0x74>
     662:	0c c0       	rjmp	.+24     	; 0x67c <prvUnlockQueue+0x84>
     664:	78 01       	movw	r14, r16
     666:	f8 e0       	ldi	r31, 0x08	; 8
     668:	ef 0e       	add	r14, r31
     66a:	f1 1c       	adc	r15, r1
     66c:	c7 01       	movw	r24, r14
     66e:	0e 94 99 08 	call	0x1132	; 0x1132 <xTaskRemoveFromEventList>
     672:	81 11       	cpse	r24, r1
     674:	0e 94 22 09 	call	0x1244	; 0x1244 <vTaskMissedYield>
     678:	c1 50       	subi	r28, 0x01	; 1
     67a:	79 f7       	brne	.-34     	; 0x65a <prvUnlockQueue+0x62>
     67c:	8f ef       	ldi	r24, 0xFF	; 255
     67e:	f8 01       	movw	r30, r16
     680:	85 8f       	std	Z+29, r24	; 0x1d
     682:	0f 90       	pop	r0
     684:	0f be       	out	0x3f, r0	; 63
     686:	cf 91       	pop	r28
     688:	1f 91       	pop	r17
     68a:	0f 91       	pop	r16
     68c:	ff 90       	pop	r15
     68e:	ef 90       	pop	r14
     690:	08 95       	ret

00000692 <xQueueGenericReset>:
     692:	cf 93       	push	r28
     694:	df 93       	push	r29
     696:	ec 01       	movw	r28, r24
     698:	0f b6       	in	r0, 0x3f	; 63
     69a:	f8 94       	cli
     69c:	0f 92       	push	r0
     69e:	48 81       	ld	r20, Y
     6a0:	59 81       	ldd	r21, Y+1	; 0x01
     6a2:	2c 8d       	ldd	r18, Y+28	; 0x1c
     6a4:	30 e0       	ldi	r19, 0x00	; 0
     6a6:	7b 8d       	ldd	r23, Y+27	; 0x1b
     6a8:	72 9f       	mul	r23, r18
     6aa:	c0 01       	movw	r24, r0
     6ac:	73 9f       	mul	r23, r19
     6ae:	90 0d       	add	r25, r0
     6b0:	11 24       	eor	r1, r1
     6b2:	fa 01       	movw	r30, r20
     6b4:	e8 0f       	add	r30, r24
     6b6:	f9 1f       	adc	r31, r25
     6b8:	ea 83       	std	Y+2, r30	; 0x02
     6ba:	fb 83       	std	Y+3, r31	; 0x03
     6bc:	1a 8e       	std	Y+26, r1	; 0x1a
     6be:	4c 83       	std	Y+4, r20	; 0x04
     6c0:	5d 83       	std	Y+5, r21	; 0x05
     6c2:	82 1b       	sub	r24, r18
     6c4:	93 0b       	sbc	r25, r19
     6c6:	84 0f       	add	r24, r20
     6c8:	95 1f       	adc	r25, r21
     6ca:	8e 83       	std	Y+6, r24	; 0x06
     6cc:	9f 83       	std	Y+7, r25	; 0x07
     6ce:	8f ef       	ldi	r24, 0xFF	; 255
     6d0:	8d 8f       	std	Y+29, r24	; 0x1d
     6d2:	8e 8f       	std	Y+30, r24	; 0x1e
     6d4:	61 11       	cpse	r22, r1
     6d6:	0c c0       	rjmp	.+24     	; 0x6f0 <xQueueGenericReset+0x5e>
     6d8:	88 85       	ldd	r24, Y+8	; 0x08
     6da:	88 23       	and	r24, r24
     6dc:	89 f0       	breq	.+34     	; 0x700 <xQueueGenericReset+0x6e>
     6de:	ce 01       	movw	r24, r28
     6e0:	08 96       	adiw	r24, 0x08	; 8
     6e2:	0e 94 99 08 	call	0x1132	; 0x1132 <xTaskRemoveFromEventList>
     6e6:	88 23       	and	r24, r24
     6e8:	59 f0       	breq	.+22     	; 0x700 <xQueueGenericReset+0x6e>
     6ea:	0e 94 85 01 	call	0x30a	; 0x30a <vPortYield>
     6ee:	08 c0       	rjmp	.+16     	; 0x700 <xQueueGenericReset+0x6e>
     6f0:	ce 01       	movw	r24, r28
     6f2:	08 96       	adiw	r24, 0x08	; 8
     6f4:	0e 94 b4 00 	call	0x168	; 0x168 <vListInitialise>
     6f8:	ce 01       	movw	r24, r28
     6fa:	41 96       	adiw	r24, 0x11	; 17
     6fc:	0e 94 b4 00 	call	0x168	; 0x168 <vListInitialise>
     700:	0f 90       	pop	r0
     702:	0f be       	out	0x3f, r0	; 63
     704:	81 e0       	ldi	r24, 0x01	; 1
     706:	df 91       	pop	r29
     708:	cf 91       	pop	r28
     70a:	08 95       	ret

0000070c <xQueueGenericCreate>:
     70c:	0f 93       	push	r16
     70e:	1f 93       	push	r17
     710:	cf 93       	push	r28
     712:	df 93       	push	r29
     714:	08 2f       	mov	r16, r24
     716:	16 2f       	mov	r17, r22
     718:	66 23       	and	r22, r22
     71a:	c1 f0       	breq	.+48     	; 0x74c <xQueueGenericCreate+0x40>
     71c:	86 9f       	mul	r24, r22
     71e:	c0 01       	movw	r24, r0
     720:	11 24       	eor	r1, r1
     722:	4f 96       	adiw	r24, 0x1f	; 31
     724:	0e 94 42 02 	call	0x484	; 0x484 <pvPortMalloc>
     728:	ec 01       	movw	r28, r24
     72a:	00 97       	sbiw	r24, 0x00	; 0
     72c:	41 f4       	brne	.+16     	; 0x73e <xQueueGenericCreate+0x32>
     72e:	15 c0       	rjmp	.+42     	; 0x75a <xQueueGenericCreate+0x4e>
     730:	0b 8f       	std	Y+27, r16	; 0x1b
     732:	1c 8f       	std	Y+28, r17	; 0x1c
     734:	61 e0       	ldi	r22, 0x01	; 1
     736:	ce 01       	movw	r24, r28
     738:	0e 94 49 03 	call	0x692	; 0x692 <xQueueGenericReset>
     73c:	0e c0       	rjmp	.+28     	; 0x75a <xQueueGenericCreate+0x4e>
     73e:	4f 96       	adiw	r24, 0x1f	; 31
     740:	88 83       	st	Y, r24
     742:	99 83       	std	Y+1, r25	; 0x01
     744:	f5 cf       	rjmp	.-22     	; 0x730 <xQueueGenericCreate+0x24>
     746:	c8 83       	st	Y, r28
     748:	d9 83       	std	Y+1, r29	; 0x01
     74a:	f2 cf       	rjmp	.-28     	; 0x730 <xQueueGenericCreate+0x24>
     74c:	8f e1       	ldi	r24, 0x1F	; 31
     74e:	90 e0       	ldi	r25, 0x00	; 0
     750:	0e 94 42 02 	call	0x484	; 0x484 <pvPortMalloc>
     754:	ec 01       	movw	r28, r24
     756:	89 2b       	or	r24, r25
     758:	b1 f7       	brne	.-20     	; 0x746 <xQueueGenericCreate+0x3a>
     75a:	ce 01       	movw	r24, r28
     75c:	df 91       	pop	r29
     75e:	cf 91       	pop	r28
     760:	1f 91       	pop	r17
     762:	0f 91       	pop	r16
     764:	08 95       	ret

00000766 <xQueueGenericSend>:
     766:	af 92       	push	r10
     768:	bf 92       	push	r11
     76a:	cf 92       	push	r12
     76c:	df 92       	push	r13
     76e:	ef 92       	push	r14
     770:	ff 92       	push	r15
     772:	0f 93       	push	r16
     774:	1f 93       	push	r17
     776:	cf 93       	push	r28
     778:	df 93       	push	r29
     77a:	cd b7       	in	r28, 0x3d	; 61
     77c:	de b7       	in	r29, 0x3e	; 62
     77e:	25 97       	sbiw	r28, 0x05	; 5
     780:	cd bf       	out	0x3d, r28	; 61
     782:	de bf       	out	0x3e, r29	; 62
     784:	8c 01       	movw	r16, r24
     786:	6b 01       	movw	r12, r22
     788:	4c 83       	std	Y+4, r20	; 0x04
     78a:	5d 83       	std	Y+5, r21	; 0x05
     78c:	a2 2e       	mov	r10, r18
     78e:	b1 2c       	mov	r11, r1
     790:	7c 01       	movw	r14, r24
     792:	88 e0       	ldi	r24, 0x08	; 8
     794:	e8 0e       	add	r14, r24
     796:	f1 1c       	adc	r15, r1
     798:	0f b6       	in	r0, 0x3f	; 63
     79a:	f8 94       	cli
     79c:	0f 92       	push	r0
     79e:	f8 01       	movw	r30, r16
     7a0:	92 8d       	ldd	r25, Z+26	; 0x1a
     7a2:	83 8d       	ldd	r24, Z+27	; 0x1b
     7a4:	98 17       	cp	r25, r24
     7a6:	18 f0       	brcs	.+6      	; 0x7ae <xQueueGenericSend+0x48>
     7a8:	f2 e0       	ldi	r31, 0x02	; 2
     7aa:	af 12       	cpse	r10, r31
     7ac:	19 c0       	rjmp	.+50     	; 0x7e0 <xQueueGenericSend+0x7a>
     7ae:	4a 2d       	mov	r20, r10
     7b0:	b6 01       	movw	r22, r12
     7b2:	c8 01       	movw	r24, r16
     7b4:	0e 94 83 02 	call	0x506	; 0x506 <prvCopyDataToQueue>
     7b8:	f8 01       	movw	r30, r16
     7ba:	91 89       	ldd	r25, Z+17	; 0x11
     7bc:	99 23       	and	r25, r25
     7be:	49 f0       	breq	.+18     	; 0x7d2 <xQueueGenericSend+0x6c>
     7c0:	c8 01       	movw	r24, r16
     7c2:	41 96       	adiw	r24, 0x11	; 17
     7c4:	0e 94 99 08 	call	0x1132	; 0x1132 <xTaskRemoveFromEventList>
     7c8:	88 23       	and	r24, r24
     7ca:	31 f0       	breq	.+12     	; 0x7d8 <xQueueGenericSend+0x72>
     7cc:	0e 94 85 01 	call	0x30a	; 0x30a <vPortYield>
     7d0:	03 c0       	rjmp	.+6      	; 0x7d8 <xQueueGenericSend+0x72>
     7d2:	81 11       	cpse	r24, r1
     7d4:	0e 94 85 01 	call	0x30a	; 0x30a <vPortYield>
     7d8:	0f 90       	pop	r0
     7da:	0f be       	out	0x3f, r0	; 63
     7dc:	81 e0       	ldi	r24, 0x01	; 1
     7de:	51 c0       	rjmp	.+162    	; 0x882 <xQueueGenericSend+0x11c>
     7e0:	8c 81       	ldd	r24, Y+4	; 0x04
     7e2:	9d 81       	ldd	r25, Y+5	; 0x05
     7e4:	89 2b       	or	r24, r25
     7e6:	21 f4       	brne	.+8      	; 0x7f0 <xQueueGenericSend+0x8a>
     7e8:	0f 90       	pop	r0
     7ea:	0f be       	out	0x3f, r0	; 63
     7ec:	80 e0       	ldi	r24, 0x00	; 0
     7ee:	49 c0       	rjmp	.+146    	; 0x882 <xQueueGenericSend+0x11c>
     7f0:	b1 10       	cpse	r11, r1
     7f2:	06 c0       	rjmp	.+12     	; 0x800 <xQueueGenericSend+0x9a>
     7f4:	ce 01       	movw	r24, r28
     7f6:	01 96       	adiw	r24, 0x01	; 1
     7f8:	0e 94 e1 08 	call	0x11c2	; 0x11c2 <vTaskInternalSetTimeOutState>
     7fc:	bb 24       	eor	r11, r11
     7fe:	b3 94       	inc	r11
     800:	0f 90       	pop	r0
     802:	0f be       	out	0x3f, r0	; 63
     804:	0e 94 d0 06 	call	0xda0	; 0xda0 <vTaskSuspendAll>
     808:	0f b6       	in	r0, 0x3f	; 63
     80a:	f8 94       	cli
     80c:	0f 92       	push	r0
     80e:	f8 01       	movw	r30, r16
     810:	85 8d       	ldd	r24, Z+29	; 0x1d
     812:	8f 3f       	cpi	r24, 0xFF	; 255
     814:	09 f4       	brne	.+2      	; 0x818 <xQueueGenericSend+0xb2>
     816:	15 8e       	std	Z+29, r1	; 0x1d
     818:	f8 01       	movw	r30, r16
     81a:	86 8d       	ldd	r24, Z+30	; 0x1e
     81c:	8f 3f       	cpi	r24, 0xFF	; 255
     81e:	09 f4       	brne	.+2      	; 0x822 <xQueueGenericSend+0xbc>
     820:	16 8e       	std	Z+30, r1	; 0x1e
     822:	0f 90       	pop	r0
     824:	0f be       	out	0x3f, r0	; 63
     826:	be 01       	movw	r22, r28
     828:	6c 5f       	subi	r22, 0xFC	; 252
     82a:	7f 4f       	sbci	r23, 0xFF	; 255
     82c:	ce 01       	movw	r24, r28
     82e:	01 96       	adiw	r24, 0x01	; 1
     830:	0e 94 ec 08 	call	0x11d8	; 0x11d8 <xTaskCheckForTimeOut>
     834:	81 11       	cpse	r24, r1
     836:	1f c0       	rjmp	.+62     	; 0x876 <xQueueGenericSend+0x110>
     838:	0f b6       	in	r0, 0x3f	; 63
     83a:	f8 94       	cli
     83c:	0f 92       	push	r0
     83e:	f8 01       	movw	r30, r16
     840:	92 8d       	ldd	r25, Z+26	; 0x1a
     842:	0f 90       	pop	r0
     844:	0f be       	out	0x3f, r0	; 63
     846:	83 8d       	ldd	r24, Z+27	; 0x1b
     848:	98 13       	cpse	r25, r24
     84a:	0f c0       	rjmp	.+30     	; 0x86a <xQueueGenericSend+0x104>
     84c:	6c 81       	ldd	r22, Y+4	; 0x04
     84e:	7d 81       	ldd	r23, Y+5	; 0x05
     850:	c7 01       	movw	r24, r14
     852:	0e 94 87 08 	call	0x110e	; 0x110e <vTaskPlaceOnEventList>
     856:	c8 01       	movw	r24, r16
     858:	0e 94 fc 02 	call	0x5f8	; 0x5f8 <prvUnlockQueue>
     85c:	0e 94 8e 07 	call	0xf1c	; 0xf1c <xTaskResumeAll>
     860:	81 11       	cpse	r24, r1
     862:	9a cf       	rjmp	.-204    	; 0x798 <xQueueGenericSend+0x32>
     864:	0e 94 85 01 	call	0x30a	; 0x30a <vPortYield>
     868:	97 cf       	rjmp	.-210    	; 0x798 <xQueueGenericSend+0x32>
     86a:	c8 01       	movw	r24, r16
     86c:	0e 94 fc 02 	call	0x5f8	; 0x5f8 <prvUnlockQueue>
     870:	0e 94 8e 07 	call	0xf1c	; 0xf1c <xTaskResumeAll>
     874:	91 cf       	rjmp	.-222    	; 0x798 <xQueueGenericSend+0x32>
     876:	c8 01       	movw	r24, r16
     878:	0e 94 fc 02 	call	0x5f8	; 0x5f8 <prvUnlockQueue>
     87c:	0e 94 8e 07 	call	0xf1c	; 0xf1c <xTaskResumeAll>
     880:	80 e0       	ldi	r24, 0x00	; 0
     882:	25 96       	adiw	r28, 0x05	; 5
     884:	cd bf       	out	0x3d, r28	; 61
     886:	de bf       	out	0x3e, r29	; 62
     888:	df 91       	pop	r29
     88a:	cf 91       	pop	r28
     88c:	1f 91       	pop	r17
     88e:	0f 91       	pop	r16
     890:	ff 90       	pop	r15
     892:	ef 90       	pop	r14
     894:	df 90       	pop	r13
     896:	cf 90       	pop	r12
     898:	bf 90       	pop	r11
     89a:	af 90       	pop	r10
     89c:	08 95       	ret

0000089e <xQueueGenericSendFromISR>:
     89e:	ef 92       	push	r14
     8a0:	ff 92       	push	r15
     8a2:	0f 93       	push	r16
     8a4:	1f 93       	push	r17
     8a6:	cf 93       	push	r28
     8a8:	df 93       	push	r29
     8aa:	8a 01       	movw	r16, r20
     8ac:	fc 01       	movw	r30, r24
     8ae:	52 8d       	ldd	r21, Z+26	; 0x1a
     8b0:	33 8d       	ldd	r19, Z+27	; 0x1b
     8b2:	53 17       	cp	r21, r19
     8b4:	10 f0       	brcs	.+4      	; 0x8ba <xQueueGenericSendFromISR+0x1c>
     8b6:	22 30       	cpi	r18, 0x02	; 2
     8b8:	f1 f4       	brne	.+60     	; 0x8f6 <xQueueGenericSendFromISR+0x58>
     8ba:	42 2f       	mov	r20, r18
     8bc:	78 01       	movw	r14, r16
     8be:	ec 01       	movw	r28, r24
     8c0:	1e 8d       	ldd	r17, Y+30	; 0x1e
     8c2:	0e 94 83 02 	call	0x506	; 0x506 <prvCopyDataToQueue>
     8c6:	1f 3f       	cpi	r17, 0xFF	; 255
     8c8:	81 f4       	brne	.+32     	; 0x8ea <xQueueGenericSendFromISR+0x4c>
     8ca:	89 89       	ldd	r24, Y+17	; 0x11
     8cc:	88 23       	and	r24, r24
     8ce:	a9 f0       	breq	.+42     	; 0x8fa <xQueueGenericSendFromISR+0x5c>
     8d0:	ce 01       	movw	r24, r28
     8d2:	41 96       	adiw	r24, 0x11	; 17
     8d4:	0e 94 99 08 	call	0x1132	; 0x1132 <xTaskRemoveFromEventList>
     8d8:	88 23       	and	r24, r24
     8da:	89 f0       	breq	.+34     	; 0x8fe <xQueueGenericSendFromISR+0x60>
     8dc:	e1 14       	cp	r14, r1
     8de:	f1 04       	cpc	r15, r1
     8e0:	81 f0       	breq	.+32     	; 0x902 <xQueueGenericSendFromISR+0x64>
     8e2:	81 e0       	ldi	r24, 0x01	; 1
     8e4:	f7 01       	movw	r30, r14
     8e6:	80 83       	st	Z, r24
     8e8:	0d c0       	rjmp	.+26     	; 0x904 <xQueueGenericSendFromISR+0x66>
     8ea:	ff 24       	eor	r15, r15
     8ec:	f3 94       	inc	r15
     8ee:	f1 0e       	add	r15, r17
     8f0:	fe 8e       	std	Y+30, r15	; 0x1e
     8f2:	81 e0       	ldi	r24, 0x01	; 1
     8f4:	07 c0       	rjmp	.+14     	; 0x904 <xQueueGenericSendFromISR+0x66>
     8f6:	80 e0       	ldi	r24, 0x00	; 0
     8f8:	05 c0       	rjmp	.+10     	; 0x904 <xQueueGenericSendFromISR+0x66>
     8fa:	81 e0       	ldi	r24, 0x01	; 1
     8fc:	03 c0       	rjmp	.+6      	; 0x904 <xQueueGenericSendFromISR+0x66>
     8fe:	81 e0       	ldi	r24, 0x01	; 1
     900:	01 c0       	rjmp	.+2      	; 0x904 <xQueueGenericSendFromISR+0x66>
     902:	81 e0       	ldi	r24, 0x01	; 1
     904:	df 91       	pop	r29
     906:	cf 91       	pop	r28
     908:	1f 91       	pop	r17
     90a:	0f 91       	pop	r16
     90c:	ff 90       	pop	r15
     90e:	ef 90       	pop	r14
     910:	08 95       	ret

00000912 <xQueueReceive>:
     912:	af 92       	push	r10
     914:	bf 92       	push	r11
     916:	cf 92       	push	r12
     918:	df 92       	push	r13
     91a:	ef 92       	push	r14
     91c:	ff 92       	push	r15
     91e:	0f 93       	push	r16
     920:	1f 93       	push	r17
     922:	cf 93       	push	r28
     924:	df 93       	push	r29
     926:	cd b7       	in	r28, 0x3d	; 61
     928:	de b7       	in	r29, 0x3e	; 62
     92a:	25 97       	sbiw	r28, 0x05	; 5
     92c:	cd bf       	out	0x3d, r28	; 61
     92e:	de bf       	out	0x3e, r29	; 62
     930:	8c 01       	movw	r16, r24
     932:	5b 01       	movw	r10, r22
     934:	4c 83       	std	Y+4, r20	; 0x04
     936:	5d 83       	std	Y+5, r21	; 0x05
     938:	e1 2c       	mov	r14, r1
     93a:	6c 01       	movw	r12, r24
     93c:	81 e1       	ldi	r24, 0x11	; 17
     93e:	c8 0e       	add	r12, r24
     940:	d1 1c       	adc	r13, r1
     942:	0f b6       	in	r0, 0x3f	; 63
     944:	f8 94       	cli
     946:	0f 92       	push	r0
     948:	f8 01       	movw	r30, r16
     94a:	f2 8c       	ldd	r15, Z+26	; 0x1a
     94c:	ff 20       	and	r15, r15
     94e:	a9 f0       	breq	.+42     	; 0x97a <xQueueReceive+0x68>
     950:	b5 01       	movw	r22, r10
     952:	c8 01       	movw	r24, r16
     954:	0e 94 e2 02 	call	0x5c4	; 0x5c4 <prvCopyDataFromQueue>
     958:	fa 94       	dec	r15
     95a:	f8 01       	movw	r30, r16
     95c:	f2 8e       	std	Z+26, r15	; 0x1a
     95e:	80 85       	ldd	r24, Z+8	; 0x08
     960:	88 23       	and	r24, r24
     962:	39 f0       	breq	.+14     	; 0x972 <xQueueReceive+0x60>
     964:	c8 01       	movw	r24, r16
     966:	08 96       	adiw	r24, 0x08	; 8
     968:	0e 94 99 08 	call	0x1132	; 0x1132 <xTaskRemoveFromEventList>
     96c:	81 11       	cpse	r24, r1
     96e:	0e 94 85 01 	call	0x30a	; 0x30a <vPortYield>
     972:	0f 90       	pop	r0
     974:	0f be       	out	0x3f, r0	; 63
     976:	81 e0       	ldi	r24, 0x01	; 1
     978:	52 c0       	rjmp	.+164    	; 0xa1e <xQueueReceive+0x10c>
     97a:	8c 81       	ldd	r24, Y+4	; 0x04
     97c:	9d 81       	ldd	r25, Y+5	; 0x05
     97e:	89 2b       	or	r24, r25
     980:	21 f4       	brne	.+8      	; 0x98a <xQueueReceive+0x78>
     982:	0f 90       	pop	r0
     984:	0f be       	out	0x3f, r0	; 63
     986:	80 e0       	ldi	r24, 0x00	; 0
     988:	4a c0       	rjmp	.+148    	; 0xa1e <xQueueReceive+0x10c>
     98a:	e1 10       	cpse	r14, r1
     98c:	06 c0       	rjmp	.+12     	; 0x99a <xQueueReceive+0x88>
     98e:	ce 01       	movw	r24, r28
     990:	01 96       	adiw	r24, 0x01	; 1
     992:	0e 94 e1 08 	call	0x11c2	; 0x11c2 <vTaskInternalSetTimeOutState>
     996:	ee 24       	eor	r14, r14
     998:	e3 94       	inc	r14
     99a:	0f 90       	pop	r0
     99c:	0f be       	out	0x3f, r0	; 63
     99e:	0e 94 d0 06 	call	0xda0	; 0xda0 <vTaskSuspendAll>
     9a2:	0f b6       	in	r0, 0x3f	; 63
     9a4:	f8 94       	cli
     9a6:	0f 92       	push	r0
     9a8:	f8 01       	movw	r30, r16
     9aa:	85 8d       	ldd	r24, Z+29	; 0x1d
     9ac:	8f 3f       	cpi	r24, 0xFF	; 255
     9ae:	09 f4       	brne	.+2      	; 0x9b2 <xQueueReceive+0xa0>
     9b0:	15 8e       	std	Z+29, r1	; 0x1d
     9b2:	f8 01       	movw	r30, r16
     9b4:	86 8d       	ldd	r24, Z+30	; 0x1e
     9b6:	8f 3f       	cpi	r24, 0xFF	; 255
     9b8:	09 f4       	brne	.+2      	; 0x9bc <xQueueReceive+0xaa>
     9ba:	16 8e       	std	Z+30, r1	; 0x1e
     9bc:	0f 90       	pop	r0
     9be:	0f be       	out	0x3f, r0	; 63
     9c0:	be 01       	movw	r22, r28
     9c2:	6c 5f       	subi	r22, 0xFC	; 252
     9c4:	7f 4f       	sbci	r23, 0xFF	; 255
     9c6:	ce 01       	movw	r24, r28
     9c8:	01 96       	adiw	r24, 0x01	; 1
     9ca:	0e 94 ec 08 	call	0x11d8	; 0x11d8 <xTaskCheckForTimeOut>
     9ce:	81 11       	cpse	r24, r1
     9d0:	1a c0       	rjmp	.+52     	; 0xa06 <xQueueReceive+0xf4>
     9d2:	c8 01       	movw	r24, r16
     9d4:	0e 94 78 02 	call	0x4f0	; 0x4f0 <prvIsQueueEmpty>
     9d8:	88 23       	and	r24, r24
     9da:	79 f0       	breq	.+30     	; 0x9fa <xQueueReceive+0xe8>
     9dc:	6c 81       	ldd	r22, Y+4	; 0x04
     9de:	7d 81       	ldd	r23, Y+5	; 0x05
     9e0:	c6 01       	movw	r24, r12
     9e2:	0e 94 87 08 	call	0x110e	; 0x110e <vTaskPlaceOnEventList>
     9e6:	c8 01       	movw	r24, r16
     9e8:	0e 94 fc 02 	call	0x5f8	; 0x5f8 <prvUnlockQueue>
     9ec:	0e 94 8e 07 	call	0xf1c	; 0xf1c <xTaskResumeAll>
     9f0:	81 11       	cpse	r24, r1
     9f2:	a7 cf       	rjmp	.-178    	; 0x942 <xQueueReceive+0x30>
     9f4:	0e 94 85 01 	call	0x30a	; 0x30a <vPortYield>
     9f8:	a4 cf       	rjmp	.-184    	; 0x942 <xQueueReceive+0x30>
     9fa:	c8 01       	movw	r24, r16
     9fc:	0e 94 fc 02 	call	0x5f8	; 0x5f8 <prvUnlockQueue>
     a00:	0e 94 8e 07 	call	0xf1c	; 0xf1c <xTaskResumeAll>
     a04:	9e cf       	rjmp	.-196    	; 0x942 <xQueueReceive+0x30>
     a06:	c8 01       	movw	r24, r16
     a08:	0e 94 fc 02 	call	0x5f8	; 0x5f8 <prvUnlockQueue>
     a0c:	0e 94 8e 07 	call	0xf1c	; 0xf1c <xTaskResumeAll>
     a10:	c8 01       	movw	r24, r16
     a12:	0e 94 78 02 	call	0x4f0	; 0x4f0 <prvIsQueueEmpty>
     a16:	88 23       	and	r24, r24
     a18:	09 f4       	brne	.+2      	; 0xa1c <xQueueReceive+0x10a>
     a1a:	93 cf       	rjmp	.-218    	; 0x942 <xQueueReceive+0x30>
     a1c:	80 e0       	ldi	r24, 0x00	; 0
     a1e:	25 96       	adiw	r28, 0x05	; 5
     a20:	cd bf       	out	0x3d, r28	; 61
     a22:	de bf       	out	0x3e, r29	; 62
     a24:	df 91       	pop	r29
     a26:	cf 91       	pop	r28
     a28:	1f 91       	pop	r17
     a2a:	0f 91       	pop	r16
     a2c:	ff 90       	pop	r15
     a2e:	ef 90       	pop	r14
     a30:	df 90       	pop	r13
     a32:	cf 90       	pop	r12
     a34:	bf 90       	pop	r11
     a36:	af 90       	pop	r10
     a38:	08 95       	ret

00000a3a <prvResetNextTaskUnblockTime>:
     a3a:	e0 91 8a 30 	lds	r30, 0x308A	; 0x80308a <pxDelayedTaskList>
     a3e:	f0 91 8b 30 	lds	r31, 0x308B	; 0x80308b <pxDelayedTaskList+0x1>
     a42:	80 81       	ld	r24, Z
     a44:	81 11       	cpse	r24, r1
     a46:	07 c0       	rjmp	.+14     	; 0xa56 <prvResetNextTaskUnblockTime+0x1c>
     a48:	8f ef       	ldi	r24, 0xFF	; 255
     a4a:	9f ef       	ldi	r25, 0xFF	; 255
     a4c:	80 93 6b 30 	sts	0x306B, r24	; 0x80306b <xNextTaskUnblockTime>
     a50:	90 93 6c 30 	sts	0x306C, r25	; 0x80306c <xNextTaskUnblockTime+0x1>
     a54:	08 95       	ret
     a56:	e0 91 8a 30 	lds	r30, 0x308A	; 0x80308a <pxDelayedTaskList>
     a5a:	f0 91 8b 30 	lds	r31, 0x308B	; 0x80308b <pxDelayedTaskList+0x1>
     a5e:	05 80       	ldd	r0, Z+5	; 0x05
     a60:	f6 81       	ldd	r31, Z+6	; 0x06
     a62:	e0 2d       	mov	r30, r0
     a64:	06 80       	ldd	r0, Z+6	; 0x06
     a66:	f7 81       	ldd	r31, Z+7	; 0x07
     a68:	e0 2d       	mov	r30, r0
     a6a:	82 81       	ldd	r24, Z+2	; 0x02
     a6c:	93 81       	ldd	r25, Z+3	; 0x03
     a6e:	80 93 6b 30 	sts	0x306B, r24	; 0x80306b <xNextTaskUnblockTime>
     a72:	90 93 6c 30 	sts	0x306C, r25	; 0x80306c <xNextTaskUnblockTime+0x1>
     a76:	08 95       	ret

00000a78 <prvIdleTask>:
     a78:	ce e9       	ldi	r28, 0x9E	; 158
     a7a:	d0 e3       	ldi	r29, 0x30	; 48
     a7c:	88 81       	ld	r24, Y
     a7e:	82 30       	cpi	r24, 0x02	; 2
     a80:	e8 f3       	brcs	.-6      	; 0xa7c <prvIdleTask+0x4>
     a82:	0e 94 85 01 	call	0x30a	; 0x30a <vPortYield>
     a86:	fa cf       	rjmp	.-12     	; 0xa7c <prvIdleTask+0x4>

00000a88 <prvAddCurrentTaskToDelayedList>:
     a88:	ff 92       	push	r15
     a8a:	0f 93       	push	r16
     a8c:	1f 93       	push	r17
     a8e:	cf 93       	push	r28
     a90:	df 93       	push	r29
     a92:	ec 01       	movw	r28, r24
     a94:	f6 2e       	mov	r15, r22
     a96:	00 91 73 30 	lds	r16, 0x3073	; 0x803073 <xTickCount>
     a9a:	10 91 74 30 	lds	r17, 0x3074	; 0x803074 <xTickCount+0x1>
     a9e:	80 91 c2 30 	lds	r24, 0x30C2	; 0x8030c2 <pxCurrentTCB>
     aa2:	90 91 c3 30 	lds	r25, 0x30C3	; 0x8030c3 <pxCurrentTCB+0x1>
     aa6:	02 96       	adiw	r24, 0x02	; 2
     aa8:	0e 94 18 01 	call	0x230	; 0x230 <uxListRemove>
     aac:	cf 3f       	cpi	r28, 0xFF	; 255
     aae:	8f ef       	ldi	r24, 0xFF	; 255
     ab0:	d8 07       	cpc	r29, r24
     ab2:	69 f4       	brne	.+26     	; 0xace <prvAddCurrentTaskToDelayedList+0x46>
     ab4:	ff 20       	and	r15, r15
     ab6:	59 f0       	breq	.+22     	; 0xace <prvAddCurrentTaskToDelayedList+0x46>
     ab8:	60 91 c2 30 	lds	r22, 0x30C2	; 0x8030c2 <pxCurrentTCB>
     abc:	70 91 c3 30 	lds	r23, 0x30C3	; 0x8030c3 <pxCurrentTCB+0x1>
     ac0:	6e 5f       	subi	r22, 0xFE	; 254
     ac2:	7f 4f       	sbci	r23, 0xFF	; 255
     ac4:	86 e7       	ldi	r24, 0x76	; 118
     ac6:	90 e3       	ldi	r25, 0x30	; 48
     ac8:	0e 94 c6 00 	call	0x18c	; 0x18c <vListInsertEnd>
     acc:	2f c0       	rjmp	.+94     	; 0xb2c <prvAddCurrentTaskToDelayedList+0xa4>
     ace:	c0 0f       	add	r28, r16
     ad0:	d1 1f       	adc	r29, r17
     ad2:	e0 91 c2 30 	lds	r30, 0x30C2	; 0x8030c2 <pxCurrentTCB>
     ad6:	f0 91 c3 30 	lds	r31, 0x30C3	; 0x8030c3 <pxCurrentTCB+0x1>
     ada:	c2 83       	std	Z+2, r28	; 0x02
     adc:	d3 83       	std	Z+3, r29	; 0x03
     ade:	c0 17       	cp	r28, r16
     ae0:	d1 07       	cpc	r29, r17
     ae2:	68 f4       	brcc	.+26     	; 0xafe <prvAddCurrentTaskToDelayedList+0x76>
     ae4:	60 91 c2 30 	lds	r22, 0x30C2	; 0x8030c2 <pxCurrentTCB>
     ae8:	70 91 c3 30 	lds	r23, 0x30C3	; 0x8030c3 <pxCurrentTCB+0x1>
     aec:	80 91 88 30 	lds	r24, 0x3088	; 0x803088 <pxOverflowDelayedTaskList>
     af0:	90 91 89 30 	lds	r25, 0x3089	; 0x803089 <pxOverflowDelayedTaskList+0x1>
     af4:	6e 5f       	subi	r22, 0xFE	; 254
     af6:	7f 4f       	sbci	r23, 0xFF	; 255
     af8:	0e 94 e7 00 	call	0x1ce	; 0x1ce <vListInsert>
     afc:	17 c0       	rjmp	.+46     	; 0xb2c <prvAddCurrentTaskToDelayedList+0xa4>
     afe:	60 91 c2 30 	lds	r22, 0x30C2	; 0x8030c2 <pxCurrentTCB>
     b02:	70 91 c3 30 	lds	r23, 0x30C3	; 0x8030c3 <pxCurrentTCB+0x1>
     b06:	80 91 8a 30 	lds	r24, 0x308A	; 0x80308a <pxDelayedTaskList>
     b0a:	90 91 8b 30 	lds	r25, 0x308B	; 0x80308b <pxDelayedTaskList+0x1>
     b0e:	6e 5f       	subi	r22, 0xFE	; 254
     b10:	7f 4f       	sbci	r23, 0xFF	; 255
     b12:	0e 94 e7 00 	call	0x1ce	; 0x1ce <vListInsert>
     b16:	80 91 6b 30 	lds	r24, 0x306B	; 0x80306b <xNextTaskUnblockTime>
     b1a:	90 91 6c 30 	lds	r25, 0x306C	; 0x80306c <xNextTaskUnblockTime+0x1>
     b1e:	c8 17       	cp	r28, r24
     b20:	d9 07       	cpc	r29, r25
     b22:	20 f4       	brcc	.+8      	; 0xb2c <prvAddCurrentTaskToDelayedList+0xa4>
     b24:	c0 93 6b 30 	sts	0x306B, r28	; 0x80306b <xNextTaskUnblockTime>
     b28:	d0 93 6c 30 	sts	0x306C, r29	; 0x80306c <xNextTaskUnblockTime+0x1>
     b2c:	df 91       	pop	r29
     b2e:	cf 91       	pop	r28
     b30:	1f 91       	pop	r17
     b32:	0f 91       	pop	r16
     b34:	ff 90       	pop	r15
     b36:	08 95       	ret

00000b38 <xTaskCreate>:
     b38:	4f 92       	push	r4
     b3a:	5f 92       	push	r5
     b3c:	6f 92       	push	r6
     b3e:	7f 92       	push	r7
     b40:	8f 92       	push	r8
     b42:	9f 92       	push	r9
     b44:	af 92       	push	r10
     b46:	bf 92       	push	r11
     b48:	cf 92       	push	r12
     b4a:	df 92       	push	r13
     b4c:	ef 92       	push	r14
     b4e:	ff 92       	push	r15
     b50:	0f 93       	push	r16
     b52:	cf 93       	push	r28
     b54:	df 93       	push	r29
     b56:	4c 01       	movw	r8, r24
     b58:	6b 01       	movw	r12, r22
     b5a:	5a 01       	movw	r10, r20
     b5c:	29 01       	movw	r4, r18
     b5e:	ca 01       	movw	r24, r20
     b60:	0e 94 42 02 	call	0x484	; 0x484 <pvPortMalloc>
     b64:	3c 01       	movw	r6, r24
     b66:	89 2b       	or	r24, r25
     b68:	09 f4       	brne	.+2      	; 0xb6c <xTaskCreate+0x34>
     b6a:	df c0       	rjmp	.+446    	; 0xd2a <xTaskCreate+0x1f2>
     b6c:	88 e2       	ldi	r24, 0x28	; 40
     b6e:	90 e0       	ldi	r25, 0x00	; 0
     b70:	0e 94 42 02 	call	0x484	; 0x484 <pvPortMalloc>
     b74:	ec 01       	movw	r28, r24
     b76:	89 2b       	or	r24, r25
     b78:	71 f0       	breq	.+28     	; 0xb96 <xTaskCreate+0x5e>
     b7a:	6f 8a       	std	Y+23, r6	; 0x17
     b7c:	78 8e       	std	Y+24, r7	; 0x18
     b7e:	81 e0       	ldi	r24, 0x01	; 1
     b80:	a8 1a       	sub	r10, r24
     b82:	b1 08       	sbc	r11, r1
     b84:	6a 0c       	add	r6, r10
     b86:	7b 1c       	adc	r7, r11
     b88:	d6 01       	movw	r26, r12
     b8a:	8c 91       	ld	r24, X
     b8c:	89 8f       	std	Y+25, r24	; 0x19
     b8e:	8c 91       	ld	r24, X
     b90:	81 11       	cpse	r24, r1
     b92:	05 c0       	rjmp	.+10     	; 0xb9e <xTaskCreate+0x66>
     b94:	18 c0       	rjmp	.+48     	; 0xbc6 <xTaskCreate+0x8e>
     b96:	c3 01       	movw	r24, r6
     b98:	0e 94 77 02 	call	0x4ee	; 0x4ee <vPortFree>
     b9c:	c6 c0       	rjmp	.+396    	; 0xd2a <xTaskCreate+0x1f2>
     b9e:	ae 01       	movw	r20, r28
     ba0:	46 5e       	subi	r20, 0xE6	; 230
     ba2:	5f 4f       	sbci	r21, 0xFF	; 255
     ba4:	f6 01       	movw	r30, r12
     ba6:	31 96       	adiw	r30, 0x01	; 1
     ba8:	b8 e0       	ldi	r27, 0x08	; 8
     baa:	cb 0e       	add	r12, r27
     bac:	d1 1c       	adc	r13, r1
     bae:	cf 01       	movw	r24, r30
     bb0:	21 91       	ld	r18, Z+
     bb2:	da 01       	movw	r26, r20
     bb4:	2d 93       	st	X+, r18
     bb6:	ad 01       	movw	r20, r26
     bb8:	dc 01       	movw	r26, r24
     bba:	8c 91       	ld	r24, X
     bbc:	88 23       	and	r24, r24
     bbe:	19 f0       	breq	.+6      	; 0xbc6 <xTaskCreate+0x8e>
     bc0:	ec 15       	cp	r30, r12
     bc2:	fd 05       	cpc	r31, r13
     bc4:	a1 f7       	brne	.-24     	; 0xbae <xTaskCreate+0x76>
     bc6:	18 a2       	std	Y+32, r1	; 0x20
     bc8:	04 30       	cpi	r16, 0x04	; 4
     bca:	08 f0       	brcs	.+2      	; 0xbce <xTaskCreate+0x96>
     bcc:	03 e0       	ldi	r16, 0x03	; 3
     bce:	0e 8b       	std	Y+22, r16	; 0x16
     bd0:	09 a3       	std	Y+33, r16	; 0x21
     bd2:	1a a2       	std	Y+34, r1	; 0x22
     bd4:	6e 01       	movw	r12, r28
     bd6:	b2 e0       	ldi	r27, 0x02	; 2
     bd8:	cb 0e       	add	r12, r27
     bda:	d1 1c       	adc	r13, r1
     bdc:	c6 01       	movw	r24, r12
     bde:	0e 94 c2 00 	call	0x184	; 0x184 <vListInitialiseItem>
     be2:	ce 01       	movw	r24, r28
     be4:	0c 96       	adiw	r24, 0x0c	; 12
     be6:	0e 94 c2 00 	call	0x184	; 0x184 <vListInitialiseItem>
     bea:	c8 87       	std	Y+8, r28	; 0x08
     bec:	d9 87       	std	Y+9, r29	; 0x09
     bee:	84 e0       	ldi	r24, 0x04	; 4
     bf0:	90 e0       	ldi	r25, 0x00	; 0
     bf2:	80 1b       	sub	r24, r16
     bf4:	91 09       	sbc	r25, r1
     bf6:	8c 87       	std	Y+12, r24	; 0x0c
     bf8:	9d 87       	std	Y+13, r25	; 0x0d
     bfa:	ca 8b       	std	Y+18, r28	; 0x12
     bfc:	db 8b       	std	Y+19, r29	; 0x13
     bfe:	1b a2       	std	Y+35, r1	; 0x23
     c00:	1c a2       	std	Y+36, r1	; 0x24
     c02:	1d a2       	std	Y+37, r1	; 0x25
     c04:	1e a2       	std	Y+38, r1	; 0x26
     c06:	1f a2       	std	Y+39, r1	; 0x27
     c08:	a2 01       	movw	r20, r4
     c0a:	b4 01       	movw	r22, r8
     c0c:	c3 01       	movw	r24, r6
     c0e:	0e 94 3f 01 	call	0x27e	; 0x27e <pxPortInitialiseStack>
     c12:	88 83       	st	Y, r24
     c14:	99 83       	std	Y+1, r25	; 0x01
     c16:	e1 14       	cp	r14, r1
     c18:	f1 04       	cpc	r15, r1
     c1a:	19 f0       	breq	.+6      	; 0xc22 <xTaskCreate+0xea>
     c1c:	f7 01       	movw	r30, r14
     c1e:	c0 83       	st	Z, r28
     c20:	d1 83       	std	Z+1, r29	; 0x01
     c22:	0f b6       	in	r0, 0x3f	; 63
     c24:	f8 94       	cli
     c26:	0f 92       	push	r0
     c28:	80 91 75 30 	lds	r24, 0x3075	; 0x803075 <uxCurrentNumberOfTasks>
     c2c:	8f 5f       	subi	r24, 0xFF	; 255
     c2e:	80 93 75 30 	sts	0x3075, r24	; 0x803075 <uxCurrentNumberOfTasks>
     c32:	80 91 c2 30 	lds	r24, 0x30C2	; 0x8030c2 <pxCurrentTCB>
     c36:	90 91 c3 30 	lds	r25, 0x30C3	; 0x8030c3 <pxCurrentTCB+0x1>
     c3a:	89 2b       	or	r24, r25
     c3c:	a9 f5       	brne	.+106    	; 0xca8 <xTaskCreate+0x170>
     c3e:	c0 93 c2 30 	sts	0x30C2, r28	; 0x8030c2 <pxCurrentTCB>
     c42:	d0 93 c3 30 	sts	0x30C3, r29	; 0x8030c3 <pxCurrentTCB+0x1>
     c46:	80 91 75 30 	lds	r24, 0x3075	; 0x803075 <uxCurrentNumberOfTasks>
     c4a:	81 30       	cpi	r24, 0x01	; 1
     c4c:	e9 f5       	brne	.+122    	; 0xcc8 <xTaskCreate+0x190>
     c4e:	8e e9       	ldi	r24, 0x9E	; 158
     c50:	90 e3       	ldi	r25, 0x30	; 48
     c52:	0e 94 b4 00 	call	0x168	; 0x168 <vListInitialise>
     c56:	87 ea       	ldi	r24, 0xA7	; 167
     c58:	90 e3       	ldi	r25, 0x30	; 48
     c5a:	0e 94 b4 00 	call	0x168	; 0x168 <vListInitialise>
     c5e:	80 eb       	ldi	r24, 0xB0	; 176
     c60:	90 e3       	ldi	r25, 0x30	; 48
     c62:	0e 94 b4 00 	call	0x168	; 0x168 <vListInitialise>
     c66:	89 eb       	ldi	r24, 0xB9	; 185
     c68:	90 e3       	ldi	r25, 0x30	; 48
     c6a:	0e 94 b4 00 	call	0x168	; 0x168 <vListInitialise>
     c6e:	85 e9       	ldi	r24, 0x95	; 149
     c70:	90 e3       	ldi	r25, 0x30	; 48
     c72:	0e 94 b4 00 	call	0x168	; 0x168 <vListInitialise>
     c76:	8c e8       	ldi	r24, 0x8C	; 140
     c78:	90 e3       	ldi	r25, 0x30	; 48
     c7a:	0e 94 b4 00 	call	0x168	; 0x168 <vListInitialise>
     c7e:	8f e7       	ldi	r24, 0x7F	; 127
     c80:	90 e3       	ldi	r25, 0x30	; 48
     c82:	0e 94 b4 00 	call	0x168	; 0x168 <vListInitialise>
     c86:	86 e7       	ldi	r24, 0x76	; 118
     c88:	90 e3       	ldi	r25, 0x30	; 48
     c8a:	0e 94 b4 00 	call	0x168	; 0x168 <vListInitialise>
     c8e:	85 e9       	ldi	r24, 0x95	; 149
     c90:	90 e3       	ldi	r25, 0x30	; 48
     c92:	80 93 8a 30 	sts	0x308A, r24	; 0x80308a <pxDelayedTaskList>
     c96:	90 93 8b 30 	sts	0x308B, r25	; 0x80308b <pxDelayedTaskList+0x1>
     c9a:	8c e8       	ldi	r24, 0x8C	; 140
     c9c:	90 e3       	ldi	r25, 0x30	; 48
     c9e:	80 93 88 30 	sts	0x3088, r24	; 0x803088 <pxOverflowDelayedTaskList>
     ca2:	90 93 89 30 	sts	0x3089, r25	; 0x803089 <pxOverflowDelayedTaskList+0x1>
     ca6:	10 c0       	rjmp	.+32     	; 0xcc8 <xTaskCreate+0x190>
     ca8:	80 91 71 30 	lds	r24, 0x3071	; 0x803071 <xSchedulerRunning>
     cac:	81 11       	cpse	r24, r1
     cae:	0c c0       	rjmp	.+24     	; 0xcc8 <xTaskCreate+0x190>
     cb0:	e0 91 c2 30 	lds	r30, 0x30C2	; 0x8030c2 <pxCurrentTCB>
     cb4:	f0 91 c3 30 	lds	r31, 0x30C3	; 0x8030c3 <pxCurrentTCB+0x1>
     cb8:	96 89       	ldd	r25, Z+22	; 0x16
     cba:	8e 89       	ldd	r24, Y+22	; 0x16
     cbc:	89 17       	cp	r24, r25
     cbe:	20 f0       	brcs	.+8      	; 0xcc8 <xTaskCreate+0x190>
     cc0:	c0 93 c2 30 	sts	0x30C2, r28	; 0x8030c2 <pxCurrentTCB>
     cc4:	d0 93 c3 30 	sts	0x30C3, r29	; 0x8030c3 <pxCurrentTCB+0x1>
     cc8:	80 91 6d 30 	lds	r24, 0x306D	; 0x80306d <uxTaskNumber>
     ccc:	8f 5f       	subi	r24, 0xFF	; 255
     cce:	80 93 6d 30 	sts	0x306D, r24	; 0x80306d <uxTaskNumber>
     cd2:	8e 89       	ldd	r24, Y+22	; 0x16
     cd4:	90 91 72 30 	lds	r25, 0x3072	; 0x803072 <uxTopReadyPriority>
     cd8:	98 17       	cp	r25, r24
     cda:	10 f4       	brcc	.+4      	; 0xce0 <xTaskCreate+0x1a8>
     cdc:	80 93 72 30 	sts	0x3072, r24	; 0x803072 <uxTopReadyPriority>
     ce0:	90 e0       	ldi	r25, 0x00	; 0
     ce2:	9c 01       	movw	r18, r24
     ce4:	22 0f       	add	r18, r18
     ce6:	33 1f       	adc	r19, r19
     ce8:	22 0f       	add	r18, r18
     cea:	33 1f       	adc	r19, r19
     cec:	22 0f       	add	r18, r18
     cee:	33 1f       	adc	r19, r19
     cf0:	82 0f       	add	r24, r18
     cf2:	93 1f       	adc	r25, r19
     cf4:	b6 01       	movw	r22, r12
     cf6:	82 56       	subi	r24, 0x62	; 98
     cf8:	9f 4c       	sbci	r25, 0xCF	; 207
     cfa:	0e 94 c6 00 	call	0x18c	; 0x18c <vListInsertEnd>
     cfe:	0f 90       	pop	r0
     d00:	0f be       	out	0x3f, r0	; 63
     d02:	80 91 71 30 	lds	r24, 0x3071	; 0x803071 <xSchedulerRunning>
     d06:	88 23       	and	r24, r24
     d08:	61 f0       	breq	.+24     	; 0xd22 <xTaskCreate+0x1ea>
     d0a:	e0 91 c2 30 	lds	r30, 0x30C2	; 0x8030c2 <pxCurrentTCB>
     d0e:	f0 91 c3 30 	lds	r31, 0x30C3	; 0x8030c3 <pxCurrentTCB+0x1>
     d12:	96 89       	ldd	r25, Z+22	; 0x16
     d14:	8e 89       	ldd	r24, Y+22	; 0x16
     d16:	98 17       	cp	r25, r24
     d18:	30 f4       	brcc	.+12     	; 0xd26 <xTaskCreate+0x1ee>
     d1a:	0e 94 85 01 	call	0x30a	; 0x30a <vPortYield>
     d1e:	81 e0       	ldi	r24, 0x01	; 1
     d20:	05 c0       	rjmp	.+10     	; 0xd2c <xTaskCreate+0x1f4>
     d22:	81 e0       	ldi	r24, 0x01	; 1
     d24:	03 c0       	rjmp	.+6      	; 0xd2c <xTaskCreate+0x1f4>
     d26:	81 e0       	ldi	r24, 0x01	; 1
     d28:	01 c0       	rjmp	.+2      	; 0xd2c <xTaskCreate+0x1f4>
     d2a:	8f ef       	ldi	r24, 0xFF	; 255
     d2c:	df 91       	pop	r29
     d2e:	cf 91       	pop	r28
     d30:	0f 91       	pop	r16
     d32:	ff 90       	pop	r15
     d34:	ef 90       	pop	r14
     d36:	df 90       	pop	r13
     d38:	cf 90       	pop	r12
     d3a:	bf 90       	pop	r11
     d3c:	af 90       	pop	r10
     d3e:	9f 90       	pop	r9
     d40:	8f 90       	pop	r8
     d42:	7f 90       	pop	r7
     d44:	6f 90       	pop	r6
     d46:	5f 90       	pop	r5
     d48:	4f 90       	pop	r4
     d4a:	08 95       	ret

00000d4c <vTaskStartScheduler>:
     d4c:	ef 92       	push	r14
     d4e:	ff 92       	push	r15
     d50:	0f 93       	push	r16
     d52:	0f 2e       	mov	r0, r31
     d54:	f9 e6       	ldi	r31, 0x69	; 105
     d56:	ef 2e       	mov	r14, r31
     d58:	f0 e3       	ldi	r31, 0x30	; 48
     d5a:	ff 2e       	mov	r15, r31
     d5c:	f0 2d       	mov	r31, r0
     d5e:	00 e0       	ldi	r16, 0x00	; 0
     d60:	20 e0       	ldi	r18, 0x00	; 0
     d62:	30 e0       	ldi	r19, 0x00	; 0
     d64:	43 e7       	ldi	r20, 0x73	; 115
     d66:	50 e0       	ldi	r21, 0x00	; 0
     d68:	66 ee       	ldi	r22, 0xE6	; 230
     d6a:	7c e5       	ldi	r23, 0x5C	; 92
     d6c:	8c e3       	ldi	r24, 0x3C	; 60
     d6e:	95 e0       	ldi	r25, 0x05	; 5
     d70:	0e 94 9c 05 	call	0xb38	; 0xb38 <xTaskCreate>
     d74:	81 30       	cpi	r24, 0x01	; 1
     d76:	81 f4       	brne	.+32     	; 0xd98 <vTaskStartScheduler+0x4c>
     d78:	f8 94       	cli
     d7a:	8f ef       	ldi	r24, 0xFF	; 255
     d7c:	9f ef       	ldi	r25, 0xFF	; 255
     d7e:	80 93 6b 30 	sts	0x306B, r24	; 0x80306b <xNextTaskUnblockTime>
     d82:	90 93 6c 30 	sts	0x306C, r25	; 0x80306c <xNextTaskUnblockTime+0x1>
     d86:	81 e0       	ldi	r24, 0x01	; 1
     d88:	80 93 71 30 	sts	0x3071, r24	; 0x803071 <xSchedulerRunning>
     d8c:	10 92 73 30 	sts	0x3073, r1	; 0x803073 <xTickCount>
     d90:	10 92 74 30 	sts	0x3074, r1	; 0x803074 <xTickCount+0x1>
     d94:	0e 94 50 01 	call	0x2a0	; 0x2a0 <xPortStartScheduler>
     d98:	0f 91       	pop	r16
     d9a:	ff 90       	pop	r15
     d9c:	ef 90       	pop	r14
     d9e:	08 95       	ret

00000da0 <vTaskSuspendAll>:
     da0:	80 91 68 30 	lds	r24, 0x3068	; 0x803068 <uxSchedulerSuspended>
     da4:	8f 5f       	subi	r24, 0xFF	; 255
     da6:	80 93 68 30 	sts	0x3068, r24	; 0x803068 <uxSchedulerSuspended>
     daa:	08 95       	ret

00000dac <xTaskIncrementTick>:
     dac:	df 92       	push	r13
     dae:	ef 92       	push	r14
     db0:	ff 92       	push	r15
     db2:	0f 93       	push	r16
     db4:	1f 93       	push	r17
     db6:	cf 93       	push	r28
     db8:	df 93       	push	r29
     dba:	80 91 68 30 	lds	r24, 0x3068	; 0x803068 <uxSchedulerSuspended>
     dbe:	81 11       	cpse	r24, r1
     dc0:	98 c0       	rjmp	.+304    	; 0xef2 <xTaskIncrementTick+0x146>
     dc2:	e0 90 73 30 	lds	r14, 0x3073	; 0x803073 <xTickCount>
     dc6:	f0 90 74 30 	lds	r15, 0x3074	; 0x803074 <xTickCount+0x1>
     dca:	8f ef       	ldi	r24, 0xFF	; 255
     dcc:	e8 1a       	sub	r14, r24
     dce:	f8 0a       	sbc	r15, r24
     dd0:	e0 92 73 30 	sts	0x3073, r14	; 0x803073 <xTickCount>
     dd4:	f0 92 74 30 	sts	0x3074, r15	; 0x803074 <xTickCount+0x1>
     dd8:	e1 14       	cp	r14, r1
     dda:	f1 04       	cpc	r15, r1
     ddc:	b9 f4       	brne	.+46     	; 0xe0c <xTaskIncrementTick+0x60>
     dde:	80 91 8a 30 	lds	r24, 0x308A	; 0x80308a <pxDelayedTaskList>
     de2:	90 91 8b 30 	lds	r25, 0x308B	; 0x80308b <pxDelayedTaskList+0x1>
     de6:	20 91 88 30 	lds	r18, 0x3088	; 0x803088 <pxOverflowDelayedTaskList>
     dea:	30 91 89 30 	lds	r19, 0x3089	; 0x803089 <pxOverflowDelayedTaskList+0x1>
     dee:	20 93 8a 30 	sts	0x308A, r18	; 0x80308a <pxDelayedTaskList>
     df2:	30 93 8b 30 	sts	0x308B, r19	; 0x80308b <pxDelayedTaskList+0x1>
     df6:	80 93 88 30 	sts	0x3088, r24	; 0x803088 <pxOverflowDelayedTaskList>
     dfa:	90 93 89 30 	sts	0x3089, r25	; 0x803089 <pxOverflowDelayedTaskList+0x1>
     dfe:	80 91 6e 30 	lds	r24, 0x306E	; 0x80306e <xNumOfOverflows>
     e02:	8f 5f       	subi	r24, 0xFF	; 255
     e04:	80 93 6e 30 	sts	0x306E, r24	; 0x80306e <xNumOfOverflows>
     e08:	0e 94 1d 05 	call	0xa3a	; 0xa3a <prvResetNextTaskUnblockTime>
     e0c:	80 91 6b 30 	lds	r24, 0x306B	; 0x80306b <xNextTaskUnblockTime>
     e10:	90 91 6c 30 	lds	r25, 0x306C	; 0x80306c <xNextTaskUnblockTime+0x1>
     e14:	e8 16       	cp	r14, r24
     e16:	f9 06       	cpc	r15, r25
     e18:	10 f4       	brcc	.+4      	; 0xe1e <xTaskIncrementTick+0x72>
     e1a:	d1 2c       	mov	r13, r1
     e1c:	52 c0       	rjmp	.+164    	; 0xec2 <xTaskIncrementTick+0x116>
     e1e:	d1 2c       	mov	r13, r1
     e20:	e0 91 8a 30 	lds	r30, 0x308A	; 0x80308a <pxDelayedTaskList>
     e24:	f0 91 8b 30 	lds	r31, 0x308B	; 0x80308b <pxDelayedTaskList+0x1>
     e28:	80 81       	ld	r24, Z
     e2a:	81 11       	cpse	r24, r1
     e2c:	07 c0       	rjmp	.+14     	; 0xe3c <xTaskIncrementTick+0x90>
     e2e:	8f ef       	ldi	r24, 0xFF	; 255
     e30:	9f ef       	ldi	r25, 0xFF	; 255
     e32:	80 93 6b 30 	sts	0x306B, r24	; 0x80306b <xNextTaskUnblockTime>
     e36:	90 93 6c 30 	sts	0x306C, r25	; 0x80306c <xNextTaskUnblockTime+0x1>
     e3a:	43 c0       	rjmp	.+134    	; 0xec2 <xTaskIncrementTick+0x116>
     e3c:	e0 91 8a 30 	lds	r30, 0x308A	; 0x80308a <pxDelayedTaskList>
     e40:	f0 91 8b 30 	lds	r31, 0x308B	; 0x80308b <pxDelayedTaskList+0x1>
     e44:	05 80       	ldd	r0, Z+5	; 0x05
     e46:	f6 81       	ldd	r31, Z+6	; 0x06
     e48:	e0 2d       	mov	r30, r0
     e4a:	c6 81       	ldd	r28, Z+6	; 0x06
     e4c:	d7 81       	ldd	r29, Z+7	; 0x07
     e4e:	8a 81       	ldd	r24, Y+2	; 0x02
     e50:	9b 81       	ldd	r25, Y+3	; 0x03
     e52:	e8 16       	cp	r14, r24
     e54:	f9 06       	cpc	r15, r25
     e56:	28 f4       	brcc	.+10     	; 0xe62 <xTaskIncrementTick+0xb6>
     e58:	80 93 6b 30 	sts	0x306B, r24	; 0x80306b <xNextTaskUnblockTime>
     e5c:	90 93 6c 30 	sts	0x306C, r25	; 0x80306c <xNextTaskUnblockTime+0x1>
     e60:	30 c0       	rjmp	.+96     	; 0xec2 <xTaskIncrementTick+0x116>
     e62:	8e 01       	movw	r16, r28
     e64:	0e 5f       	subi	r16, 0xFE	; 254
     e66:	1f 4f       	sbci	r17, 0xFF	; 255
     e68:	c8 01       	movw	r24, r16
     e6a:	0e 94 18 01 	call	0x230	; 0x230 <uxListRemove>
     e6e:	8c 89       	ldd	r24, Y+20	; 0x14
     e70:	9d 89       	ldd	r25, Y+21	; 0x15
     e72:	89 2b       	or	r24, r25
     e74:	21 f0       	breq	.+8      	; 0xe7e <xTaskIncrementTick+0xd2>
     e76:	ce 01       	movw	r24, r28
     e78:	0c 96       	adiw	r24, 0x0c	; 12
     e7a:	0e 94 18 01 	call	0x230	; 0x230 <uxListRemove>
     e7e:	8e 89       	ldd	r24, Y+22	; 0x16
     e80:	90 91 72 30 	lds	r25, 0x3072	; 0x803072 <uxTopReadyPriority>
     e84:	98 17       	cp	r25, r24
     e86:	10 f4       	brcc	.+4      	; 0xe8c <xTaskIncrementTick+0xe0>
     e88:	80 93 72 30 	sts	0x3072, r24	; 0x803072 <uxTopReadyPriority>
     e8c:	90 e0       	ldi	r25, 0x00	; 0
     e8e:	9c 01       	movw	r18, r24
     e90:	22 0f       	add	r18, r18
     e92:	33 1f       	adc	r19, r19
     e94:	22 0f       	add	r18, r18
     e96:	33 1f       	adc	r19, r19
     e98:	22 0f       	add	r18, r18
     e9a:	33 1f       	adc	r19, r19
     e9c:	82 0f       	add	r24, r18
     e9e:	93 1f       	adc	r25, r19
     ea0:	b8 01       	movw	r22, r16
     ea2:	82 56       	subi	r24, 0x62	; 98
     ea4:	9f 4c       	sbci	r25, 0xCF	; 207
     ea6:	0e 94 c6 00 	call	0x18c	; 0x18c <vListInsertEnd>
     eaa:	e0 91 c2 30 	lds	r30, 0x30C2	; 0x8030c2 <pxCurrentTCB>
     eae:	f0 91 c3 30 	lds	r31, 0x30C3	; 0x8030c3 <pxCurrentTCB+0x1>
     eb2:	9e 89       	ldd	r25, Y+22	; 0x16
     eb4:	86 89       	ldd	r24, Z+22	; 0x16
     eb6:	98 17       	cp	r25, r24
     eb8:	08 f4       	brcc	.+2      	; 0xebc <xTaskIncrementTick+0x110>
     eba:	b2 cf       	rjmp	.-156    	; 0xe20 <xTaskIncrementTick+0x74>
     ebc:	dd 24       	eor	r13, r13
     ebe:	d3 94       	inc	r13
     ec0:	af cf       	rjmp	.-162    	; 0xe20 <xTaskIncrementTick+0x74>
     ec2:	e0 91 c2 30 	lds	r30, 0x30C2	; 0x8030c2 <pxCurrentTCB>
     ec6:	f0 91 c3 30 	lds	r31, 0x30C3	; 0x8030c3 <pxCurrentTCB+0x1>
     eca:	86 89       	ldd	r24, Z+22	; 0x16
     ecc:	90 e0       	ldi	r25, 0x00	; 0
     ece:	fc 01       	movw	r30, r24
     ed0:	ee 0f       	add	r30, r30
     ed2:	ff 1f       	adc	r31, r31
     ed4:	ee 0f       	add	r30, r30
     ed6:	ff 1f       	adc	r31, r31
     ed8:	ee 0f       	add	r30, r30
     eda:	ff 1f       	adc	r31, r31
     edc:	8e 0f       	add	r24, r30
     ede:	9f 1f       	adc	r25, r31
     ee0:	fc 01       	movw	r30, r24
     ee2:	e2 56       	subi	r30, 0x62	; 98
     ee4:	ff 4c       	sbci	r31, 0xCF	; 207
     ee6:	80 81       	ld	r24, Z
     ee8:	82 30       	cpi	r24, 0x02	; 2
     eea:	48 f0       	brcs	.+18     	; 0xefe <xTaskIncrementTick+0x152>
     eec:	dd 24       	eor	r13, r13
     eee:	d3 94       	inc	r13
     ef0:	06 c0       	rjmp	.+12     	; 0xefe <xTaskIncrementTick+0x152>
     ef2:	80 91 70 30 	lds	r24, 0x3070	; 0x803070 <uxPendedTicks>
     ef6:	8f 5f       	subi	r24, 0xFF	; 255
     ef8:	80 93 70 30 	sts	0x3070, r24	; 0x803070 <uxPendedTicks>
     efc:	d1 2c       	mov	r13, r1
     efe:	80 91 6f 30 	lds	r24, 0x306F	; 0x80306f <xYieldPending>
     f02:	88 23       	and	r24, r24
     f04:	11 f0       	breq	.+4      	; 0xf0a <xTaskIncrementTick+0x15e>
     f06:	dd 24       	eor	r13, r13
     f08:	d3 94       	inc	r13
     f0a:	8d 2d       	mov	r24, r13
     f0c:	df 91       	pop	r29
     f0e:	cf 91       	pop	r28
     f10:	1f 91       	pop	r17
     f12:	0f 91       	pop	r16
     f14:	ff 90       	pop	r15
     f16:	ef 90       	pop	r14
     f18:	df 90       	pop	r13
     f1a:	08 95       	ret

00000f1c <xTaskResumeAll>:
     f1c:	df 92       	push	r13
     f1e:	ef 92       	push	r14
     f20:	ff 92       	push	r15
     f22:	0f 93       	push	r16
     f24:	1f 93       	push	r17
     f26:	cf 93       	push	r28
     f28:	df 93       	push	r29
     f2a:	0f b6       	in	r0, 0x3f	; 63
     f2c:	f8 94       	cli
     f2e:	0f 92       	push	r0
     f30:	80 91 68 30 	lds	r24, 0x3068	; 0x803068 <uxSchedulerSuspended>
     f34:	81 50       	subi	r24, 0x01	; 1
     f36:	80 93 68 30 	sts	0x3068, r24	; 0x803068 <uxSchedulerSuspended>
     f3a:	80 91 68 30 	lds	r24, 0x3068	; 0x803068 <uxSchedulerSuspended>
     f3e:	81 11       	cpse	r24, r1
     f40:	5f c0       	rjmp	.+190    	; 0x1000 <xTaskResumeAll+0xe4>
     f42:	80 91 75 30 	lds	r24, 0x3075	; 0x803075 <uxCurrentNumberOfTasks>
     f46:	81 11       	cpse	r24, r1
     f48:	33 c0       	rjmp	.+102    	; 0xfb0 <xTaskResumeAll+0x94>
     f4a:	5d c0       	rjmp	.+186    	; 0x1006 <xTaskResumeAll+0xea>
     f4c:	d7 01       	movw	r26, r14
     f4e:	15 96       	adiw	r26, 0x05	; 5
     f50:	ed 91       	ld	r30, X+
     f52:	fc 91       	ld	r31, X
     f54:	16 97       	sbiw	r26, 0x06	; 6
     f56:	c6 81       	ldd	r28, Z+6	; 0x06
     f58:	d7 81       	ldd	r29, Z+7	; 0x07
     f5a:	ce 01       	movw	r24, r28
     f5c:	0c 96       	adiw	r24, 0x0c	; 12
     f5e:	0e 94 18 01 	call	0x230	; 0x230 <uxListRemove>
     f62:	8e 01       	movw	r16, r28
     f64:	0e 5f       	subi	r16, 0xFE	; 254
     f66:	1f 4f       	sbci	r17, 0xFF	; 255
     f68:	c8 01       	movw	r24, r16
     f6a:	0e 94 18 01 	call	0x230	; 0x230 <uxListRemove>
     f6e:	8e 89       	ldd	r24, Y+22	; 0x16
     f70:	90 91 72 30 	lds	r25, 0x3072	; 0x803072 <uxTopReadyPriority>
     f74:	98 17       	cp	r25, r24
     f76:	10 f4       	brcc	.+4      	; 0xf7c <xTaskResumeAll+0x60>
     f78:	80 93 72 30 	sts	0x3072, r24	; 0x803072 <uxTopReadyPriority>
     f7c:	90 e0       	ldi	r25, 0x00	; 0
     f7e:	9c 01       	movw	r18, r24
     f80:	22 0f       	add	r18, r18
     f82:	33 1f       	adc	r19, r19
     f84:	22 0f       	add	r18, r18
     f86:	33 1f       	adc	r19, r19
     f88:	22 0f       	add	r18, r18
     f8a:	33 1f       	adc	r19, r19
     f8c:	82 0f       	add	r24, r18
     f8e:	93 1f       	adc	r25, r19
     f90:	b8 01       	movw	r22, r16
     f92:	82 56       	subi	r24, 0x62	; 98
     f94:	9f 4c       	sbci	r25, 0xCF	; 207
     f96:	0e 94 c6 00 	call	0x18c	; 0x18c <vListInsertEnd>
     f9a:	e0 91 c2 30 	lds	r30, 0x30C2	; 0x8030c2 <pxCurrentTCB>
     f9e:	f0 91 c3 30 	lds	r31, 0x30C3	; 0x8030c3 <pxCurrentTCB+0x1>
     fa2:	9e 89       	ldd	r25, Y+22	; 0x16
     fa4:	86 89       	ldd	r24, Z+22	; 0x16
     fa6:	98 17       	cp	r25, r24
     fa8:	68 f0       	brcs	.+26     	; 0xfc4 <xTaskResumeAll+0xa8>
     faa:	d0 92 6f 30 	sts	0x306F, r13	; 0x80306f <xYieldPending>
     fae:	0a c0       	rjmp	.+20     	; 0xfc4 <xTaskResumeAll+0xa8>
     fb0:	c0 e0       	ldi	r28, 0x00	; 0
     fb2:	d0 e0       	ldi	r29, 0x00	; 0
     fb4:	0f 2e       	mov	r0, r31
     fb6:	ff e7       	ldi	r31, 0x7F	; 127
     fb8:	ef 2e       	mov	r14, r31
     fba:	f0 e3       	ldi	r31, 0x30	; 48
     fbc:	ff 2e       	mov	r15, r31
     fbe:	f0 2d       	mov	r31, r0
     fc0:	dd 24       	eor	r13, r13
     fc2:	d3 94       	inc	r13
     fc4:	f7 01       	movw	r30, r14
     fc6:	80 81       	ld	r24, Z
     fc8:	81 11       	cpse	r24, r1
     fca:	c0 cf       	rjmp	.-128    	; 0xf4c <xTaskResumeAll+0x30>
     fcc:	cd 2b       	or	r28, r29
     fce:	11 f0       	breq	.+4      	; 0xfd4 <xTaskResumeAll+0xb8>
     fd0:	0e 94 1d 05 	call	0xa3a	; 0xa3a <prvResetNextTaskUnblockTime>
     fd4:	c0 91 70 30 	lds	r28, 0x3070	; 0x803070 <uxPendedTicks>
     fd8:	cc 23       	and	r28, r28
     fda:	51 f0       	breq	.+20     	; 0xff0 <xTaskResumeAll+0xd4>
     fdc:	d1 e0       	ldi	r29, 0x01	; 1
     fde:	0e 94 d6 06 	call	0xdac	; 0xdac <xTaskIncrementTick>
     fe2:	81 11       	cpse	r24, r1
     fe4:	d0 93 6f 30 	sts	0x306F, r29	; 0x80306f <xYieldPending>
     fe8:	c1 50       	subi	r28, 0x01	; 1
     fea:	c9 f7       	brne	.-14     	; 0xfde <xTaskResumeAll+0xc2>
     fec:	10 92 70 30 	sts	0x3070, r1	; 0x803070 <uxPendedTicks>
     ff0:	80 91 6f 30 	lds	r24, 0x306F	; 0x80306f <xYieldPending>
     ff4:	88 23       	and	r24, r24
     ff6:	31 f0       	breq	.+12     	; 0x1004 <xTaskResumeAll+0xe8>
     ff8:	0e 94 85 01 	call	0x30a	; 0x30a <vPortYield>
     ffc:	81 e0       	ldi	r24, 0x01	; 1
     ffe:	03 c0       	rjmp	.+6      	; 0x1006 <xTaskResumeAll+0xea>
    1000:	80 e0       	ldi	r24, 0x00	; 0
    1002:	01 c0       	rjmp	.+2      	; 0x1006 <xTaskResumeAll+0xea>
    1004:	80 e0       	ldi	r24, 0x00	; 0
    1006:	0f 90       	pop	r0
    1008:	0f be       	out	0x3f, r0	; 63
    100a:	df 91       	pop	r29
    100c:	cf 91       	pop	r28
    100e:	1f 91       	pop	r17
    1010:	0f 91       	pop	r16
    1012:	ff 90       	pop	r15
    1014:	ef 90       	pop	r14
    1016:	df 90       	pop	r13
    1018:	08 95       	ret

0000101a <vTaskDelay>:
    101a:	cf 93       	push	r28
    101c:	df 93       	push	r29
    101e:	ec 01       	movw	r28, r24
    1020:	89 2b       	or	r24, r25
    1022:	51 f0       	breq	.+20     	; 0x1038 <vTaskDelay+0x1e>
    1024:	0e 94 d0 06 	call	0xda0	; 0xda0 <vTaskSuspendAll>
    1028:	60 e0       	ldi	r22, 0x00	; 0
    102a:	ce 01       	movw	r24, r28
    102c:	0e 94 44 05 	call	0xa88	; 0xa88 <prvAddCurrentTaskToDelayedList>
    1030:	0e 94 8e 07 	call	0xf1c	; 0xf1c <xTaskResumeAll>
    1034:	81 11       	cpse	r24, r1
    1036:	02 c0       	rjmp	.+4      	; 0x103c <vTaskDelay+0x22>
    1038:	0e 94 85 01 	call	0x30a	; 0x30a <vPortYield>
    103c:	df 91       	pop	r29
    103e:	cf 91       	pop	r28
    1040:	08 95       	ret

00001042 <vTaskSwitchContext>:
    1042:	80 91 68 30 	lds	r24, 0x3068	; 0x803068 <uxSchedulerSuspended>
    1046:	88 23       	and	r24, r24
    1048:	21 f0       	breq	.+8      	; 0x1052 <vTaskSwitchContext+0x10>
    104a:	81 e0       	ldi	r24, 0x01	; 1
    104c:	80 93 6f 30 	sts	0x306F, r24	; 0x80306f <xYieldPending>
    1050:	08 95       	ret
    1052:	10 92 6f 30 	sts	0x306F, r1	; 0x80306f <xYieldPending>
    1056:	20 91 72 30 	lds	r18, 0x3072	; 0x803072 <uxTopReadyPriority>
    105a:	82 2f       	mov	r24, r18
    105c:	90 e0       	ldi	r25, 0x00	; 0
    105e:	fc 01       	movw	r30, r24
    1060:	ee 0f       	add	r30, r30
    1062:	ff 1f       	adc	r31, r31
    1064:	ee 0f       	add	r30, r30
    1066:	ff 1f       	adc	r31, r31
    1068:	ee 0f       	add	r30, r30
    106a:	ff 1f       	adc	r31, r31
    106c:	e8 0f       	add	r30, r24
    106e:	f9 1f       	adc	r31, r25
    1070:	e2 56       	subi	r30, 0x62	; 98
    1072:	ff 4c       	sbci	r31, 0xCF	; 207
    1074:	30 81       	ld	r19, Z
    1076:	31 11       	cpse	r19, r1
    1078:	11 c0       	rjmp	.+34     	; 0x109c <vTaskSwitchContext+0x5a>
    107a:	21 50       	subi	r18, 0x01	; 1
    107c:	82 2f       	mov	r24, r18
    107e:	90 e0       	ldi	r25, 0x00	; 0
    1080:	fc 01       	movw	r30, r24
    1082:	ee 0f       	add	r30, r30
    1084:	ff 1f       	adc	r31, r31
    1086:	ee 0f       	add	r30, r30
    1088:	ff 1f       	adc	r31, r31
    108a:	ee 0f       	add	r30, r30
    108c:	ff 1f       	adc	r31, r31
    108e:	e8 0f       	add	r30, r24
    1090:	f9 1f       	adc	r31, r25
    1092:	e2 56       	subi	r30, 0x62	; 98
    1094:	ff 4c       	sbci	r31, 0xCF	; 207
    1096:	30 81       	ld	r19, Z
    1098:	33 23       	and	r19, r19
    109a:	79 f3       	breq	.-34     	; 0x107a <vTaskSwitchContext+0x38>
    109c:	ac 01       	movw	r20, r24
    109e:	44 0f       	add	r20, r20
    10a0:	55 1f       	adc	r21, r21
    10a2:	44 0f       	add	r20, r20
    10a4:	55 1f       	adc	r21, r21
    10a6:	44 0f       	add	r20, r20
    10a8:	55 1f       	adc	r21, r21
    10aa:	48 0f       	add	r20, r24
    10ac:	59 1f       	adc	r21, r25
    10ae:	da 01       	movw	r26, r20
    10b0:	a2 56       	subi	r26, 0x62	; 98
    10b2:	bf 4c       	sbci	r27, 0xCF	; 207
    10b4:	11 96       	adiw	r26, 0x01	; 1
    10b6:	ed 91       	ld	r30, X+
    10b8:	fc 91       	ld	r31, X
    10ba:	12 97       	sbiw	r26, 0x02	; 2
    10bc:	02 80       	ldd	r0, Z+2	; 0x02
    10be:	f3 81       	ldd	r31, Z+3	; 0x03
    10c0:	e0 2d       	mov	r30, r0
    10c2:	11 96       	adiw	r26, 0x01	; 1
    10c4:	ed 93       	st	X+, r30
    10c6:	fc 93       	st	X, r31
    10c8:	12 97       	sbiw	r26, 0x02	; 2
    10ca:	4f 55       	subi	r20, 0x5F	; 95
    10cc:	5f 4c       	sbci	r21, 0xCF	; 207
    10ce:	e4 17       	cp	r30, r20
    10d0:	f5 07       	cpc	r31, r21
    10d2:	29 f4       	brne	.+10     	; 0x10de <vTaskSwitchContext+0x9c>
    10d4:	42 81       	ldd	r20, Z+2	; 0x02
    10d6:	53 81       	ldd	r21, Z+3	; 0x03
    10d8:	fd 01       	movw	r30, r26
    10da:	41 83       	std	Z+1, r20	; 0x01
    10dc:	52 83       	std	Z+2, r21	; 0x02
    10de:	fc 01       	movw	r30, r24
    10e0:	ee 0f       	add	r30, r30
    10e2:	ff 1f       	adc	r31, r31
    10e4:	ee 0f       	add	r30, r30
    10e6:	ff 1f       	adc	r31, r31
    10e8:	ee 0f       	add	r30, r30
    10ea:	ff 1f       	adc	r31, r31
    10ec:	8e 0f       	add	r24, r30
    10ee:	9f 1f       	adc	r25, r31
    10f0:	fc 01       	movw	r30, r24
    10f2:	e2 56       	subi	r30, 0x62	; 98
    10f4:	ff 4c       	sbci	r31, 0xCF	; 207
    10f6:	01 80       	ldd	r0, Z+1	; 0x01
    10f8:	f2 81       	ldd	r31, Z+2	; 0x02
    10fa:	e0 2d       	mov	r30, r0
    10fc:	86 81       	ldd	r24, Z+6	; 0x06
    10fe:	97 81       	ldd	r25, Z+7	; 0x07
    1100:	80 93 c2 30 	sts	0x30C2, r24	; 0x8030c2 <pxCurrentTCB>
    1104:	90 93 c3 30 	sts	0x30C3, r25	; 0x8030c3 <pxCurrentTCB+0x1>
    1108:	20 93 72 30 	sts	0x3072, r18	; 0x803072 <uxTopReadyPriority>
    110c:	08 95       	ret

0000110e <vTaskPlaceOnEventList>:
    110e:	cf 93       	push	r28
    1110:	df 93       	push	r29
    1112:	eb 01       	movw	r28, r22
    1114:	60 91 c2 30 	lds	r22, 0x30C2	; 0x8030c2 <pxCurrentTCB>
    1118:	70 91 c3 30 	lds	r23, 0x30C3	; 0x8030c3 <pxCurrentTCB+0x1>
    111c:	64 5f       	subi	r22, 0xF4	; 244
    111e:	7f 4f       	sbci	r23, 0xFF	; 255
    1120:	0e 94 e7 00 	call	0x1ce	; 0x1ce <vListInsert>
    1124:	61 e0       	ldi	r22, 0x01	; 1
    1126:	ce 01       	movw	r24, r28
    1128:	0e 94 44 05 	call	0xa88	; 0xa88 <prvAddCurrentTaskToDelayedList>
    112c:	df 91       	pop	r29
    112e:	cf 91       	pop	r28
    1130:	08 95       	ret

00001132 <xTaskRemoveFromEventList>:
    1132:	0f 93       	push	r16
    1134:	1f 93       	push	r17
    1136:	cf 93       	push	r28
    1138:	df 93       	push	r29
    113a:	dc 01       	movw	r26, r24
    113c:	15 96       	adiw	r26, 0x05	; 5
    113e:	ed 91       	ld	r30, X+
    1140:	fc 91       	ld	r31, X
    1142:	16 97       	sbiw	r26, 0x06	; 6
    1144:	c6 81       	ldd	r28, Z+6	; 0x06
    1146:	d7 81       	ldd	r29, Z+7	; 0x07
    1148:	8e 01       	movw	r16, r28
    114a:	04 5f       	subi	r16, 0xF4	; 244
    114c:	1f 4f       	sbci	r17, 0xFF	; 255
    114e:	c8 01       	movw	r24, r16
    1150:	0e 94 18 01 	call	0x230	; 0x230 <uxListRemove>
    1154:	80 91 68 30 	lds	r24, 0x3068	; 0x803068 <uxSchedulerSuspended>
    1158:	81 11       	cpse	r24, r1
    115a:	1c c0       	rjmp	.+56     	; 0x1194 <xTaskRemoveFromEventList+0x62>
    115c:	0a 50       	subi	r16, 0x0A	; 10
    115e:	11 09       	sbc	r17, r1
    1160:	c8 01       	movw	r24, r16
    1162:	0e 94 18 01 	call	0x230	; 0x230 <uxListRemove>
    1166:	8e 89       	ldd	r24, Y+22	; 0x16
    1168:	90 91 72 30 	lds	r25, 0x3072	; 0x803072 <uxTopReadyPriority>
    116c:	98 17       	cp	r25, r24
    116e:	10 f4       	brcc	.+4      	; 0x1174 <xTaskRemoveFromEventList+0x42>
    1170:	80 93 72 30 	sts	0x3072, r24	; 0x803072 <uxTopReadyPriority>
    1174:	90 e0       	ldi	r25, 0x00	; 0
    1176:	9c 01       	movw	r18, r24
    1178:	22 0f       	add	r18, r18
    117a:	33 1f       	adc	r19, r19
    117c:	22 0f       	add	r18, r18
    117e:	33 1f       	adc	r19, r19
    1180:	22 0f       	add	r18, r18
    1182:	33 1f       	adc	r19, r19
    1184:	82 0f       	add	r24, r18
    1186:	93 1f       	adc	r25, r19
    1188:	b8 01       	movw	r22, r16
    118a:	82 56       	subi	r24, 0x62	; 98
    118c:	9f 4c       	sbci	r25, 0xCF	; 207
    118e:	0e 94 c6 00 	call	0x18c	; 0x18c <vListInsertEnd>
    1192:	05 c0       	rjmp	.+10     	; 0x119e <xTaskRemoveFromEventList+0x6c>
    1194:	b8 01       	movw	r22, r16
    1196:	8f e7       	ldi	r24, 0x7F	; 127
    1198:	90 e3       	ldi	r25, 0x30	; 48
    119a:	0e 94 c6 00 	call	0x18c	; 0x18c <vListInsertEnd>
    119e:	e0 91 c2 30 	lds	r30, 0x30C2	; 0x8030c2 <pxCurrentTCB>
    11a2:	f0 91 c3 30 	lds	r31, 0x30C3	; 0x8030c3 <pxCurrentTCB+0x1>
    11a6:	9e 89       	ldd	r25, Y+22	; 0x16
    11a8:	86 89       	ldd	r24, Z+22	; 0x16
    11aa:	89 17       	cp	r24, r25
    11ac:	20 f4       	brcc	.+8      	; 0x11b6 <xTaskRemoveFromEventList+0x84>
    11ae:	81 e0       	ldi	r24, 0x01	; 1
    11b0:	80 93 6f 30 	sts	0x306F, r24	; 0x80306f <xYieldPending>
    11b4:	01 c0       	rjmp	.+2      	; 0x11b8 <xTaskRemoveFromEventList+0x86>
    11b6:	80 e0       	ldi	r24, 0x00	; 0
    11b8:	df 91       	pop	r29
    11ba:	cf 91       	pop	r28
    11bc:	1f 91       	pop	r17
    11be:	0f 91       	pop	r16
    11c0:	08 95       	ret

000011c2 <vTaskInternalSetTimeOutState>:
    11c2:	20 91 6e 30 	lds	r18, 0x306E	; 0x80306e <xNumOfOverflows>
    11c6:	fc 01       	movw	r30, r24
    11c8:	20 83       	st	Z, r18
    11ca:	20 91 73 30 	lds	r18, 0x3073	; 0x803073 <xTickCount>
    11ce:	30 91 74 30 	lds	r19, 0x3074	; 0x803074 <xTickCount+0x1>
    11d2:	21 83       	std	Z+1, r18	; 0x01
    11d4:	32 83       	std	Z+2, r19	; 0x02
    11d6:	08 95       	ret

000011d8 <xTaskCheckForTimeOut>:
    11d8:	cf 93       	push	r28
    11da:	df 93       	push	r29
    11dc:	0f b6       	in	r0, 0x3f	; 63
    11de:	f8 94       	cli
    11e0:	0f 92       	push	r0
    11e2:	20 91 73 30 	lds	r18, 0x3073	; 0x803073 <xTickCount>
    11e6:	30 91 74 30 	lds	r19, 0x3074	; 0x803074 <xTickCount+0x1>
    11ea:	db 01       	movw	r26, r22
    11ec:	4d 91       	ld	r20, X+
    11ee:	5c 91       	ld	r21, X
    11f0:	4f 3f       	cpi	r20, 0xFF	; 255
    11f2:	bf ef       	ldi	r27, 0xFF	; 255
    11f4:	5b 07       	cpc	r21, r27
    11f6:	f1 f0       	breq	.+60     	; 0x1234 <xTaskCheckForTimeOut+0x5c>
    11f8:	ec 01       	movw	r28, r24
    11fa:	e9 81       	ldd	r30, Y+1	; 0x01
    11fc:	fa 81       	ldd	r31, Y+2	; 0x02
    11fe:	a0 91 6e 30 	lds	r26, 0x306E	; 0x80306e <xNumOfOverflows>
    1202:	b8 81       	ld	r27, Y
    1204:	ba 17       	cp	r27, r26
    1206:	19 f0       	breq	.+6      	; 0x120e <xTaskCheckForTimeOut+0x36>
    1208:	2e 17       	cp	r18, r30
    120a:	3f 07       	cpc	r19, r31
    120c:	a8 f4       	brcc	.+42     	; 0x1238 <xTaskCheckForTimeOut+0x60>
    120e:	2e 1b       	sub	r18, r30
    1210:	3f 0b       	sbc	r19, r31
    1212:	24 17       	cp	r18, r20
    1214:	35 07       	cpc	r19, r21
    1216:	48 f4       	brcc	.+18     	; 0x122a <xTaskCheckForTimeOut+0x52>
    1218:	fb 01       	movw	r30, r22
    121a:	42 1b       	sub	r20, r18
    121c:	53 0b       	sbc	r21, r19
    121e:	40 83       	st	Z, r20
    1220:	51 83       	std	Z+1, r21	; 0x01
    1222:	0e 94 e1 08 	call	0x11c2	; 0x11c2 <vTaskInternalSetTimeOutState>
    1226:	80 e0       	ldi	r24, 0x00	; 0
    1228:	08 c0       	rjmp	.+16     	; 0x123a <xTaskCheckForTimeOut+0x62>
    122a:	fb 01       	movw	r30, r22
    122c:	10 82       	st	Z, r1
    122e:	11 82       	std	Z+1, r1	; 0x01
    1230:	81 e0       	ldi	r24, 0x01	; 1
    1232:	03 c0       	rjmp	.+6      	; 0x123a <xTaskCheckForTimeOut+0x62>
    1234:	80 e0       	ldi	r24, 0x00	; 0
    1236:	01 c0       	rjmp	.+2      	; 0x123a <xTaskCheckForTimeOut+0x62>
    1238:	81 e0       	ldi	r24, 0x01	; 1
    123a:	0f 90       	pop	r0
    123c:	0f be       	out	0x3f, r0	; 63
    123e:	df 91       	pop	r29
    1240:	cf 91       	pop	r28
    1242:	08 95       	ret

00001244 <vTaskMissedYield>:
    1244:	81 e0       	ldi	r24, 0x01	; 1
    1246:	80 93 6f 30 	sts	0x306F, r24	; 0x80306f <xYieldPending>
    124a:	08 95       	ret

0000124c <xTaskPriorityDisinherit>:
    124c:	0f 93       	push	r16
    124e:	1f 93       	push	r17
    1250:	cf 93       	push	r28
    1252:	df 93       	push	r29
    1254:	fc 01       	movw	r30, r24
    1256:	89 2b       	or	r24, r25
    1258:	79 f1       	breq	.+94     	; 0x12b8 <xTaskPriorityDisinherit+0x6c>
    125a:	82 a1       	ldd	r24, Z+34	; 0x22
    125c:	81 50       	subi	r24, 0x01	; 1
    125e:	82 a3       	std	Z+34, r24	; 0x22
    1260:	26 89       	ldd	r18, Z+22	; 0x16
    1262:	91 a1       	ldd	r25, Z+33	; 0x21
    1264:	29 17       	cp	r18, r25
    1266:	51 f1       	breq	.+84     	; 0x12bc <xTaskPriorityDisinherit+0x70>
    1268:	81 11       	cpse	r24, r1
    126a:	2a c0       	rjmp	.+84     	; 0x12c0 <xTaskPriorityDisinherit+0x74>
    126c:	ef 01       	movw	r28, r30
    126e:	8f 01       	movw	r16, r30
    1270:	0e 5f       	subi	r16, 0xFE	; 254
    1272:	1f 4f       	sbci	r17, 0xFF	; 255
    1274:	c8 01       	movw	r24, r16
    1276:	0e 94 18 01 	call	0x230	; 0x230 <uxListRemove>
    127a:	89 a1       	ldd	r24, Y+33	; 0x21
    127c:	8e 8b       	std	Y+22, r24	; 0x16
    127e:	24 e0       	ldi	r18, 0x04	; 4
    1280:	30 e0       	ldi	r19, 0x00	; 0
    1282:	28 1b       	sub	r18, r24
    1284:	31 09       	sbc	r19, r1
    1286:	2c 87       	std	Y+12, r18	; 0x0c
    1288:	3d 87       	std	Y+13, r19	; 0x0d
    128a:	90 91 72 30 	lds	r25, 0x3072	; 0x803072 <uxTopReadyPriority>
    128e:	98 17       	cp	r25, r24
    1290:	10 f4       	brcc	.+4      	; 0x1296 <xTaskPriorityDisinherit+0x4a>
    1292:	80 93 72 30 	sts	0x3072, r24	; 0x803072 <uxTopReadyPriority>
    1296:	90 e0       	ldi	r25, 0x00	; 0
    1298:	9c 01       	movw	r18, r24
    129a:	22 0f       	add	r18, r18
    129c:	33 1f       	adc	r19, r19
    129e:	22 0f       	add	r18, r18
    12a0:	33 1f       	adc	r19, r19
    12a2:	22 0f       	add	r18, r18
    12a4:	33 1f       	adc	r19, r19
    12a6:	82 0f       	add	r24, r18
    12a8:	93 1f       	adc	r25, r19
    12aa:	b8 01       	movw	r22, r16
    12ac:	82 56       	subi	r24, 0x62	; 98
    12ae:	9f 4c       	sbci	r25, 0xCF	; 207
    12b0:	0e 94 c6 00 	call	0x18c	; 0x18c <vListInsertEnd>
    12b4:	81 e0       	ldi	r24, 0x01	; 1
    12b6:	05 c0       	rjmp	.+10     	; 0x12c2 <xTaskPriorityDisinherit+0x76>
    12b8:	80 e0       	ldi	r24, 0x00	; 0
    12ba:	03 c0       	rjmp	.+6      	; 0x12c2 <xTaskPriorityDisinherit+0x76>
    12bc:	80 e0       	ldi	r24, 0x00	; 0
    12be:	01 c0       	rjmp	.+2      	; 0x12c2 <xTaskPriorityDisinherit+0x76>
    12c0:	80 e0       	ldi	r24, 0x00	; 0
    12c2:	df 91       	pop	r29
    12c4:	cf 91       	pop	r28
    12c6:	1f 91       	pop	r17
    12c8:	0f 91       	pop	r16
    12ca:	08 95       	ret

000012cc <vSenderTask>:
	vTaskStartScheduler();
	return 0;
}

void vSenderTask(void *pvParams)
{
    12cc:	cf 93       	push	r28
    12ce:	df 93       	push	r29
    12d0:	00 d0       	rcall	.+0      	; 0x12d2 <vSenderTask+0x6>
    12d2:	cd b7       	in	r28, 0x3d	; 61
    12d4:	de b7       	in	r29, 0x3e	; 62
    12d6:	89 83       	std	Y+1, r24	; 0x01
    12d8:	9a 83       	std	Y+2, r25	; 0x02
	for (;;)
	{
		if (strlen((char*)pvParams)>0)
    12da:	e9 81       	ldd	r30, Y+1	; 0x01
    12dc:	fa 81       	ldd	r31, Y+2	; 0x02
    12de:	80 81       	ld	r24, Z
    12e0:	88 23       	and	r24, r24
    12e2:	61 f0       	breq	.+24     	; 0x12fc <vSenderTask+0x30>
		{
			xQueueSend(xPrintQueue,(void *)&pvParams,0);
    12e4:	20 e0       	ldi	r18, 0x00	; 0
    12e6:	40 e0       	ldi	r20, 0x00	; 0
    12e8:	50 e0       	ldi	r21, 0x00	; 0
    12ea:	be 01       	movw	r22, r28
    12ec:	6f 5f       	subi	r22, 0xFF	; 255
    12ee:	7f 4f       	sbci	r23, 0xFF	; 255
    12f0:	80 91 ed 30 	lds	r24, 0x30ED	; 0x8030ed <xPrintQueue>
    12f4:	90 91 ee 30 	lds	r25, 0x30EE	; 0x8030ee <xPrintQueue+0x1>
    12f8:	0e 94 b3 03 	call	0x766	; 0x766 <xQueueGenericSend>
		}
		vTaskDelay(pdMS_TO_TICKS(1000));
    12fc:	88 ee       	ldi	r24, 0xE8	; 232
    12fe:	93 e0       	ldi	r25, 0x03	; 3
    1300:	0e 94 0d 08 	call	0x101a	; 0x101a <vTaskDelay>
	}
    1304:	ea cf       	rjmp	.-44     	; 0x12da <vSenderTask+0xe>

00001306 <vSenderTask2>:
}

void vSenderTask2(void *pvParams)
{
    1306:	cf 93       	push	r28
    1308:	df 93       	push	r29
    130a:	00 d0       	rcall	.+0      	; 0x130c <vSenderTask2+0x6>
    130c:	cd b7       	in	r28, 0x3d	; 61
    130e:	de b7       	in	r29, 0x3e	; 62
    1310:	89 83       	std	Y+1, r24	; 0x01
    1312:	9a 83       	std	Y+2, r25	; 0x02
	for (;;)
	{
		if (strlen((char*)pvParams)>0)
    1314:	e9 81       	ldd	r30, Y+1	; 0x01
    1316:	fa 81       	ldd	r31, Y+2	; 0x02
    1318:	80 81       	ld	r24, Z
    131a:	88 23       	and	r24, r24
    131c:	61 f0       	breq	.+24     	; 0x1336 <vSenderTask2+0x30>
		{
			xQueueSend(xPrintQueue,(void *)&pvParams,0);
    131e:	20 e0       	ldi	r18, 0x00	; 0
    1320:	40 e0       	ldi	r20, 0x00	; 0
    1322:	50 e0       	ldi	r21, 0x00	; 0
    1324:	be 01       	movw	r22, r28
    1326:	6f 5f       	subi	r22, 0xFF	; 255
    1328:	7f 4f       	sbci	r23, 0xFF	; 255
    132a:	80 91 ed 30 	lds	r24, 0x30ED	; 0x8030ed <xPrintQueue>
    132e:	90 91 ee 30 	lds	r25, 0x30EE	; 0x8030ee <xPrintQueue+0x1>
    1332:	0e 94 b3 03 	call	0x766	; 0x766 <xQueueGenericSend>
		}
		vTaskDelay(pdMS_TO_TICKS(500));
    1336:	84 ef       	ldi	r24, 0xF4	; 244
    1338:	91 e0       	ldi	r25, 0x01	; 1
    133a:	0e 94 0d 08 	call	0x101a	; 0x101a <vTaskDelay>
	}
    133e:	ea cf       	rjmp	.-44     	; 0x1314 <vSenderTask2+0xe>

00001340 <main>:
char msg2[] = "This is the Message two\r\n";
char *ptr = msg;
extern char command[10];

int main(void)
{
    1340:	ef 92       	push	r14
    1342:	ff 92       	push	r15
    1344:	0f 93       	push	r16
	atmel_start_init();
    1346:	0e 94 67 00 	call	0xce	; 0xce <atmel_start_init>
	USART_0_set_ISR_cb( &serialHandler,RX_CB );
    134a:	61 e0       	ldi	r22, 0x01	; 1
    134c:	8a e1       	ldi	r24, 0x1A	; 26
    134e:	9a e0       	ldi	r25, 0x0A	; 10
    1350:	0e 94 c8 0a 	call	0x1590	; 0x1590 <USART_0_set_ISR_cb>
	
	xPrintQueue = xQueueCreate(5,2);
    1354:	40 e0       	ldi	r20, 0x00	; 0
    1356:	62 e0       	ldi	r22, 0x02	; 2
    1358:	85 e0       	ldi	r24, 0x05	; 5
    135a:	0e 94 86 03 	call	0x70c	; 0x70c <xQueueGenericCreate>
    135e:	80 93 ed 30 	sts	0x30ED, r24	; 0x8030ed <xPrintQueue>
    1362:	90 93 ee 30 	sts	0x30EE, r25	; 0x8030ee <xPrintQueue+0x1>
	xCommandQueue = xQueueCreate(5,2);
    1366:	40 e0       	ldi	r20, 0x00	; 0
    1368:	62 e0       	ldi	r22, 0x02	; 2
    136a:	85 e0       	ldi	r24, 0x05	; 5
    136c:	0e 94 86 03 	call	0x70c	; 0x70c <xQueueGenericCreate>
    1370:	80 93 eb 30 	sts	0x30EB, r24	; 0x8030eb <xCommandQueue>
    1374:	90 93 ec 30 	sts	0x30EC, r25	; 0x8030ec <xCommandQueue+0x1>
	/* Task Registration and creation */
	xTaskCreate(vSenderTask, "sender", configMINIMAL_STACK_SIZE, (void *)msg, 1, NULL);
    1378:	e1 2c       	mov	r14, r1
    137a:	f1 2c       	mov	r15, r1
    137c:	01 e0       	ldi	r16, 0x01	; 1
    137e:	2a e1       	ldi	r18, 0x1A	; 26
    1380:	38 e2       	ldi	r19, 0x28	; 40
    1382:	43 e7       	ldi	r20, 0x73	; 115
    1384:	50 e0       	ldi	r21, 0x00	; 0
    1386:	6b ee       	ldi	r22, 0xEB	; 235
    1388:	7c e5       	ldi	r23, 0x5C	; 92
    138a:	86 e6       	ldi	r24, 0x66	; 102
    138c:	99 e0       	ldi	r25, 0x09	; 9
    138e:	0e 94 9c 05 	call	0xb38	; 0xb38 <xTaskCreate>
	xTaskCreate(vSenderTask2, "sender2", configMINIMAL_STACK_SIZE, (void *)msg2, 1, NULL);
    1392:	20 e0       	ldi	r18, 0x00	; 0
    1394:	38 e2       	ldi	r19, 0x28	; 40
    1396:	43 e7       	ldi	r20, 0x73	; 115
    1398:	50 e0       	ldi	r21, 0x00	; 0
    139a:	62 ef       	ldi	r22, 0xF2	; 242
    139c:	7c e5       	ldi	r23, 0x5C	; 92
    139e:	83 e8       	ldi	r24, 0x83	; 131
    13a0:	99 e0       	ldi	r25, 0x09	; 9
    13a2:	0e 94 9c 05 	call	0xb38	; 0xb38 <xTaskCreate>
	xTaskCreate(vReceiverTask, "receiver", configMINIMAL_STACK_SIZE, NULL, 2, NULL);
    13a6:	02 e0       	ldi	r16, 0x02	; 2
    13a8:	20 e0       	ldi	r18, 0x00	; 0
    13aa:	30 e0       	ldi	r19, 0x00	; 0
    13ac:	43 e7       	ldi	r20, 0x73	; 115
    13ae:	50 e0       	ldi	r21, 0x00	; 0
    13b0:	6e ef       	ldi	r22, 0xFE	; 254
    13b2:	7c e5       	ldi	r23, 0x5C	; 92
    13b4:	81 e0       	ldi	r24, 0x01	; 1
    13b6:	9a e0       	ldi	r25, 0x0A	; 10
    13b8:	0e 94 9c 05 	call	0xb38	; 0xb38 <xTaskCreate>
	xTaskCreate(vCommandReceiverTask, "cmd receiver", configMINIMAL_STACK_SIZE, NULL, 2, NULL);
    13bc:	20 e0       	ldi	r18, 0x00	; 0
    13be:	30 e0       	ldi	r19, 0x00	; 0
    13c0:	43 e7       	ldi	r20, 0x73	; 115
    13c2:	50 e0       	ldi	r21, 0x00	; 0
    13c4:	6a ef       	ldi	r22, 0xFA	; 250
    13c6:	7c e5       	ldi	r23, 0x5C	; 92
    13c8:	8a e6       	ldi	r24, 0x6A	; 106
    13ca:	90 e0       	ldi	r25, 0x00	; 0
    13cc:	0e 94 9c 05 	call	0xb38	; 0xb38 <xTaskCreate>
	
	vTaskStartScheduler();
    13d0:	0e 94 a6 06 	call	0xd4c	; 0xd4c <vTaskStartScheduler>
	return 0;
}
    13d4:	80 e0       	ldi	r24, 0x00	; 0
    13d6:	90 e0       	ldi	r25, 0x00	; 0
    13d8:	0f 91       	pop	r16
    13da:	ff 90       	pop	r15
    13dc:	ef 90       	pop	r14
    13de:	08 95       	ret

000013e0 <vPrintString>:
		}
	}
}

void vPrintString(void *pvParams)
{
    13e0:	cf 93       	push	r28
    13e2:	df 93       	push	r29
    13e4:	c8 2f       	mov	r28, r24
    13e6:	d9 2f       	mov	r29, r25
	vTaskSuspendAll();
    13e8:	0e 94 d0 06 	call	0xda0	; 0xda0 <vTaskSuspendAll>
	printf((const char *)pvParams);
    13ec:	df 93       	push	r29
    13ee:	cf 93       	push	r28
    13f0:	0e 94 7d 0b 	call	0x16fa	; 0x16fa <printf>
	xTaskResumeAll();
    13f4:	0e 94 8e 07 	call	0xf1c	; 0xf1c <xTaskResumeAll>
}
    13f8:	0f 90       	pop	r0
    13fa:	0f 90       	pop	r0
    13fc:	df 91       	pop	r29
    13fe:	cf 91       	pop	r28
    1400:	08 95       	ret

00001402 <vReceiverTask>:
		vTaskDelay(pdMS_TO_TICKS(500));
	}
}

void vReceiverTask(void *pvParams)
{
    1402:	cf 93       	push	r28
    1404:	df 93       	push	r29
    1406:	00 d0       	rcall	.+0      	; 0x1408 <vReceiverTask+0x6>
    1408:	cd b7       	in	r28, 0x3d	; 61
    140a:	de b7       	in	r29, 0x3e	; 62
	char *ptr=NULL;
    140c:	19 82       	std	Y+1, r1	; 0x01
    140e:	1a 82       	std	Y+2, r1	; 0x02
	for (;;)
	{
		if( xQueueReceive(xPrintQueue,(void *)&ptr,100) == pdPASS )
    1410:	44 e6       	ldi	r20, 0x64	; 100
    1412:	50 e0       	ldi	r21, 0x00	; 0
    1414:	be 01       	movw	r22, r28
    1416:	6f 5f       	subi	r22, 0xFF	; 255
    1418:	7f 4f       	sbci	r23, 0xFF	; 255
    141a:	80 91 ed 30 	lds	r24, 0x30ED	; 0x8030ed <xPrintQueue>
    141e:	90 91 ee 30 	lds	r25, 0x30EE	; 0x8030ee <xPrintQueue+0x1>
    1422:	0e 94 89 04 	call	0x912	; 0x912 <xQueueReceive>
    1426:	81 30       	cpi	r24, 0x01	; 1
    1428:	99 f7       	brne	.-26     	; 0x1410 <vReceiverTask+0xe>
		{
			vPrintString((void *)ptr);
    142a:	89 81       	ldd	r24, Y+1	; 0x01
    142c:	9a 81       	ldd	r25, Y+2	; 0x02
    142e:	0e 94 f0 09 	call	0x13e0	; 0x13e0 <vPrintString>
    1432:	ee cf       	rjmp	.-36     	; 0x1410 <vReceiverTask+0xe>

00001434 <serialHandler>:
	uint8_t data;
	static uint8_t index = 0;
	extern QueueHandle_t xCommandQueue;
	
	/* Read the received data */
	data = USART2.RXDATAL;
    1434:	80 91 40 08 	lds	r24, 0x0840	; 0x800840 <__TEXT_REGION_LENGTH__+0x700840>
	command[index++] = data;
    1438:	e0 91 c4 30 	lds	r30, 0x30C4	; 0x8030c4 <index.4022>
    143c:	91 e0       	ldi	r25, 0x01	; 1
    143e:	9e 0f       	add	r25, r30
    1440:	90 93 c4 30 	sts	0x30C4, r25	; 0x8030c4 <index.4022>
    1444:	f0 e0       	ldi	r31, 0x00	; 0
    1446:	ee 5c       	subi	r30, 0xCE	; 206
    1448:	f7 4d       	sbci	r31, 0xD7	; 215
    144a:	80 83       	st	Z, r24

	if(data == '\n')
    144c:	8a 30       	cpi	r24, 0x0A	; 10
    144e:	99 f4       	brne	.+38     	; 0x1476 <serialHandler+0x42>
	{
		command[index-2] = '\0';// avoid /r/n
    1450:	e9 2f       	mov	r30, r25
    1452:	f0 e0       	ldi	r31, 0x00	; 0
    1454:	e0 5d       	subi	r30, 0xD0	; 208
    1456:	f7 4d       	sbci	r31, 0xD7	; 215
    1458:	10 82       	st	Z, r1
		xQueueSendFromISR(xCommandQueue,(void *)&buffPtr,0);
    145a:	20 e0       	ldi	r18, 0x00	; 0
    145c:	40 e0       	ldi	r20, 0x00	; 0
    145e:	50 e0       	ldi	r21, 0x00	; 0
    1460:	60 e3       	ldi	r22, 0x30	; 48
    1462:	78 e2       	ldi	r23, 0x28	; 40
    1464:	80 91 eb 30 	lds	r24, 0x30EB	; 0x8030eb <xCommandQueue>
    1468:	90 91 ec 30 	lds	r25, 0x30EC	; 0x8030ec <xCommandQueue+0x1>
    146c:	0e 94 4f 04 	call	0x89e	; 0x89e <xQueueGenericSendFromISR>
 *
 * \param[in] pin       The pin number within port
 */
static inline void PORTD_toggle_pin_level(const uint8_t pin)
{
	VPORTD.IN |= 1 << pin;
    1470:	71 9a       	sbi	0x0e, 1	; 14
		GREEN_LED_toggle_level();
		index = 0;
    1472:	10 92 c4 30 	sts	0x30C4, r1	; 0x8030c4 <index.4022>
    1476:	08 95       	ret

00001478 <BOD_init>:
    1478:	82 e0       	ldi	r24, 0x02	; 2
    147a:	80 93 89 00 	sts	0x0089, r24	; 0x800089 <__TEXT_REGION_LENGTH__+0x700089>
    147e:	80 e0       	ldi	r24, 0x00	; 0
    1480:	08 95       	ret

00001482 <CLKCTRL_init>:
    1482:	41 e0       	ldi	r20, 0x01	; 1
    1484:	68 ed       	ldi	r22, 0xD8	; 216
    1486:	81 e6       	ldi	r24, 0x61	; 97
    1488:	90 e0       	ldi	r25, 0x00	; 0
    148a:	0e 94 a2 0a 	call	0x1544	; 0x1544 <protected_write_io>
    148e:	80 e0       	ldi	r24, 0x00	; 0
    1490:	08 95       	ret

00001492 <CPUINT_init>:
    1492:	80 e0       	ldi	r24, 0x00	; 0
    1494:	08 95       	ret

00001496 <mcu_init>:
#ifdef __cplusplus
extern "C" {
#endif

void mcu_init(void)
{
    1496:	e0 e1       	ldi	r30, 0x10	; 16
    1498:	f4 e0       	ldi	r31, 0x04	; 4
	 * peripheral if used */

	/* Set all pins to low power mode */

	for (uint8_t i = 0; i < 8; i++) {
		*((uint8_t *)&PORTA + 0x10 + i) |= 1 << PORT_PULLUPEN_bp;
    149a:	80 81       	ld	r24, Z
    149c:	88 60       	ori	r24, 0x08	; 8
    149e:	81 93       	st	Z+, r24
	 * disables all peripherals to save power. Driver shall enable
	 * peripheral if used */

	/* Set all pins to low power mode */

	for (uint8_t i = 0; i < 8; i++) {
    14a0:	e8 31       	cpi	r30, 0x18	; 24
    14a2:	84 e0       	ldi	r24, 0x04	; 4
    14a4:	f8 07       	cpc	r31, r24
    14a6:	c9 f7       	brne	.-14     	; 0x149a <mcu_init+0x4>
    14a8:	e0 e3       	ldi	r30, 0x30	; 48
    14aa:	f4 e0       	ldi	r31, 0x04	; 4
		*((uint8_t *)&PORTA + 0x10 + i) |= 1 << PORT_PULLUPEN_bp;
	}

	for (uint8_t i = 0; i < 8; i++) {
		*((uint8_t *)&PORTB + 0x10 + i) |= 1 << PORT_PULLUPEN_bp;
    14ac:	80 81       	ld	r24, Z
    14ae:	88 60       	ori	r24, 0x08	; 8
    14b0:	81 93       	st	Z+, r24

	for (uint8_t i = 0; i < 8; i++) {
		*((uint8_t *)&PORTA + 0x10 + i) |= 1 << PORT_PULLUPEN_bp;
	}

	for (uint8_t i = 0; i < 8; i++) {
    14b2:	e8 33       	cpi	r30, 0x38	; 56
    14b4:	84 e0       	ldi	r24, 0x04	; 4
    14b6:	f8 07       	cpc	r31, r24
    14b8:	c9 f7       	brne	.-14     	; 0x14ac <mcu_init+0x16>
    14ba:	e0 e5       	ldi	r30, 0x50	; 80
    14bc:	f4 e0       	ldi	r31, 0x04	; 4
		*((uint8_t *)&PORTB + 0x10 + i) |= 1 << PORT_PULLUPEN_bp;
	}

	for (uint8_t i = 0; i < 8; i++) {
		*((uint8_t *)&PORTC + 0x10 + i) |= 1 << PORT_PULLUPEN_bp;
    14be:	80 81       	ld	r24, Z
    14c0:	88 60       	ori	r24, 0x08	; 8
    14c2:	81 93       	st	Z+, r24

	for (uint8_t i = 0; i < 8; i++) {
		*((uint8_t *)&PORTB + 0x10 + i) |= 1 << PORT_PULLUPEN_bp;
	}

	for (uint8_t i = 0; i < 8; i++) {
    14c4:	e8 35       	cpi	r30, 0x58	; 88
    14c6:	84 e0       	ldi	r24, 0x04	; 4
    14c8:	f8 07       	cpc	r31, r24
    14ca:	c9 f7       	brne	.-14     	; 0x14be <mcu_init+0x28>
    14cc:	e0 e7       	ldi	r30, 0x70	; 112
    14ce:	f4 e0       	ldi	r31, 0x04	; 4
		*((uint8_t *)&PORTC + 0x10 + i) |= 1 << PORT_PULLUPEN_bp;
	}

	for (uint8_t i = 0; i < 8; i++) {
		*((uint8_t *)&PORTD + 0x10 + i) |= 1 << PORT_PULLUPEN_bp;
    14d0:	80 81       	ld	r24, Z
    14d2:	88 60       	ori	r24, 0x08	; 8
    14d4:	81 93       	st	Z+, r24

	for (uint8_t i = 0; i < 8; i++) {
		*((uint8_t *)&PORTC + 0x10 + i) |= 1 << PORT_PULLUPEN_bp;
	}

	for (uint8_t i = 0; i < 8; i++) {
    14d6:	e8 37       	cpi	r30, 0x78	; 120
    14d8:	84 e0       	ldi	r24, 0x04	; 4
    14da:	f8 07       	cpc	r31, r24
    14dc:	c9 f7       	brne	.-14     	; 0x14d0 <mcu_init+0x3a>
    14de:	e0 e9       	ldi	r30, 0x90	; 144
    14e0:	f4 e0       	ldi	r31, 0x04	; 4
		*((uint8_t *)&PORTD + 0x10 + i) |= 1 << PORT_PULLUPEN_bp;
	}

	for (uint8_t i = 0; i < 8; i++) {
		*((uint8_t *)&PORTE + 0x10 + i) |= 1 << PORT_PULLUPEN_bp;
    14e2:	80 81       	ld	r24, Z
    14e4:	88 60       	ori	r24, 0x08	; 8
    14e6:	81 93       	st	Z+, r24

	for (uint8_t i = 0; i < 8; i++) {
		*((uint8_t *)&PORTD + 0x10 + i) |= 1 << PORT_PULLUPEN_bp;
	}

	for (uint8_t i = 0; i < 8; i++) {
    14e8:	e8 39       	cpi	r30, 0x98	; 152
    14ea:	84 e0       	ldi	r24, 0x04	; 4
    14ec:	f8 07       	cpc	r31, r24
    14ee:	c9 f7       	brne	.-14     	; 0x14e2 <mcu_init+0x4c>
    14f0:	e0 eb       	ldi	r30, 0xB0	; 176
    14f2:	f4 e0       	ldi	r31, 0x04	; 4
		*((uint8_t *)&PORTE + 0x10 + i) |= 1 << PORT_PULLUPEN_bp;
	}

	for (uint8_t i = 0; i < 8; i++) {
		*((uint8_t *)&PORTF + 0x10 + i) |= 1 << PORT_PULLUPEN_bp;
    14f4:	80 81       	ld	r24, Z
    14f6:	88 60       	ori	r24, 0x08	; 8
    14f8:	81 93       	st	Z+, r24

	for (uint8_t i = 0; i < 8; i++) {
		*((uint8_t *)&PORTE + 0x10 + i) |= 1 << PORT_PULLUPEN_bp;
	}

	for (uint8_t i = 0; i < 8; i++) {
    14fa:	e8 3b       	cpi	r30, 0xB8	; 184
    14fc:	84 e0       	ldi	r24, 0x04	; 4
    14fe:	f8 07       	cpc	r31, r24
    1500:	c9 f7       	brne	.-14     	; 0x14f4 <mcu_init+0x5e>
		*((uint8_t *)&PORTF + 0x10 + i) |= 1 << PORT_PULLUPEN_bp;
	}
}
    1502:	08 95       	ret

00001504 <USART_0_initialization>:
 */
static inline void PORTF_set_pin_dir(const uint8_t pin, const enum port_dir dir)
{
	switch (dir) {
	case PORT_DIR_IN:
		VPORTF.DIR &= ~(1 << pin);
    1504:	a1 98       	cbi	0x14, 1	; 20
	volatile uint8_t *port_pin_ctrl = ((uint8_t *)&PORTF + 0x10 + pin);

	if (pull_mode == PORT_PULL_UP) {
		*port_pin_ctrl |= PORT_PULLUPEN_bm;
	} else if (pull_mode == PORT_PULL_OFF) {
		*port_pin_ctrl &= ~PORT_PULLUPEN_bm;
    1506:	e1 eb       	ldi	r30, 0xB1	; 177
    1508:	f4 e0       	ldi	r31, 0x04	; 4
    150a:	80 81       	ld	r24, Z
    150c:	87 7f       	andi	r24, 0xF7	; 247
    150e:	80 83       	st	Z, r24
	switch (dir) {
	case PORT_DIR_IN:
		VPORTF.DIR &= ~(1 << pin);
		break;
	case PORT_DIR_OUT:
		VPORTF.DIR |= (1 << pin);
    1510:	a0 9a       	sbi	0x14, 0	; 20
static inline void PORTF_set_pin_level(const uint8_t pin, const bool level)
{
	if (level == true) {
		VPORTF.OUT |= (1 << pin);
	} else {
		VPORTF.OUT &= ~(1 << pin);
    1512:	a8 98       	cbi	0x15, 0	; 21
	    // <id> pad_initial_level
	    // <false"> Low
	    // <true"> High
	    false);

	USART_0_init();
    1514:	0e 94 4d 0b 	call	0x169a	; 0x169a <USART_0_init>
    1518:	08 95       	ret

0000151a <system_init>:
/**
 * \brief System initialization
 */
void system_init()
{
	mcu_init();
    151a:	0e 94 4b 0a 	call	0x1496	; 0x1496 <mcu_init>
	switch (dir) {
	case PORT_DIR_IN:
		VPORTD.DIR &= ~(1 << pin);
		break;
	case PORT_DIR_OUT:
		VPORTD.DIR |= (1 << pin);
    151e:	60 9a       	sbi	0x0c, 0	; 12
 *                  false = Pin level set to "low" state
 */
static inline void PORTD_set_pin_level(const uint8_t pin, const bool level)
{
	if (level == true) {
		VPORTD.OUT |= (1 << pin);
    1520:	68 9a       	sbi	0x0d, 0	; 13
	switch (dir) {
	case PORT_DIR_IN:
		VPORTD.DIR &= ~(1 << pin);
		break;
	case PORT_DIR_OUT:
		VPORTD.DIR |= (1 << pin);
    1522:	61 9a       	sbi	0x0c, 1	; 12
 *                  false = Pin level set to "low" state
 */
static inline void PORTD_set_pin_level(const uint8_t pin, const bool level)
{
	if (level == true) {
		VPORTD.OUT |= (1 << pin);
    1524:	69 9a       	sbi	0x0d, 1	; 13
	switch (dir) {
	case PORT_DIR_IN:
		VPORTD.DIR &= ~(1 << pin);
		break;
	case PORT_DIR_OUT:
		VPORTD.DIR |= (1 << pin);
    1526:	62 9a       	sbi	0x0c, 2	; 12
 *                  false = Pin level set to "low" state
 */
static inline void PORTD_set_pin_level(const uint8_t pin, const bool level)
{
	if (level == true) {
		VPORTD.OUT |= (1 << pin);
    1528:	6a 9a       	sbi	0x0d, 2	; 13
	switch (dir) {
	case PORT_DIR_IN:
		VPORTD.DIR &= ~(1 << pin);
		break;
	case PORT_DIR_OUT:
		VPORTD.DIR |= (1 << pin);
    152a:	63 9a       	sbi	0x0c, 3	; 12
 *                  false = Pin level set to "low" state
 */
static inline void PORTD_set_pin_level(const uint8_t pin, const bool level)
{
	if (level == true) {
		VPORTD.OUT |= (1 << pin);
    152c:	6b 9a       	sbi	0x0d, 3	; 13
	    // <id> pad_initial_level
	    // <false"> Low
	    // <true"> High
	    true);

	CLKCTRL_init();
    152e:	0e 94 41 0a 	call	0x1482	; 0x1482 <CLKCTRL_init>

	USART_0_initialization();
    1532:	0e 94 82 0a 	call	0x1504	; 0x1504 <USART_0_initialization>

	CPUINT_init();
    1536:	0e 94 49 0a 	call	0x1492	; 0x1492 <CPUINT_init>

	SLPCTRL_init();
    153a:	0e 94 a6 0a 	call	0x154c	; 0x154c <SLPCTRL_init>

	BOD_init();
    153e:	0e 94 3c 0a 	call	0x1478	; 0x1478 <BOD_init>
    1542:	08 95       	ret

00001544 <protected_write_io>:
    1544:	fc 01       	movw	r30, r24
    1546:	64 bf       	out	0x34, r22	; 52
    1548:	40 83       	st	Z, r20
    154a:	08 95       	ret

0000154c <SLPCTRL_init>:
    154c:	80 e0       	ldi	r24, 0x00	; 0
    154e:	08 95       	ret

00001550 <USART_0_default_rx_isr_cb>:
	USART_0_rx_elements--;
	EXIT_CRITICAL(R);

	/* Return data */
	return USART_0_rxbuf[tmptail];
}
    1550:	08 95       	ret

00001552 <USART_0_default_udre_isr_cb>:
    1552:	80 91 c5 30 	lds	r24, 0x30C5	; 0x8030c5 <USART_0_tx_elements>
    1556:	88 23       	and	r24, r24
    1558:	89 f0       	breq	.+34     	; 0x157c <USART_0_default_udre_isr_cb+0x2a>
    155a:	e0 91 c6 30 	lds	r30, 0x30C6	; 0x8030c6 <USART_0_tx_tail>
    155e:	ef 5f       	subi	r30, 0xFF	; 255
    1560:	ef 71       	andi	r30, 0x1F	; 31
    1562:	e0 93 c6 30 	sts	0x30C6, r30	; 0x8030c6 <USART_0_tx_tail>
    1566:	f0 e0       	ldi	r31, 0x00	; 0
    1568:	e8 53       	subi	r30, 0x38	; 56
    156a:	ff 4c       	sbci	r31, 0xCF	; 207
    156c:	80 81       	ld	r24, Z
    156e:	80 93 42 08 	sts	0x0842, r24	; 0x800842 <__TEXT_REGION_LENGTH__+0x700842>
    1572:	80 91 c5 30 	lds	r24, 0x30C5	; 0x8030c5 <USART_0_tx_elements>
    1576:	81 50       	subi	r24, 0x01	; 1
    1578:	80 93 c5 30 	sts	0x30C5, r24	; 0x8030c5 <USART_0_tx_elements>
    157c:	80 91 c5 30 	lds	r24, 0x30C5	; 0x8030c5 <USART_0_tx_elements>
    1580:	81 11       	cpse	r24, r1
    1582:	05 c0       	rjmp	.+10     	; 0x158e <USART_0_default_udre_isr_cb+0x3c>
    1584:	e0 e4       	ldi	r30, 0x40	; 64
    1586:	f8 e0       	ldi	r31, 0x08	; 8
    1588:	85 81       	ldd	r24, Z+5	; 0x05
    158a:	8f 7d       	andi	r24, 0xDF	; 223
    158c:	85 83       	std	Z+5, r24	; 0x05
    158e:	08 95       	ret

00001590 <USART_0_set_ISR_cb>:
    1590:	61 30       	cpi	r22, 0x01	; 1
    1592:	19 f0       	breq	.+6      	; 0x159a <USART_0_set_ISR_cb+0xa>
    1594:	62 30       	cpi	r22, 0x02	; 2
    1596:	31 f0       	breq	.+12     	; 0x15a4 <USART_0_set_ISR_cb+0x14>
    1598:	08 95       	ret
    159a:	80 93 54 28 	sts	0x2854, r24	; 0x802854 <USART_0_rx_isr_cb>
    159e:	90 93 55 28 	sts	0x2855, r25	; 0x802855 <USART_0_rx_isr_cb+0x1>
    15a2:	08 95       	ret
    15a4:	80 93 52 28 	sts	0x2852, r24	; 0x802852 <USART_0_udre_isr_cb>
    15a8:	90 93 53 28 	sts	0x2853, r25	; 0x802853 <USART_0_udre_isr_cb+0x1>
    15ac:	08 95       	ret

000015ae <__vector_31>:
    15ae:	1f 92       	push	r1
    15b0:	0f 92       	push	r0
    15b2:	0f b6       	in	r0, 0x3f	; 63
    15b4:	0f 92       	push	r0
    15b6:	11 24       	eor	r1, r1
    15b8:	2f 93       	push	r18
    15ba:	3f 93       	push	r19
    15bc:	4f 93       	push	r20
    15be:	5f 93       	push	r21
    15c0:	6f 93       	push	r22
    15c2:	7f 93       	push	r23
    15c4:	8f 93       	push	r24
    15c6:	9f 93       	push	r25
    15c8:	af 93       	push	r26
    15ca:	bf 93       	push	r27
    15cc:	ef 93       	push	r30
    15ce:	ff 93       	push	r31
    15d0:	e0 91 54 28 	lds	r30, 0x2854	; 0x802854 <USART_0_rx_isr_cb>
    15d4:	f0 91 55 28 	lds	r31, 0x2855	; 0x802855 <USART_0_rx_isr_cb+0x1>
    15d8:	30 97       	sbiw	r30, 0x00	; 0
    15da:	09 f0       	breq	.+2      	; 0x15de <__vector_31+0x30>
    15dc:	09 95       	icall
    15de:	ff 91       	pop	r31
    15e0:	ef 91       	pop	r30
    15e2:	bf 91       	pop	r27
    15e4:	af 91       	pop	r26
    15e6:	9f 91       	pop	r25
    15e8:	8f 91       	pop	r24
    15ea:	7f 91       	pop	r23
    15ec:	6f 91       	pop	r22
    15ee:	5f 91       	pop	r21
    15f0:	4f 91       	pop	r20
    15f2:	3f 91       	pop	r19
    15f4:	2f 91       	pop	r18
    15f6:	0f 90       	pop	r0
    15f8:	0f be       	out	0x3f, r0	; 63
    15fa:	0f 90       	pop	r0
    15fc:	1f 90       	pop	r1
    15fe:	18 95       	reti

00001600 <__vector_32>:
    1600:	1f 92       	push	r1
    1602:	0f 92       	push	r0
    1604:	0f b6       	in	r0, 0x3f	; 63
    1606:	0f 92       	push	r0
    1608:	11 24       	eor	r1, r1
    160a:	2f 93       	push	r18
    160c:	3f 93       	push	r19
    160e:	4f 93       	push	r20
    1610:	5f 93       	push	r21
    1612:	6f 93       	push	r22
    1614:	7f 93       	push	r23
    1616:	8f 93       	push	r24
    1618:	9f 93       	push	r25
    161a:	af 93       	push	r26
    161c:	bf 93       	push	r27
    161e:	ef 93       	push	r30
    1620:	ff 93       	push	r31
    1622:	e0 91 52 28 	lds	r30, 0x2852	; 0x802852 <USART_0_udre_isr_cb>
    1626:	f0 91 53 28 	lds	r31, 0x2853	; 0x802853 <USART_0_udre_isr_cb+0x1>
    162a:	30 97       	sbiw	r30, 0x00	; 0
    162c:	09 f0       	breq	.+2      	; 0x1630 <__vector_32+0x30>
    162e:	09 95       	icall
    1630:	ff 91       	pop	r31
    1632:	ef 91       	pop	r30
    1634:	bf 91       	pop	r27
    1636:	af 91       	pop	r26
    1638:	9f 91       	pop	r25
    163a:	8f 91       	pop	r24
    163c:	7f 91       	pop	r23
    163e:	6f 91       	pop	r22
    1640:	5f 91       	pop	r21
    1642:	4f 91       	pop	r20
    1644:	3f 91       	pop	r19
    1646:	2f 91       	pop	r18
    1648:	0f 90       	pop	r0
    164a:	0f be       	out	0x3f, r0	; 63
    164c:	0f 90       	pop	r0
    164e:	1f 90       	pop	r1
    1650:	18 95       	reti

00001652 <USART_0_write>:
void USART_0_write(const uint8_t data)
{
	uint8_t tmphead;

	/* Calculate buffer index */
	tmphead = (USART_0_tx_head + 1) & USART_0_TX_BUFFER_MASK;
    1652:	20 91 c7 30 	lds	r18, 0x30C7	; 0x8030c7 <USART_0_tx_head>
    1656:	2f 5f       	subi	r18, 0xFF	; 255
    1658:	2f 71       	andi	r18, 0x1F	; 31
	/* Wait for free space in buffer */
	while (USART_0_tx_elements == USART_0_TX_BUFFER_SIZE)
    165a:	90 91 c5 30 	lds	r25, 0x30C5	; 0x8030c5 <USART_0_tx_elements>
    165e:	90 32       	cpi	r25, 0x20	; 32
    1660:	e1 f3       	breq	.-8      	; 0x165a <USART_0_write+0x8>
		;
	/* Store data in buffer */
	USART_0_txbuf[tmphead] = data;
    1662:	e2 2f       	mov	r30, r18
    1664:	f0 e0       	ldi	r31, 0x00	; 0
    1666:	e8 53       	subi	r30, 0x38	; 56
    1668:	ff 4c       	sbci	r31, 0xCF	; 207
    166a:	80 83       	st	Z, r24
	/* Store new index */
	USART_0_tx_head = tmphead;
    166c:	20 93 c7 30 	sts	0x30C7, r18	; 0x8030c7 <USART_0_tx_head>
	ENTER_CRITICAL(W);
    1670:	0f b6       	in	r0, 0x3f	; 63
    1672:	f8 94       	cli
    1674:	0f 92       	push	r0
	USART_0_tx_elements++;
    1676:	80 91 c5 30 	lds	r24, 0x30C5	; 0x8030c5 <USART_0_tx_elements>
    167a:	8f 5f       	subi	r24, 0xFF	; 255
    167c:	80 93 c5 30 	sts	0x30C5, r24	; 0x8030c5 <USART_0_tx_elements>
	EXIT_CRITICAL(W);
    1680:	0f 90       	pop	r0
    1682:	0f be       	out	0x3f, r0	; 63
	/* Enable UDRE interrupt */
	USART2.CTRLA |= (1 << USART_DREIE_bp);
    1684:	e0 e4       	ldi	r30, 0x40	; 64
    1686:	f8 e0       	ldi	r31, 0x08	; 8
    1688:	85 81       	ldd	r24, Z+5	; 0x05
    168a:	80 62       	ori	r24, 0x20	; 32
    168c:	85 83       	std	Z+5, r24	; 0x05
    168e:	08 95       	ret

00001690 <USART_0_printCHAR>:

#if defined(__GNUC__)

int USART_0_printCHAR(char character, FILE *stream)
{
	USART_0_write(character);
    1690:	0e 94 29 0b 	call	0x1652	; 0x1652 <USART_0_write>
	return 0;
}
    1694:	80 e0       	ldi	r24, 0x00	; 0
    1696:	90 e0       	ldi	r25, 0x00	; 0
    1698:	08 95       	ret

0000169a <USART_0_init>:
 * \retval 1 the USART init was not successful
 */
int8_t USART_0_init()
{

	USART2.BAUD = (uint16_t)USART2_BAUD_RATE(9600); /* set baud rate register */
    169a:	e0 e4       	ldi	r30, 0x40	; 64
    169c:	f8 e0       	ldi	r31, 0x08	; 8
    169e:	87 e4       	ldi	r24, 0x47	; 71
    16a0:	90 e1       	ldi	r25, 0x10	; 16
    16a2:	80 87       	std	Z+8, r24	; 0x08
    16a4:	91 87       	std	Z+9, r25	; 0x09

	USART2.CTRLA = 0 << USART_ABEIE_bp /* Auto-baud Error Interrupt Enable: disabled */
    16a6:	80 e8       	ldi	r24, 0x80	; 128
    16a8:	85 83       	std	Z+5, r24	; 0x05
			| USART_RS485_OFF_gc /* RS485 Mode disabled */
			| 1 << USART_RXCIE_bp /* Receive Complete Interrupt Enable: disabled */
			| 0 << USART_RXSIE_bp /* Receiver Start Frame Interrupt Enable: disabled */
			| 0 << USART_TXCIE_bp; /* Transmit Complete Interrupt Enable: disabled */

	USART2.CTRLB = 0 << USART_MPCM_bp       /* Multi-processor Communication Mode: disabled */
    16aa:	80 ec       	ldi	r24, 0xC0	; 192
    16ac:	86 83       	std	Z+6, r24	; 0x06
	uint8_t x;

	/* Initialize ringbuffers */
	x = 0;

	USART_0_rx_tail     = x;
    16ae:	10 92 e9 30 	sts	0x30E9, r1	; 0x8030e9 <USART_0_rx_tail>
	USART_0_rx_head     = x;
    16b2:	10 92 ea 30 	sts	0x30EA, r1	; 0x8030ea <USART_0_rx_head>
	USART_0_rx_elements = x;
    16b6:	10 92 e8 30 	sts	0x30E8, r1	; 0x8030e8 <USART_0_rx_elements>
	USART_0_tx_tail     = x;
    16ba:	10 92 c6 30 	sts	0x30C6, r1	; 0x8030c6 <USART_0_tx_tail>
	USART_0_tx_head     = x;
    16be:	10 92 c7 30 	sts	0x30C7, r1	; 0x8030c7 <USART_0_tx_head>
	USART_0_tx_elements = x;
    16c2:	10 92 c5 30 	sts	0x30C5, r1	; 0x8030c5 <USART_0_tx_elements>

#if defined(__GNUC__)
	stdout = &USART_0_stream;
    16c6:	86 e5       	ldi	r24, 0x56	; 86
    16c8:	98 e2       	ldi	r25, 0x28	; 40
    16ca:	80 93 f1 30 	sts	0x30F1, r24	; 0x8030f1 <__iob+0x2>
    16ce:	90 93 f2 30 	sts	0x30F2, r25	; 0x8030f2 <__iob+0x3>
#endif

	return 0;
}
    16d2:	80 e0       	ldi	r24, 0x00	; 0
    16d4:	08 95       	ret

000016d6 <memcpy>:
    16d6:	fb 01       	movw	r30, r22
    16d8:	dc 01       	movw	r26, r24
    16da:	02 c0       	rjmp	.+4      	; 0x16e0 <memcpy+0xa>
    16dc:	01 90       	ld	r0, Z+
    16de:	0d 92       	st	X+, r0
    16e0:	41 50       	subi	r20, 0x01	; 1
    16e2:	50 40       	sbci	r21, 0x00	; 0
    16e4:	d8 f7       	brcc	.-10     	; 0x16dc <memcpy+0x6>
    16e6:	08 95       	ret

000016e8 <strcmp>:
    16e8:	fb 01       	movw	r30, r22
    16ea:	dc 01       	movw	r26, r24
    16ec:	8d 91       	ld	r24, X+
    16ee:	01 90       	ld	r0, Z+
    16f0:	80 19       	sub	r24, r0
    16f2:	01 10       	cpse	r0, r1
    16f4:	d9 f3       	breq	.-10     	; 0x16ec <strcmp+0x4>
    16f6:	99 0b       	sbc	r25, r25
    16f8:	08 95       	ret

000016fa <printf>:
    16fa:	a0 e0       	ldi	r26, 0x00	; 0
    16fc:	b0 e0       	ldi	r27, 0x00	; 0
    16fe:	e3 e8       	ldi	r30, 0x83	; 131
    1700:	fb e0       	ldi	r31, 0x0B	; 11
    1702:	0c 94 34 0e 	jmp	0x1c68	; 0x1c68 <__prologue_saves__+0x20>
    1706:	ae 01       	movw	r20, r28
    1708:	4b 5f       	subi	r20, 0xFB	; 251
    170a:	5f 4f       	sbci	r21, 0xFF	; 255
    170c:	fa 01       	movw	r30, r20
    170e:	61 91       	ld	r22, Z+
    1710:	71 91       	ld	r23, Z+
    1712:	af 01       	movw	r20, r30
    1714:	80 91 f1 30 	lds	r24, 0x30F1	; 0x8030f1 <__iob+0x2>
    1718:	90 91 f2 30 	lds	r25, 0x30F2	; 0x8030f2 <__iob+0x3>
    171c:	0e 94 93 0b 	call	0x1726	; 0x1726 <vfprintf>
    1720:	e2 e0       	ldi	r30, 0x02	; 2
    1722:	0c 94 4d 0e 	jmp	0x1c9a	; 0x1c9a <__epilogue_restores__+0x20>

00001726 <vfprintf>:
    1726:	ab e0       	ldi	r26, 0x0B	; 11
    1728:	b0 e0       	ldi	r27, 0x00	; 0
    172a:	e9 e9       	ldi	r30, 0x99	; 153
    172c:	fb e0       	ldi	r31, 0x0B	; 11
    172e:	0c 94 24 0e 	jmp	0x1c48	; 0x1c48 <__prologue_saves__>
    1732:	6c 01       	movw	r12, r24
    1734:	7b 01       	movw	r14, r22
    1736:	8a 01       	movw	r16, r20
    1738:	fc 01       	movw	r30, r24
    173a:	16 82       	std	Z+6, r1	; 0x06
    173c:	17 82       	std	Z+7, r1	; 0x07
    173e:	83 81       	ldd	r24, Z+3	; 0x03
    1740:	81 ff       	sbrs	r24, 1
    1742:	cc c1       	rjmp	.+920    	; 0x1adc <vfprintf+0x3b6>
    1744:	ce 01       	movw	r24, r28
    1746:	01 96       	adiw	r24, 0x01	; 1
    1748:	3c 01       	movw	r6, r24
    174a:	f6 01       	movw	r30, r12
    174c:	93 81       	ldd	r25, Z+3	; 0x03
    174e:	f7 01       	movw	r30, r14
    1750:	93 fd       	sbrc	r25, 3
    1752:	85 91       	lpm	r24, Z+
    1754:	93 ff       	sbrs	r25, 3
    1756:	81 91       	ld	r24, Z+
    1758:	7f 01       	movw	r14, r30
    175a:	88 23       	and	r24, r24
    175c:	09 f4       	brne	.+2      	; 0x1760 <vfprintf+0x3a>
    175e:	ba c1       	rjmp	.+884    	; 0x1ad4 <vfprintf+0x3ae>
    1760:	85 32       	cpi	r24, 0x25	; 37
    1762:	39 f4       	brne	.+14     	; 0x1772 <vfprintf+0x4c>
    1764:	93 fd       	sbrc	r25, 3
    1766:	85 91       	lpm	r24, Z+
    1768:	93 ff       	sbrs	r25, 3
    176a:	81 91       	ld	r24, Z+
    176c:	7f 01       	movw	r14, r30
    176e:	85 32       	cpi	r24, 0x25	; 37
    1770:	29 f4       	brne	.+10     	; 0x177c <vfprintf+0x56>
    1772:	b6 01       	movw	r22, r12
    1774:	90 e0       	ldi	r25, 0x00	; 0
    1776:	0e 94 8a 0d 	call	0x1b14	; 0x1b14 <fputc>
    177a:	e7 cf       	rjmp	.-50     	; 0x174a <vfprintf+0x24>
    177c:	91 2c       	mov	r9, r1
    177e:	21 2c       	mov	r2, r1
    1780:	31 2c       	mov	r3, r1
    1782:	ff e1       	ldi	r31, 0x1F	; 31
    1784:	f3 15       	cp	r31, r3
    1786:	d8 f0       	brcs	.+54     	; 0x17be <vfprintf+0x98>
    1788:	8b 32       	cpi	r24, 0x2B	; 43
    178a:	79 f0       	breq	.+30     	; 0x17aa <vfprintf+0x84>
    178c:	38 f4       	brcc	.+14     	; 0x179c <vfprintf+0x76>
    178e:	80 32       	cpi	r24, 0x20	; 32
    1790:	79 f0       	breq	.+30     	; 0x17b0 <vfprintf+0x8a>
    1792:	83 32       	cpi	r24, 0x23	; 35
    1794:	a1 f4       	brne	.+40     	; 0x17be <vfprintf+0x98>
    1796:	23 2d       	mov	r18, r3
    1798:	20 61       	ori	r18, 0x10	; 16
    179a:	1d c0       	rjmp	.+58     	; 0x17d6 <vfprintf+0xb0>
    179c:	8d 32       	cpi	r24, 0x2D	; 45
    179e:	61 f0       	breq	.+24     	; 0x17b8 <vfprintf+0x92>
    17a0:	80 33       	cpi	r24, 0x30	; 48
    17a2:	69 f4       	brne	.+26     	; 0x17be <vfprintf+0x98>
    17a4:	23 2d       	mov	r18, r3
    17a6:	21 60       	ori	r18, 0x01	; 1
    17a8:	16 c0       	rjmp	.+44     	; 0x17d6 <vfprintf+0xb0>
    17aa:	83 2d       	mov	r24, r3
    17ac:	82 60       	ori	r24, 0x02	; 2
    17ae:	38 2e       	mov	r3, r24
    17b0:	e3 2d       	mov	r30, r3
    17b2:	e4 60       	ori	r30, 0x04	; 4
    17b4:	3e 2e       	mov	r3, r30
    17b6:	2a c0       	rjmp	.+84     	; 0x180c <vfprintf+0xe6>
    17b8:	f3 2d       	mov	r31, r3
    17ba:	f8 60       	ori	r31, 0x08	; 8
    17bc:	1d c0       	rjmp	.+58     	; 0x17f8 <vfprintf+0xd2>
    17be:	37 fc       	sbrc	r3, 7
    17c0:	2d c0       	rjmp	.+90     	; 0x181c <vfprintf+0xf6>
    17c2:	20 ed       	ldi	r18, 0xD0	; 208
    17c4:	28 0f       	add	r18, r24
    17c6:	2a 30       	cpi	r18, 0x0A	; 10
    17c8:	40 f0       	brcs	.+16     	; 0x17da <vfprintf+0xb4>
    17ca:	8e 32       	cpi	r24, 0x2E	; 46
    17cc:	b9 f4       	brne	.+46     	; 0x17fc <vfprintf+0xd6>
    17ce:	36 fc       	sbrc	r3, 6
    17d0:	81 c1       	rjmp	.+770    	; 0x1ad4 <vfprintf+0x3ae>
    17d2:	23 2d       	mov	r18, r3
    17d4:	20 64       	ori	r18, 0x40	; 64
    17d6:	32 2e       	mov	r3, r18
    17d8:	19 c0       	rjmp	.+50     	; 0x180c <vfprintf+0xe6>
    17da:	36 fe       	sbrs	r3, 6
    17dc:	06 c0       	rjmp	.+12     	; 0x17ea <vfprintf+0xc4>
    17de:	8a e0       	ldi	r24, 0x0A	; 10
    17e0:	98 9e       	mul	r9, r24
    17e2:	20 0d       	add	r18, r0
    17e4:	11 24       	eor	r1, r1
    17e6:	92 2e       	mov	r9, r18
    17e8:	11 c0       	rjmp	.+34     	; 0x180c <vfprintf+0xe6>
    17ea:	ea e0       	ldi	r30, 0x0A	; 10
    17ec:	2e 9e       	mul	r2, r30
    17ee:	20 0d       	add	r18, r0
    17f0:	11 24       	eor	r1, r1
    17f2:	22 2e       	mov	r2, r18
    17f4:	f3 2d       	mov	r31, r3
    17f6:	f0 62       	ori	r31, 0x20	; 32
    17f8:	3f 2e       	mov	r3, r31
    17fa:	08 c0       	rjmp	.+16     	; 0x180c <vfprintf+0xe6>
    17fc:	8c 36       	cpi	r24, 0x6C	; 108
    17fe:	21 f4       	brne	.+8      	; 0x1808 <vfprintf+0xe2>
    1800:	83 2d       	mov	r24, r3
    1802:	80 68       	ori	r24, 0x80	; 128
    1804:	38 2e       	mov	r3, r24
    1806:	02 c0       	rjmp	.+4      	; 0x180c <vfprintf+0xe6>
    1808:	88 36       	cpi	r24, 0x68	; 104
    180a:	41 f4       	brne	.+16     	; 0x181c <vfprintf+0xf6>
    180c:	f7 01       	movw	r30, r14
    180e:	93 fd       	sbrc	r25, 3
    1810:	85 91       	lpm	r24, Z+
    1812:	93 ff       	sbrs	r25, 3
    1814:	81 91       	ld	r24, Z+
    1816:	7f 01       	movw	r14, r30
    1818:	81 11       	cpse	r24, r1
    181a:	b3 cf       	rjmp	.-154    	; 0x1782 <vfprintf+0x5c>
    181c:	98 2f       	mov	r25, r24
    181e:	9f 7d       	andi	r25, 0xDF	; 223
    1820:	95 54       	subi	r25, 0x45	; 69
    1822:	93 30       	cpi	r25, 0x03	; 3
    1824:	28 f4       	brcc	.+10     	; 0x1830 <vfprintf+0x10a>
    1826:	0c 5f       	subi	r16, 0xFC	; 252
    1828:	1f 4f       	sbci	r17, 0xFF	; 255
    182a:	9f e3       	ldi	r25, 0x3F	; 63
    182c:	99 83       	std	Y+1, r25	; 0x01
    182e:	0d c0       	rjmp	.+26     	; 0x184a <vfprintf+0x124>
    1830:	83 36       	cpi	r24, 0x63	; 99
    1832:	31 f0       	breq	.+12     	; 0x1840 <vfprintf+0x11a>
    1834:	83 37       	cpi	r24, 0x73	; 115
    1836:	71 f0       	breq	.+28     	; 0x1854 <vfprintf+0x12e>
    1838:	83 35       	cpi	r24, 0x53	; 83
    183a:	09 f0       	breq	.+2      	; 0x183e <vfprintf+0x118>
    183c:	59 c0       	rjmp	.+178    	; 0x18f0 <vfprintf+0x1ca>
    183e:	21 c0       	rjmp	.+66     	; 0x1882 <vfprintf+0x15c>
    1840:	f8 01       	movw	r30, r16
    1842:	80 81       	ld	r24, Z
    1844:	89 83       	std	Y+1, r24	; 0x01
    1846:	0e 5f       	subi	r16, 0xFE	; 254
    1848:	1f 4f       	sbci	r17, 0xFF	; 255
    184a:	88 24       	eor	r8, r8
    184c:	83 94       	inc	r8
    184e:	91 2c       	mov	r9, r1
    1850:	53 01       	movw	r10, r6
    1852:	13 c0       	rjmp	.+38     	; 0x187a <vfprintf+0x154>
    1854:	28 01       	movw	r4, r16
    1856:	f2 e0       	ldi	r31, 0x02	; 2
    1858:	4f 0e       	add	r4, r31
    185a:	51 1c       	adc	r5, r1
    185c:	f8 01       	movw	r30, r16
    185e:	a0 80       	ld	r10, Z
    1860:	b1 80       	ldd	r11, Z+1	; 0x01
    1862:	36 fe       	sbrs	r3, 6
    1864:	03 c0       	rjmp	.+6      	; 0x186c <vfprintf+0x146>
    1866:	69 2d       	mov	r22, r9
    1868:	70 e0       	ldi	r23, 0x00	; 0
    186a:	02 c0       	rjmp	.+4      	; 0x1870 <vfprintf+0x14a>
    186c:	6f ef       	ldi	r22, 0xFF	; 255
    186e:	7f ef       	ldi	r23, 0xFF	; 255
    1870:	c5 01       	movw	r24, r10
    1872:	0e 94 7f 0d 	call	0x1afe	; 0x1afe <strnlen>
    1876:	4c 01       	movw	r8, r24
    1878:	82 01       	movw	r16, r4
    187a:	f3 2d       	mov	r31, r3
    187c:	ff 77       	andi	r31, 0x7F	; 127
    187e:	3f 2e       	mov	r3, r31
    1880:	16 c0       	rjmp	.+44     	; 0x18ae <vfprintf+0x188>
    1882:	28 01       	movw	r4, r16
    1884:	22 e0       	ldi	r18, 0x02	; 2
    1886:	42 0e       	add	r4, r18
    1888:	51 1c       	adc	r5, r1
    188a:	f8 01       	movw	r30, r16
    188c:	a0 80       	ld	r10, Z
    188e:	b1 80       	ldd	r11, Z+1	; 0x01
    1890:	36 fe       	sbrs	r3, 6
    1892:	03 c0       	rjmp	.+6      	; 0x189a <vfprintf+0x174>
    1894:	69 2d       	mov	r22, r9
    1896:	70 e0       	ldi	r23, 0x00	; 0
    1898:	02 c0       	rjmp	.+4      	; 0x189e <vfprintf+0x178>
    189a:	6f ef       	ldi	r22, 0xFF	; 255
    189c:	7f ef       	ldi	r23, 0xFF	; 255
    189e:	c5 01       	movw	r24, r10
    18a0:	0e 94 74 0d 	call	0x1ae8	; 0x1ae8 <strnlen_P>
    18a4:	4c 01       	movw	r8, r24
    18a6:	f3 2d       	mov	r31, r3
    18a8:	f0 68       	ori	r31, 0x80	; 128
    18aa:	3f 2e       	mov	r3, r31
    18ac:	82 01       	movw	r16, r4
    18ae:	33 fc       	sbrc	r3, 3
    18b0:	1b c0       	rjmp	.+54     	; 0x18e8 <vfprintf+0x1c2>
    18b2:	82 2d       	mov	r24, r2
    18b4:	90 e0       	ldi	r25, 0x00	; 0
    18b6:	88 16       	cp	r8, r24
    18b8:	99 06       	cpc	r9, r25
    18ba:	b0 f4       	brcc	.+44     	; 0x18e8 <vfprintf+0x1c2>
    18bc:	b6 01       	movw	r22, r12
    18be:	80 e2       	ldi	r24, 0x20	; 32
    18c0:	90 e0       	ldi	r25, 0x00	; 0
    18c2:	0e 94 8a 0d 	call	0x1b14	; 0x1b14 <fputc>
    18c6:	2a 94       	dec	r2
    18c8:	f4 cf       	rjmp	.-24     	; 0x18b2 <vfprintf+0x18c>
    18ca:	f5 01       	movw	r30, r10
    18cc:	37 fc       	sbrc	r3, 7
    18ce:	85 91       	lpm	r24, Z+
    18d0:	37 fe       	sbrs	r3, 7
    18d2:	81 91       	ld	r24, Z+
    18d4:	5f 01       	movw	r10, r30
    18d6:	b6 01       	movw	r22, r12
    18d8:	90 e0       	ldi	r25, 0x00	; 0
    18da:	0e 94 8a 0d 	call	0x1b14	; 0x1b14 <fputc>
    18de:	21 10       	cpse	r2, r1
    18e0:	2a 94       	dec	r2
    18e2:	21 e0       	ldi	r18, 0x01	; 1
    18e4:	82 1a       	sub	r8, r18
    18e6:	91 08       	sbc	r9, r1
    18e8:	81 14       	cp	r8, r1
    18ea:	91 04       	cpc	r9, r1
    18ec:	71 f7       	brne	.-36     	; 0x18ca <vfprintf+0x1a4>
    18ee:	e8 c0       	rjmp	.+464    	; 0x1ac0 <vfprintf+0x39a>
    18f0:	84 36       	cpi	r24, 0x64	; 100
    18f2:	11 f0       	breq	.+4      	; 0x18f8 <vfprintf+0x1d2>
    18f4:	89 36       	cpi	r24, 0x69	; 105
    18f6:	41 f5       	brne	.+80     	; 0x1948 <vfprintf+0x222>
    18f8:	f8 01       	movw	r30, r16
    18fa:	37 fe       	sbrs	r3, 7
    18fc:	07 c0       	rjmp	.+14     	; 0x190c <vfprintf+0x1e6>
    18fe:	60 81       	ld	r22, Z
    1900:	71 81       	ldd	r23, Z+1	; 0x01
    1902:	82 81       	ldd	r24, Z+2	; 0x02
    1904:	93 81       	ldd	r25, Z+3	; 0x03
    1906:	0c 5f       	subi	r16, 0xFC	; 252
    1908:	1f 4f       	sbci	r17, 0xFF	; 255
    190a:	08 c0       	rjmp	.+16     	; 0x191c <vfprintf+0x1f6>
    190c:	60 81       	ld	r22, Z
    190e:	71 81       	ldd	r23, Z+1	; 0x01
    1910:	07 2e       	mov	r0, r23
    1912:	00 0c       	add	r0, r0
    1914:	88 0b       	sbc	r24, r24
    1916:	99 0b       	sbc	r25, r25
    1918:	0e 5f       	subi	r16, 0xFE	; 254
    191a:	1f 4f       	sbci	r17, 0xFF	; 255
    191c:	f3 2d       	mov	r31, r3
    191e:	ff 76       	andi	r31, 0x6F	; 111
    1920:	3f 2e       	mov	r3, r31
    1922:	97 ff       	sbrs	r25, 7
    1924:	09 c0       	rjmp	.+18     	; 0x1938 <vfprintf+0x212>
    1926:	90 95       	com	r25
    1928:	80 95       	com	r24
    192a:	70 95       	com	r23
    192c:	61 95       	neg	r22
    192e:	7f 4f       	sbci	r23, 0xFF	; 255
    1930:	8f 4f       	sbci	r24, 0xFF	; 255
    1932:	9f 4f       	sbci	r25, 0xFF	; 255
    1934:	f0 68       	ori	r31, 0x80	; 128
    1936:	3f 2e       	mov	r3, r31
    1938:	2a e0       	ldi	r18, 0x0A	; 10
    193a:	30 e0       	ldi	r19, 0x00	; 0
    193c:	a3 01       	movw	r20, r6
    193e:	0e 94 c6 0d 	call	0x1b8c	; 0x1b8c <__ultoa_invert>
    1942:	88 2e       	mov	r8, r24
    1944:	86 18       	sub	r8, r6
    1946:	45 c0       	rjmp	.+138    	; 0x19d2 <vfprintf+0x2ac>
    1948:	85 37       	cpi	r24, 0x75	; 117
    194a:	31 f4       	brne	.+12     	; 0x1958 <vfprintf+0x232>
    194c:	23 2d       	mov	r18, r3
    194e:	2f 7e       	andi	r18, 0xEF	; 239
    1950:	b2 2e       	mov	r11, r18
    1952:	2a e0       	ldi	r18, 0x0A	; 10
    1954:	30 e0       	ldi	r19, 0x00	; 0
    1956:	25 c0       	rjmp	.+74     	; 0x19a2 <vfprintf+0x27c>
    1958:	93 2d       	mov	r25, r3
    195a:	99 7f       	andi	r25, 0xF9	; 249
    195c:	b9 2e       	mov	r11, r25
    195e:	8f 36       	cpi	r24, 0x6F	; 111
    1960:	c1 f0       	breq	.+48     	; 0x1992 <vfprintf+0x26c>
    1962:	18 f4       	brcc	.+6      	; 0x196a <vfprintf+0x244>
    1964:	88 35       	cpi	r24, 0x58	; 88
    1966:	79 f0       	breq	.+30     	; 0x1986 <vfprintf+0x260>
    1968:	b5 c0       	rjmp	.+362    	; 0x1ad4 <vfprintf+0x3ae>
    196a:	80 37       	cpi	r24, 0x70	; 112
    196c:	19 f0       	breq	.+6      	; 0x1974 <vfprintf+0x24e>
    196e:	88 37       	cpi	r24, 0x78	; 120
    1970:	21 f0       	breq	.+8      	; 0x197a <vfprintf+0x254>
    1972:	b0 c0       	rjmp	.+352    	; 0x1ad4 <vfprintf+0x3ae>
    1974:	e9 2f       	mov	r30, r25
    1976:	e0 61       	ori	r30, 0x10	; 16
    1978:	be 2e       	mov	r11, r30
    197a:	b4 fe       	sbrs	r11, 4
    197c:	0d c0       	rjmp	.+26     	; 0x1998 <vfprintf+0x272>
    197e:	fb 2d       	mov	r31, r11
    1980:	f4 60       	ori	r31, 0x04	; 4
    1982:	bf 2e       	mov	r11, r31
    1984:	09 c0       	rjmp	.+18     	; 0x1998 <vfprintf+0x272>
    1986:	34 fe       	sbrs	r3, 4
    1988:	0a c0       	rjmp	.+20     	; 0x199e <vfprintf+0x278>
    198a:	29 2f       	mov	r18, r25
    198c:	26 60       	ori	r18, 0x06	; 6
    198e:	b2 2e       	mov	r11, r18
    1990:	06 c0       	rjmp	.+12     	; 0x199e <vfprintf+0x278>
    1992:	28 e0       	ldi	r18, 0x08	; 8
    1994:	30 e0       	ldi	r19, 0x00	; 0
    1996:	05 c0       	rjmp	.+10     	; 0x19a2 <vfprintf+0x27c>
    1998:	20 e1       	ldi	r18, 0x10	; 16
    199a:	30 e0       	ldi	r19, 0x00	; 0
    199c:	02 c0       	rjmp	.+4      	; 0x19a2 <vfprintf+0x27c>
    199e:	20 e1       	ldi	r18, 0x10	; 16
    19a0:	32 e0       	ldi	r19, 0x02	; 2
    19a2:	f8 01       	movw	r30, r16
    19a4:	b7 fe       	sbrs	r11, 7
    19a6:	07 c0       	rjmp	.+14     	; 0x19b6 <vfprintf+0x290>
    19a8:	60 81       	ld	r22, Z
    19aa:	71 81       	ldd	r23, Z+1	; 0x01
    19ac:	82 81       	ldd	r24, Z+2	; 0x02
    19ae:	93 81       	ldd	r25, Z+3	; 0x03
    19b0:	0c 5f       	subi	r16, 0xFC	; 252
    19b2:	1f 4f       	sbci	r17, 0xFF	; 255
    19b4:	06 c0       	rjmp	.+12     	; 0x19c2 <vfprintf+0x29c>
    19b6:	60 81       	ld	r22, Z
    19b8:	71 81       	ldd	r23, Z+1	; 0x01
    19ba:	80 e0       	ldi	r24, 0x00	; 0
    19bc:	90 e0       	ldi	r25, 0x00	; 0
    19be:	0e 5f       	subi	r16, 0xFE	; 254
    19c0:	1f 4f       	sbci	r17, 0xFF	; 255
    19c2:	a3 01       	movw	r20, r6
    19c4:	0e 94 c6 0d 	call	0x1b8c	; 0x1b8c <__ultoa_invert>
    19c8:	88 2e       	mov	r8, r24
    19ca:	86 18       	sub	r8, r6
    19cc:	fb 2d       	mov	r31, r11
    19ce:	ff 77       	andi	r31, 0x7F	; 127
    19d0:	3f 2e       	mov	r3, r31
    19d2:	36 fe       	sbrs	r3, 6
    19d4:	0d c0       	rjmp	.+26     	; 0x19f0 <vfprintf+0x2ca>
    19d6:	23 2d       	mov	r18, r3
    19d8:	2e 7f       	andi	r18, 0xFE	; 254
    19da:	a2 2e       	mov	r10, r18
    19dc:	89 14       	cp	r8, r9
    19de:	58 f4       	brcc	.+22     	; 0x19f6 <vfprintf+0x2d0>
    19e0:	34 fe       	sbrs	r3, 4
    19e2:	0b c0       	rjmp	.+22     	; 0x19fa <vfprintf+0x2d4>
    19e4:	32 fc       	sbrc	r3, 2
    19e6:	09 c0       	rjmp	.+18     	; 0x19fa <vfprintf+0x2d4>
    19e8:	83 2d       	mov	r24, r3
    19ea:	8e 7e       	andi	r24, 0xEE	; 238
    19ec:	a8 2e       	mov	r10, r24
    19ee:	05 c0       	rjmp	.+10     	; 0x19fa <vfprintf+0x2d4>
    19f0:	b8 2c       	mov	r11, r8
    19f2:	a3 2c       	mov	r10, r3
    19f4:	03 c0       	rjmp	.+6      	; 0x19fc <vfprintf+0x2d6>
    19f6:	b8 2c       	mov	r11, r8
    19f8:	01 c0       	rjmp	.+2      	; 0x19fc <vfprintf+0x2d6>
    19fa:	b9 2c       	mov	r11, r9
    19fc:	a4 fe       	sbrs	r10, 4
    19fe:	0f c0       	rjmp	.+30     	; 0x1a1e <vfprintf+0x2f8>
    1a00:	fe 01       	movw	r30, r28
    1a02:	e8 0d       	add	r30, r8
    1a04:	f1 1d       	adc	r31, r1
    1a06:	80 81       	ld	r24, Z
    1a08:	80 33       	cpi	r24, 0x30	; 48
    1a0a:	21 f4       	brne	.+8      	; 0x1a14 <vfprintf+0x2ee>
    1a0c:	9a 2d       	mov	r25, r10
    1a0e:	99 7e       	andi	r25, 0xE9	; 233
    1a10:	a9 2e       	mov	r10, r25
    1a12:	09 c0       	rjmp	.+18     	; 0x1a26 <vfprintf+0x300>
    1a14:	a2 fe       	sbrs	r10, 2
    1a16:	06 c0       	rjmp	.+12     	; 0x1a24 <vfprintf+0x2fe>
    1a18:	b3 94       	inc	r11
    1a1a:	b3 94       	inc	r11
    1a1c:	04 c0       	rjmp	.+8      	; 0x1a26 <vfprintf+0x300>
    1a1e:	8a 2d       	mov	r24, r10
    1a20:	86 78       	andi	r24, 0x86	; 134
    1a22:	09 f0       	breq	.+2      	; 0x1a26 <vfprintf+0x300>
    1a24:	b3 94       	inc	r11
    1a26:	a3 fc       	sbrc	r10, 3
    1a28:	11 c0       	rjmp	.+34     	; 0x1a4c <vfprintf+0x326>
    1a2a:	a0 fe       	sbrs	r10, 0
    1a2c:	06 c0       	rjmp	.+12     	; 0x1a3a <vfprintf+0x314>
    1a2e:	b2 14       	cp	r11, r2
    1a30:	88 f4       	brcc	.+34     	; 0x1a54 <vfprintf+0x32e>
    1a32:	28 0c       	add	r2, r8
    1a34:	92 2c       	mov	r9, r2
    1a36:	9b 18       	sub	r9, r11
    1a38:	0e c0       	rjmp	.+28     	; 0x1a56 <vfprintf+0x330>
    1a3a:	b2 14       	cp	r11, r2
    1a3c:	60 f4       	brcc	.+24     	; 0x1a56 <vfprintf+0x330>
    1a3e:	b6 01       	movw	r22, r12
    1a40:	80 e2       	ldi	r24, 0x20	; 32
    1a42:	90 e0       	ldi	r25, 0x00	; 0
    1a44:	0e 94 8a 0d 	call	0x1b14	; 0x1b14 <fputc>
    1a48:	b3 94       	inc	r11
    1a4a:	f7 cf       	rjmp	.-18     	; 0x1a3a <vfprintf+0x314>
    1a4c:	b2 14       	cp	r11, r2
    1a4e:	18 f4       	brcc	.+6      	; 0x1a56 <vfprintf+0x330>
    1a50:	2b 18       	sub	r2, r11
    1a52:	02 c0       	rjmp	.+4      	; 0x1a58 <vfprintf+0x332>
    1a54:	98 2c       	mov	r9, r8
    1a56:	21 2c       	mov	r2, r1
    1a58:	a4 fe       	sbrs	r10, 4
    1a5a:	10 c0       	rjmp	.+32     	; 0x1a7c <vfprintf+0x356>
    1a5c:	b6 01       	movw	r22, r12
    1a5e:	80 e3       	ldi	r24, 0x30	; 48
    1a60:	90 e0       	ldi	r25, 0x00	; 0
    1a62:	0e 94 8a 0d 	call	0x1b14	; 0x1b14 <fputc>
    1a66:	a2 fe       	sbrs	r10, 2
    1a68:	17 c0       	rjmp	.+46     	; 0x1a98 <vfprintf+0x372>
    1a6a:	a1 fc       	sbrc	r10, 1
    1a6c:	03 c0       	rjmp	.+6      	; 0x1a74 <vfprintf+0x34e>
    1a6e:	88 e7       	ldi	r24, 0x78	; 120
    1a70:	90 e0       	ldi	r25, 0x00	; 0
    1a72:	02 c0       	rjmp	.+4      	; 0x1a78 <vfprintf+0x352>
    1a74:	88 e5       	ldi	r24, 0x58	; 88
    1a76:	90 e0       	ldi	r25, 0x00	; 0
    1a78:	b6 01       	movw	r22, r12
    1a7a:	0c c0       	rjmp	.+24     	; 0x1a94 <vfprintf+0x36e>
    1a7c:	8a 2d       	mov	r24, r10
    1a7e:	86 78       	andi	r24, 0x86	; 134
    1a80:	59 f0       	breq	.+22     	; 0x1a98 <vfprintf+0x372>
    1a82:	a1 fe       	sbrs	r10, 1
    1a84:	02 c0       	rjmp	.+4      	; 0x1a8a <vfprintf+0x364>
    1a86:	8b e2       	ldi	r24, 0x2B	; 43
    1a88:	01 c0       	rjmp	.+2      	; 0x1a8c <vfprintf+0x366>
    1a8a:	80 e2       	ldi	r24, 0x20	; 32
    1a8c:	a7 fc       	sbrc	r10, 7
    1a8e:	8d e2       	ldi	r24, 0x2D	; 45
    1a90:	b6 01       	movw	r22, r12
    1a92:	90 e0       	ldi	r25, 0x00	; 0
    1a94:	0e 94 8a 0d 	call	0x1b14	; 0x1b14 <fputc>
    1a98:	89 14       	cp	r8, r9
    1a9a:	38 f4       	brcc	.+14     	; 0x1aaa <vfprintf+0x384>
    1a9c:	b6 01       	movw	r22, r12
    1a9e:	80 e3       	ldi	r24, 0x30	; 48
    1aa0:	90 e0       	ldi	r25, 0x00	; 0
    1aa2:	0e 94 8a 0d 	call	0x1b14	; 0x1b14 <fputc>
    1aa6:	9a 94       	dec	r9
    1aa8:	f7 cf       	rjmp	.-18     	; 0x1a98 <vfprintf+0x372>
    1aaa:	8a 94       	dec	r8
    1aac:	f3 01       	movw	r30, r6
    1aae:	e8 0d       	add	r30, r8
    1ab0:	f1 1d       	adc	r31, r1
    1ab2:	80 81       	ld	r24, Z
    1ab4:	b6 01       	movw	r22, r12
    1ab6:	90 e0       	ldi	r25, 0x00	; 0
    1ab8:	0e 94 8a 0d 	call	0x1b14	; 0x1b14 <fputc>
    1abc:	81 10       	cpse	r8, r1
    1abe:	f5 cf       	rjmp	.-22     	; 0x1aaa <vfprintf+0x384>
    1ac0:	22 20       	and	r2, r2
    1ac2:	09 f4       	brne	.+2      	; 0x1ac6 <vfprintf+0x3a0>
    1ac4:	42 ce       	rjmp	.-892    	; 0x174a <vfprintf+0x24>
    1ac6:	b6 01       	movw	r22, r12
    1ac8:	80 e2       	ldi	r24, 0x20	; 32
    1aca:	90 e0       	ldi	r25, 0x00	; 0
    1acc:	0e 94 8a 0d 	call	0x1b14	; 0x1b14 <fputc>
    1ad0:	2a 94       	dec	r2
    1ad2:	f6 cf       	rjmp	.-20     	; 0x1ac0 <vfprintf+0x39a>
    1ad4:	f6 01       	movw	r30, r12
    1ad6:	86 81       	ldd	r24, Z+6	; 0x06
    1ad8:	97 81       	ldd	r25, Z+7	; 0x07
    1ada:	02 c0       	rjmp	.+4      	; 0x1ae0 <vfprintf+0x3ba>
    1adc:	8f ef       	ldi	r24, 0xFF	; 255
    1ade:	9f ef       	ldi	r25, 0xFF	; 255
    1ae0:	2b 96       	adiw	r28, 0x0b	; 11
    1ae2:	e2 e1       	ldi	r30, 0x12	; 18
    1ae4:	0c 94 3d 0e 	jmp	0x1c7a	; 0x1c7a <__epilogue_restores__>

00001ae8 <strnlen_P>:
    1ae8:	fc 01       	movw	r30, r24
    1aea:	05 90       	lpm	r0, Z+
    1aec:	61 50       	subi	r22, 0x01	; 1
    1aee:	70 40       	sbci	r23, 0x00	; 0
    1af0:	01 10       	cpse	r0, r1
    1af2:	d8 f7       	brcc	.-10     	; 0x1aea <strnlen_P+0x2>
    1af4:	80 95       	com	r24
    1af6:	90 95       	com	r25
    1af8:	8e 0f       	add	r24, r30
    1afa:	9f 1f       	adc	r25, r31
    1afc:	08 95       	ret

00001afe <strnlen>:
    1afe:	fc 01       	movw	r30, r24
    1b00:	61 50       	subi	r22, 0x01	; 1
    1b02:	70 40       	sbci	r23, 0x00	; 0
    1b04:	01 90       	ld	r0, Z+
    1b06:	01 10       	cpse	r0, r1
    1b08:	d8 f7       	brcc	.-10     	; 0x1b00 <strnlen+0x2>
    1b0a:	80 95       	com	r24
    1b0c:	90 95       	com	r25
    1b0e:	8e 0f       	add	r24, r30
    1b10:	9f 1f       	adc	r25, r31
    1b12:	08 95       	ret

00001b14 <fputc>:
    1b14:	0f 93       	push	r16
    1b16:	1f 93       	push	r17
    1b18:	cf 93       	push	r28
    1b1a:	df 93       	push	r29
    1b1c:	fb 01       	movw	r30, r22
    1b1e:	23 81       	ldd	r18, Z+3	; 0x03
    1b20:	21 fd       	sbrc	r18, 1
    1b22:	03 c0       	rjmp	.+6      	; 0x1b2a <fputc+0x16>
    1b24:	8f ef       	ldi	r24, 0xFF	; 255
    1b26:	9f ef       	ldi	r25, 0xFF	; 255
    1b28:	2c c0       	rjmp	.+88     	; 0x1b82 <fputc+0x6e>
    1b2a:	22 ff       	sbrs	r18, 2
    1b2c:	16 c0       	rjmp	.+44     	; 0x1b5a <fputc+0x46>
    1b2e:	46 81       	ldd	r20, Z+6	; 0x06
    1b30:	57 81       	ldd	r21, Z+7	; 0x07
    1b32:	24 81       	ldd	r18, Z+4	; 0x04
    1b34:	35 81       	ldd	r19, Z+5	; 0x05
    1b36:	42 17       	cp	r20, r18
    1b38:	53 07       	cpc	r21, r19
    1b3a:	44 f4       	brge	.+16     	; 0x1b4c <fputc+0x38>
    1b3c:	a0 81       	ld	r26, Z
    1b3e:	b1 81       	ldd	r27, Z+1	; 0x01
    1b40:	9d 01       	movw	r18, r26
    1b42:	2f 5f       	subi	r18, 0xFF	; 255
    1b44:	3f 4f       	sbci	r19, 0xFF	; 255
    1b46:	20 83       	st	Z, r18
    1b48:	31 83       	std	Z+1, r19	; 0x01
    1b4a:	8c 93       	st	X, r24
    1b4c:	26 81       	ldd	r18, Z+6	; 0x06
    1b4e:	37 81       	ldd	r19, Z+7	; 0x07
    1b50:	2f 5f       	subi	r18, 0xFF	; 255
    1b52:	3f 4f       	sbci	r19, 0xFF	; 255
    1b54:	26 83       	std	Z+6, r18	; 0x06
    1b56:	37 83       	std	Z+7, r19	; 0x07
    1b58:	14 c0       	rjmp	.+40     	; 0x1b82 <fputc+0x6e>
    1b5a:	8b 01       	movw	r16, r22
    1b5c:	ec 01       	movw	r28, r24
    1b5e:	fb 01       	movw	r30, r22
    1b60:	00 84       	ldd	r0, Z+8	; 0x08
    1b62:	f1 85       	ldd	r31, Z+9	; 0x09
    1b64:	e0 2d       	mov	r30, r0
    1b66:	09 95       	icall
    1b68:	89 2b       	or	r24, r25
    1b6a:	e1 f6       	brne	.-72     	; 0x1b24 <fputc+0x10>
    1b6c:	d8 01       	movw	r26, r16
    1b6e:	16 96       	adiw	r26, 0x06	; 6
    1b70:	8d 91       	ld	r24, X+
    1b72:	9c 91       	ld	r25, X
    1b74:	17 97       	sbiw	r26, 0x07	; 7
    1b76:	01 96       	adiw	r24, 0x01	; 1
    1b78:	16 96       	adiw	r26, 0x06	; 6
    1b7a:	8d 93       	st	X+, r24
    1b7c:	9c 93       	st	X, r25
    1b7e:	17 97       	sbiw	r26, 0x07	; 7
    1b80:	ce 01       	movw	r24, r28
    1b82:	df 91       	pop	r29
    1b84:	cf 91       	pop	r28
    1b86:	1f 91       	pop	r17
    1b88:	0f 91       	pop	r16
    1b8a:	08 95       	ret

00001b8c <__ultoa_invert>:
    1b8c:	fa 01       	movw	r30, r20
    1b8e:	aa 27       	eor	r26, r26
    1b90:	28 30       	cpi	r18, 0x08	; 8
    1b92:	51 f1       	breq	.+84     	; 0x1be8 <__ultoa_invert+0x5c>
    1b94:	20 31       	cpi	r18, 0x10	; 16
    1b96:	81 f1       	breq	.+96     	; 0x1bf8 <__ultoa_invert+0x6c>
    1b98:	e8 94       	clt
    1b9a:	6f 93       	push	r22
    1b9c:	6e 7f       	andi	r22, 0xFE	; 254
    1b9e:	6e 5f       	subi	r22, 0xFE	; 254
    1ba0:	7f 4f       	sbci	r23, 0xFF	; 255
    1ba2:	8f 4f       	sbci	r24, 0xFF	; 255
    1ba4:	9f 4f       	sbci	r25, 0xFF	; 255
    1ba6:	af 4f       	sbci	r26, 0xFF	; 255
    1ba8:	b1 e0       	ldi	r27, 0x01	; 1
    1baa:	3e d0       	rcall	.+124    	; 0x1c28 <__ultoa_invert+0x9c>
    1bac:	b4 e0       	ldi	r27, 0x04	; 4
    1bae:	3c d0       	rcall	.+120    	; 0x1c28 <__ultoa_invert+0x9c>
    1bb0:	67 0f       	add	r22, r23
    1bb2:	78 1f       	adc	r23, r24
    1bb4:	89 1f       	adc	r24, r25
    1bb6:	9a 1f       	adc	r25, r26
    1bb8:	a1 1d       	adc	r26, r1
    1bba:	68 0f       	add	r22, r24
    1bbc:	79 1f       	adc	r23, r25
    1bbe:	8a 1f       	adc	r24, r26
    1bc0:	91 1d       	adc	r25, r1
    1bc2:	a1 1d       	adc	r26, r1
    1bc4:	6a 0f       	add	r22, r26
    1bc6:	71 1d       	adc	r23, r1
    1bc8:	81 1d       	adc	r24, r1
    1bca:	91 1d       	adc	r25, r1
    1bcc:	a1 1d       	adc	r26, r1
    1bce:	20 d0       	rcall	.+64     	; 0x1c10 <__ultoa_invert+0x84>
    1bd0:	09 f4       	brne	.+2      	; 0x1bd4 <__ultoa_invert+0x48>
    1bd2:	68 94       	set
    1bd4:	3f 91       	pop	r19
    1bd6:	2a e0       	ldi	r18, 0x0A	; 10
    1bd8:	26 9f       	mul	r18, r22
    1bda:	11 24       	eor	r1, r1
    1bdc:	30 19       	sub	r19, r0
    1bde:	30 5d       	subi	r19, 0xD0	; 208
    1be0:	31 93       	st	Z+, r19
    1be2:	de f6       	brtc	.-74     	; 0x1b9a <__ultoa_invert+0xe>
    1be4:	cf 01       	movw	r24, r30
    1be6:	08 95       	ret
    1be8:	46 2f       	mov	r20, r22
    1bea:	47 70       	andi	r20, 0x07	; 7
    1bec:	40 5d       	subi	r20, 0xD0	; 208
    1bee:	41 93       	st	Z+, r20
    1bf0:	b3 e0       	ldi	r27, 0x03	; 3
    1bf2:	0f d0       	rcall	.+30     	; 0x1c12 <__ultoa_invert+0x86>
    1bf4:	c9 f7       	brne	.-14     	; 0x1be8 <__ultoa_invert+0x5c>
    1bf6:	f6 cf       	rjmp	.-20     	; 0x1be4 <__ultoa_invert+0x58>
    1bf8:	46 2f       	mov	r20, r22
    1bfa:	4f 70       	andi	r20, 0x0F	; 15
    1bfc:	40 5d       	subi	r20, 0xD0	; 208
    1bfe:	4a 33       	cpi	r20, 0x3A	; 58
    1c00:	18 f0       	brcs	.+6      	; 0x1c08 <__ultoa_invert+0x7c>
    1c02:	49 5d       	subi	r20, 0xD9	; 217
    1c04:	31 fd       	sbrc	r19, 1
    1c06:	40 52       	subi	r20, 0x20	; 32
    1c08:	41 93       	st	Z+, r20
    1c0a:	02 d0       	rcall	.+4      	; 0x1c10 <__ultoa_invert+0x84>
    1c0c:	a9 f7       	brne	.-22     	; 0x1bf8 <__ultoa_invert+0x6c>
    1c0e:	ea cf       	rjmp	.-44     	; 0x1be4 <__ultoa_invert+0x58>
    1c10:	b4 e0       	ldi	r27, 0x04	; 4
    1c12:	a6 95       	lsr	r26
    1c14:	97 95       	ror	r25
    1c16:	87 95       	ror	r24
    1c18:	77 95       	ror	r23
    1c1a:	67 95       	ror	r22
    1c1c:	ba 95       	dec	r27
    1c1e:	c9 f7       	brne	.-14     	; 0x1c12 <__ultoa_invert+0x86>
    1c20:	00 97       	sbiw	r24, 0x00	; 0
    1c22:	61 05       	cpc	r22, r1
    1c24:	71 05       	cpc	r23, r1
    1c26:	08 95       	ret
    1c28:	9b 01       	movw	r18, r22
    1c2a:	ac 01       	movw	r20, r24
    1c2c:	0a 2e       	mov	r0, r26
    1c2e:	06 94       	lsr	r0
    1c30:	57 95       	ror	r21
    1c32:	47 95       	ror	r20
    1c34:	37 95       	ror	r19
    1c36:	27 95       	ror	r18
    1c38:	ba 95       	dec	r27
    1c3a:	c9 f7       	brne	.-14     	; 0x1c2e <__ultoa_invert+0xa2>
    1c3c:	62 0f       	add	r22, r18
    1c3e:	73 1f       	adc	r23, r19
    1c40:	84 1f       	adc	r24, r20
    1c42:	95 1f       	adc	r25, r21
    1c44:	a0 1d       	adc	r26, r0
    1c46:	08 95       	ret

00001c48 <__prologue_saves__>:
    1c48:	2f 92       	push	r2
    1c4a:	3f 92       	push	r3
    1c4c:	4f 92       	push	r4
    1c4e:	5f 92       	push	r5
    1c50:	6f 92       	push	r6
    1c52:	7f 92       	push	r7
    1c54:	8f 92       	push	r8
    1c56:	9f 92       	push	r9
    1c58:	af 92       	push	r10
    1c5a:	bf 92       	push	r11
    1c5c:	cf 92       	push	r12
    1c5e:	df 92       	push	r13
    1c60:	ef 92       	push	r14
    1c62:	ff 92       	push	r15
    1c64:	0f 93       	push	r16
    1c66:	1f 93       	push	r17
    1c68:	cf 93       	push	r28
    1c6a:	df 93       	push	r29
    1c6c:	cd b7       	in	r28, 0x3d	; 61
    1c6e:	de b7       	in	r29, 0x3e	; 62
    1c70:	ca 1b       	sub	r28, r26
    1c72:	db 0b       	sbc	r29, r27
    1c74:	cd bf       	out	0x3d, r28	; 61
    1c76:	de bf       	out	0x3e, r29	; 62
    1c78:	09 94       	ijmp

00001c7a <__epilogue_restores__>:
    1c7a:	2a 88       	ldd	r2, Y+18	; 0x12
    1c7c:	39 88       	ldd	r3, Y+17	; 0x11
    1c7e:	48 88       	ldd	r4, Y+16	; 0x10
    1c80:	5f 84       	ldd	r5, Y+15	; 0x0f
    1c82:	6e 84       	ldd	r6, Y+14	; 0x0e
    1c84:	7d 84       	ldd	r7, Y+13	; 0x0d
    1c86:	8c 84       	ldd	r8, Y+12	; 0x0c
    1c88:	9b 84       	ldd	r9, Y+11	; 0x0b
    1c8a:	aa 84       	ldd	r10, Y+10	; 0x0a
    1c8c:	b9 84       	ldd	r11, Y+9	; 0x09
    1c8e:	c8 84       	ldd	r12, Y+8	; 0x08
    1c90:	df 80       	ldd	r13, Y+7	; 0x07
    1c92:	ee 80       	ldd	r14, Y+6	; 0x06
    1c94:	fd 80       	ldd	r15, Y+5	; 0x05
    1c96:	0c 81       	ldd	r16, Y+4	; 0x04
    1c98:	1b 81       	ldd	r17, Y+3	; 0x03
    1c9a:	aa 81       	ldd	r26, Y+2	; 0x02
    1c9c:	b9 81       	ldd	r27, Y+1	; 0x01
    1c9e:	ce 0f       	add	r28, r30
    1ca0:	d1 1d       	adc	r29, r1
    1ca2:	cd bf       	out	0x3d, r28	; 61
    1ca4:	de bf       	out	0x3e, r29	; 62
    1ca6:	ed 01       	movw	r28, r26
    1ca8:	08 95       	ret

00001caa <_exit>:
    1caa:	f8 94       	cli

00001cac <__stop_program>:
    1cac:	ff cf       	rjmp	.-2      	; 0x1cac <__stop_program>
